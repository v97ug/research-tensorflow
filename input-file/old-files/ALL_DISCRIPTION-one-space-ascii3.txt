 AbstractImageUploadImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AbstractImageUploadImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class AbstractImageUploadImpl java.lang.Object twitter4j.media.AbstractImageUploadImpl All Implemented Interfaces: ImageUpload Direct Known Subclasses: ImgLyUpload, MobypictureUpload, TwippleUpload, YFrogUpload abstract class AbstractImageUploadImpl extends java.lang.Object implements ImageUpload Since: Twitter4J 2.1.8 Author: R\u00e9my Rakic - remy.rakic at gmail.com, Takao Nakaguchi - takao.nakaguchi at gmail.com, withgod - noname at withgod.jp Field Summary Fields\u00a0 Modifier and Type Field and Description protected java.lang.String apiKey\u00a0 private HttpParameter[] appendParameter\u00a0 private HttpClient client\u00a0 private Configuration conf\u00a0 (package private) java.util.Map&lt;java.lang.String,java.lang.String&gt; headers\u00a0 (package private) HttpResponse httpResponse\u00a0 (package private) HttpParameter image\u00a0 private static Logger logger\u00a0 (package private) HttpParameter message\u00a0 (package private) OAuthAuthorization oauth\u00a0 (package private) HttpParameter[] postParameter\u00a0 (package private) static java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1_1\u00a0 (package private) java.lang.String uploadUrl\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description AbstractImageUploadImpl(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth)\u00a0 AbstractImageUploadImpl(Configuration\u00a0conf, java.lang.String\u00a0apiKey, OAuthAuthorization\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) HttpParameter[] appendHttpParameters(HttpParameter[]\u00a0src, HttpParameter[]\u00a0dst)\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 (package private) java.lang.String generateVerifyCredentialsAuthorizationHeader()\u00a0 protected java.lang.String generateVerifyCredentialsAuthorizationURL(java.lang.String\u00a0verifyCredentialsUrl)\u00a0 int hashCode()\u00a0 protected abstract java.lang.String postUpload()\u00a0 protected abstract void preUpload()\u00a0 java.lang.String toString()\u00a0 private java.lang.String upload()\u00a0 java.lang.String upload(java.io.File\u00a0file)\u00a0 java.lang.String upload(java.io.File\u00a0file, java.lang.String\u00a0message)\u00a0 java.lang.String upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody)\u00a0 java.lang.String upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody, java.lang.String\u00a0message)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail TWITTER_VERIFY_CREDENTIALS_JSON_V1_1 static final\u00a0java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1_1 See Also: Constant Field Values client private\u00a0HttpClient client conf private\u00a0Configuration conf apiKey protected\u00a0java.lang.String apiKey oauth OAuthAuthorization oauth uploadUrl java.lang.String uploadUrl postParameter HttpParameter[] postParameter appendParameter private\u00a0HttpParameter[] appendParameter image HttpParameter image message HttpParameter message headers final\u00a0java.util.Map&lt;java.lang.String,java.lang.String&gt; headers httpResponse HttpResponse httpResponse logger private static final\u00a0Logger logger Constructor Detail AbstractImageUploadImpl AbstractImageUploadImpl(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth) AbstractImageUploadImpl AbstractImageUploadImpl(Configuration\u00a0conf, java.lang.String\u00a0apiKey, OAuthAuthorization\u00a0oauth) Method Detail upload public\u00a0java.lang.String\u00a0upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload public\u00a0java.lang.String\u00a0upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody, java.lang.String\u00a0message) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload public\u00a0java.lang.String\u00a0upload(java.io.File\u00a0file, java.lang.String\u00a0message) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload public\u00a0java.lang.String\u00a0upload(java.io.File\u00a0file) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload private\u00a0java.lang.String\u00a0upload() throws TwitterException Throws: TwitterException preUpload protected abstract\u00a0void\u00a0preUpload() throws TwitterException Throws: TwitterException postUpload protected abstract\u00a0java.lang.String\u00a0postUpload() throws TwitterException Throws: TwitterException appendHttpParameters HttpParameter[]\u00a0appendHttpParameters(HttpParameter[]\u00a0src, HttpParameter[]\u00a0dst) generateVerifyCredentialsAuthorizationHeader java.lang.String\u00a0generateVerifyCredentialsAuthorizationHeader() generateVerifyCredentialsAuthorizationURL protected\u00a0java.lang.String\u00a0generateVerifyCredentialsAuthorizationURL(java.lang.String\u00a0verifyCredentialsUrl) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AccessToken &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AccessToken&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class AccessToken java.lang.Object twitter4j.auth.OAuthToken twitter4j.auth.AccessToken All Implemented Interfaces: java.io.Serializable public class AccessToken extends OAuthToken implements java.io.Serializable Representing authorized Access Token which is passed to the service provider in order to access protected resources. the token and token secret can be stored into some persistent stores such as file system or RDBMS for the further accesses. Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String screenName\u00a0 private static long serialVersionUID\u00a0 private long userId\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description AccessToken(HttpResponse\u00a0res)\u00a0 AccessToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret)\u00a0 AccessToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret, long\u00a0userId)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 java.lang.String getScreenName()\u00a0 long getUserId()\u00a0 int hashCode()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0twitter4j.auth.OAuthToken getParameter, getSecretKeySpec, getToken, getTokenSecret, setSecretKeySpec Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values screenName private\u00a0java.lang.String screenName userId private\u00a0long userId Constructor Detail AccessToken AccessToken(HttpResponse\u00a0res) throws TwitterException Throws: TwitterException AccessToken public\u00a0AccessToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret) AccessToken public\u00a0AccessToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret, long\u00a0userId) Method Detail getScreenName public\u00a0java.lang.String\u00a0getScreenName() Returns: screen name Since: Twitter4J 2.0.4 getUserId public\u00a0long\u00a0getUserId() Returns: user id Since: Twitter4J 2.0.4 equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0OAuthToken hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0OAuthToken toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0OAuthToken Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AccountSettings &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AccountSettings&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface AccountSettings All Superinterfaces: java.io.Serializable, TwitterResponse public interface AccountSettings extends TwitterResponse, java.io.Serializable Since: Twitter4J 2.1.9 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getLanguage() Returns the language used to render Twitter's UII for this user. java.lang.String getScreenName() Returns the user's screen name java.lang.String getSleepEndTime() Returns sleep end time. java.lang.String getSleepStartTime() Returns sleep start time. TimeZone getTimeZone() Returns the timezone configured for this user. Location[] getTrendLocations() Return the user's trend locations boolean isAlwaysUseHttps() Returns true if the wants to always access twitter using HTTPS. boolean isDiscoverableByEmail() Returns true if the user is discoverable by email. boolean isGeoEnabled() Return true if the user is enabling geo location boolean isSleepTimeEnabled() Returns true if the user enabled sleep time. Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail isSleepTimeEnabled boolean\u00a0isSleepTimeEnabled() Returns true if the user enabled sleep time. Returns: true if the user enabled sleep time getSleepStartTime java.lang.String\u00a0getSleepStartTime() Returns sleep start time. Returns: sleep start time getSleepEndTime java.lang.String\u00a0getSleepEndTime() Returns sleep end time. Returns: sleep end time getTrendLocations Location[]\u00a0getTrendLocations() Return the user's trend locations Returns: the user's trend locations isGeoEnabled boolean\u00a0isGeoEnabled() Return true if the user is enabling geo location Returns: true if the user is enabling geo location getTimeZone TimeZone\u00a0getTimeZone() Returns the timezone configured for this user. Returns: the timezone (formated as a Rails TimeZone name) getLanguage java.lang.String\u00a0getLanguage() Returns the language used to render Twitter's UII for this user. Returns: the language ISO 639-1 representation isDiscoverableByEmail boolean\u00a0isDiscoverableByEmail() Returns true if the user is discoverable by email. Returns: true if the user is discoverable by email isAlwaysUseHttps boolean\u00a0isAlwaysUseHttps() Returns true if the wants to always access twitter using HTTPS. Returns: true if the wants to always access twitter using HTTPS getScreenName java.lang.String\u00a0getScreenName() Returns the user's screen name Returns: the user's screen name Since: Twitter4J 3.0.5 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AccountTotals &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AccountTotals&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface AccountTotals All Superinterfaces: java.io.Serializable, TwitterResponse public interface AccountTotals extends TwitterResponse, java.io.Serializable Since: Twitter4J 2.1.9 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getFavorites() Returns the number of total favorites. int getFollowers() Returns the number of total followers. int getFriends() Returns the number of total friends. int getUpdates() Returns the number of total updates. Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getUpdates int\u00a0getUpdates() Returns the number of total updates. Returns: the number of total updates getFollowers int\u00a0getFollowers() Returns the number of total followers. Returns: the number of total followers getFavorites int\u00a0getFavorites() Returns the number of total favorites. Returns: the number of total favorites getFriends int\u00a0getFriends() Returns the number of total friends. Returns: the number of total friends Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AsyncOAuth2Support &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AsyncOAuth2Support&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Interface AsyncOAuth2Support All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface AsyncOAuth2Support Author: Amine Bezzarga - abezzarg at gmail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getOAuth2TokenAsync() Obtains an OAuth 2 Bearer token. Method Detail getOAuth2TokenAsync void\u00a0getOAuth2TokenAsync() Obtains an OAuth 2 Bearer token. See Also: POST oauth2/token Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AsyncOAuthSupport &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AsyncOAuthSupport&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Interface AsyncOAuthSupport All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface AsyncOAuthSupport Since: Twitter4J 3.0.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getOAuthAccessTokenAsync() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. void getOAuthAccessTokenAsync(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. void getOAuthAccessTokenAsync(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. void getOAuthAccessTokenAsync(java.lang.String\u00a0oauthVerifier) Retrieves an access token. void getOAuthAccessTokenAsync(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. void getOAuthRequestTokenAsync() Retrieves a request token void getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL) Retrieves a request token void getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) Retrieves a request token void getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Retrieves a request token Method Detail getOAuthRequestTokenAsync void\u00a0getOAuthRequestTokenAsync() Retrieves a request token Since: Twitter4J 3.0.0 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestTokenAsync void\u00a0getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL) Retrieves a request token Parameters: callbackURL - callback URL Since: Twitter4J 3.0.0 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestTokenAsync void\u00a0getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) Retrieves a request token Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. Since: Twitter4J 3.0.0 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestTokenAsync void\u00a0getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Retrieves a request token Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. xAuthMode - Set to reverse_auth to obtain a special request token to be used in the reverse auth process. Since: Twitter4J 3.0.0 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthAccessTokenAsync void\u00a0getOAuthAccessTokenAsync() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. Since: Twitter4J 3.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync void\u00a0getOAuthAccessTokenAsync(java.lang.String\u00a0oauthVerifier) Retrieves an access token. Parameters: oauthVerifier - OAuth verifier. AKA pin. Since: Twitter4J 3.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync void\u00a0getOAuthAccessTokenAsync(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. Parameters: requestToken - the request token Since: Twitter4J 3.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync void\u00a0getOAuthAccessTokenAsync(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. Parameters: requestToken - the request token oauthVerifier - OAuth verifier. AKA pin. Since: Twitter 3.0.0 See Also: OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync void\u00a0getOAuthAccessTokenAsync(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Parameters: screenName - the screen name password - the password Since: Twitter 3.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, xAuth Twitter Developers, POST oauth/access_token Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AsyncTwitter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AsyncTwitter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface AsyncTwitter All Superinterfaces: AsyncOAuth2Support, AsyncOAuthSupport, DirectMessagesResourcesAsync, FavoritesResourcesAsync, FriendsFollowersResourcesAsync, HelpResourcesAsync, ListsResourcesAsync, OAuth2Support, OAuthSupport, PlacesGeoResourcesAsync, SavedSearchesResourcesAsync, SearchResourceAsync, java.io.Serializable, SpamReportingResourceAsync, SuggestedUsersResourcesAsync, TimelinesResourcesAsync, TrendsResourcesAsync, TweetsResourcesAsync, TwitterBase, UsersResourcesAsync All Known Implementing Classes: AsyncTwitterImpl public interface AsyncTwitter extends java.io.Serializable, OAuthSupport, OAuth2Support, AsyncOAuthSupport, AsyncOAuth2Support, TwitterBase, TimelinesResourcesAsync, TweetsResourcesAsync, SearchResourceAsync, DirectMessagesResourcesAsync, FriendsFollowersResourcesAsync, UsersResourcesAsync, SuggestedUsersResourcesAsync, FavoritesResourcesAsync, ListsResourcesAsync, SavedSearchesResourcesAsync, PlacesGeoResourcesAsync, TrendsResourcesAsync, SpamReportingResourceAsync, HelpResourcesAsync Since: Twitter4J 2.2.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void addListener(TwitterListener\u00a0listener) Adds twitter listener void shutdown() Shuts down internal dispatcher thread shared across all AsyncTwitter instances. Methods inherited from interface\u00a0twitter4j.auth.OAuthSupport getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, setOAuthAccessToken, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.auth.OAuth2Support getOAuth2Token, invalidateOAuth2Token, setOAuth2Token, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.auth.AsyncOAuthSupport getOAuthAccessTokenAsync, getOAuthAccessTokenAsync, getOAuthAccessTokenAsync, getOAuthAccessTokenAsync, getOAuthAccessTokenAsync, getOAuthRequestTokenAsync, getOAuthRequestTokenAsync, getOAuthRequestTokenAsync, getOAuthRequestTokenAsync Methods inherited from interface\u00a0twitter4j.auth.AsyncOAuth2Support getOAuth2TokenAsync Methods inherited from interface\u00a0twitter4j.TwitterBase addRateLimitStatusListener, getAuthorization, getConfiguration, getId, getScreenName, onRateLimitReached, onRateLimitStatus Methods inherited from interface\u00a0twitter4j.api.TimelinesResourcesAsync getHomeTimeline, getHomeTimeline, getMentions, getMentions, getRetweetsOfMe, getRetweetsOfMe, getUserTimeline, getUserTimeline, getUserTimeline, getUserTimeline, getUserTimeline, getUserTimeline Methods inherited from interface\u00a0twitter4j.api.TweetsResourcesAsync destroyStatus, getOEmbed, getRetweets, lookup, retweetStatus, showStatus, updateStatus, updateStatus Methods inherited from interface\u00a0twitter4j.api.SearchResourceAsync search Methods inherited from interface\u00a0twitter4j.api.DirectMessagesResourcesAsync destroyDirectMessage, getDirectMessages, getDirectMessages, getSentDirectMessages, getSentDirectMessages, sendDirectMessage, sendDirectMessage, showDirectMessage Methods inherited from interface\u00a0twitter4j.api.FriendsFollowersResourcesAsync createFriendship, createFriendship, createFriendship, createFriendship, destroyFriendship, destroyFriendship, getFollowersIDs, getFollowersIDs, getFollowersIDs, getFollowersList, getFollowersList, getFriendsIDs, getFriendsIDs, getFriendsIDs, getFriendsList, getFriendsList, getIncomingFriendships, getOutgoingFriendships, lookupFriendships, lookupFriendships, showFriendship, showFriendship, updateFriendship, updateFriendship Methods inherited from interface\u00a0twitter4j.api.UsersResourcesAsync createBlock, createBlock, createMute, createMute, destroyBlock, destroyBlock, destroyMute, destroyMute, getAccountSettings, getBlocksIDs, getBlocksIDs, getBlocksList, getBlocksList, getContributees, getContributees, getContributors, getContributors, getMutesIDs, getMutesList, lookupUsers, lookupUsers, removeProfileBanner, searchUsers, showUser, showUser, updateAccountSettings, updateProfile, updateProfileBackgroundImage, updateProfileBackgroundImage, updateProfileBanner, updateProfileBanner, updateProfileColors, updateProfileImage, updateProfileImage, verifyCredentials Methods inherited from interface\u00a0twitter4j.api.SuggestedUsersResourcesAsync getMemberSuggestions, getSuggestedUserCategories, getUserSuggestions Methods inherited from interface\u00a0twitter4j.api.FavoritesResourcesAsync createFavorite, destroyFavorite, getFavorites, getFavorites, getFavorites, getFavorites, getFavorites, getFavorites Methods inherited from interface\u00a0twitter4j.api.ListsResourcesAsync createUserList, createUserListMember, createUserListMember, createUserListMembers, createUserListMembers, createUserListMembers, createUserListMembers, createUserListSubscription, createUserListSubscription, destroyUserList, destroyUserList, destroyUserListMember, destroyUserListMember, destroyUserListSubscription, destroyUserListSubscription, getUserListMembers, getUserListMembers, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserLists, getUserLists, getUserListStatuses, getUserListStatuses, getUserListSubscribers, getUserListSubscribers, getUserListSubscriptions, showUserList, showUserList, showUserListMembership, showUserListMembership, showUserListSubscription, showUserListSubscription, updateUserList, updateUserList Methods inherited from interface\u00a0twitter4j.api.SavedSearchesResourcesAsync createSavedSearch, destroySavedSearch, getSavedSearches, showSavedSearch Methods inherited from interface\u00a0twitter4j.api.PlacesGeoResourcesAsync getGeoDetails, getSimilarPlaces, reverseGeoCode, searchPlaces Methods inherited from interface\u00a0twitter4j.api.TrendsResourcesAsync getAvailableTrends, getClosestTrends, getPlaceTrends Methods inherited from interface\u00a0twitter4j.api.SpamReportingResourceAsync reportSpam, reportSpam Methods inherited from interface\u00a0twitter4j.api.HelpResourcesAsync getAPIConfiguration, getLanguages, getPrivacyPolicy, getRateLimitStatus, getRateLimitStatus, getTermsOfService Method Detail addListener void\u00a0addListener(TwitterListener\u00a0listener) Adds twitter listener Parameters: listener - TwitterListener shutdown void\u00a0shutdown() Shuts down internal dispatcher thread shared across all AsyncTwitter instances. Since: Twitter4J 2.1.9 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AsyncTwitterFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AsyncTwitterFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class AsyncTwitterFactory java.lang.Object twitter4j.AsyncTwitterFactory All Implemented Interfaces: java.io.Serializable public final class AsyncTwitterFactory extends java.lang.Object implements java.io.Serializable A factory class for AsyncTwitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that currently AsyncTwitter is NOT compatible with Google App Engine as it is maintaining threads internally. Since: Twitter4J 2.1.0 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private Configuration conf\u00a0 private static long serialVersionUID\u00a0 private static AsyncTwitter SINGLETON\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description AsyncTwitterFactory() Creates an AsyncTwitterFactory with the root configuration, with no listener. AsyncTwitterFactory(Configuration\u00a0conf) Creates an AsyncTwitterFactory with the given configuration. AsyncTwitterFactory(java.lang.String\u00a0configTreePath) Creates a AsyncTwitterFactory with the specified config tree, with given listener Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description AsyncTwitter getInstance() Returns an instance associated with the configuration bound to this factory. AsyncTwitter getInstance(AccessToken\u00a0accessToken) Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance. AsyncTwitter getInstance(Authorization\u00a0auth)\u00a0 AsyncTwitter getInstance(Twitter\u00a0twitter) a kind of copy factory method constructs an AsyncTwitter from Twitter instance static AsyncTwitter getSingleton() Returns default singleton AsyncTwitter instance. Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf private final\u00a0Configuration conf SINGLETON private static final\u00a0AsyncTwitter SINGLETON Constructor Detail AsyncTwitterFactory public\u00a0AsyncTwitterFactory() Creates an AsyncTwitterFactory with the root configuration, with no listener. AsyncTwitter instances will not perform callbacks when using this constructor. AsyncTwitterFactory public\u00a0AsyncTwitterFactory(Configuration\u00a0conf) Creates an AsyncTwitterFactory with the given configuration. Parameters: conf - the configuration to use Since: Twitter4J 2.1.1 AsyncTwitterFactory public\u00a0AsyncTwitterFactory(java.lang.String\u00a0configTreePath) Creates a AsyncTwitterFactory with the specified config tree, with given listener Parameters: configTreePath - the path Since: Twitter4J 2.1.12 Method Detail getInstance public\u00a0AsyncTwitter\u00a0getInstance() Returns an instance associated with the configuration bound to this factory. Returns: default singleton instance getInstance public\u00a0AsyncTwitter\u00a0getInstance(AccessToken\u00a0accessToken) Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance. Parameters: accessToken - access token Returns: an instance getInstance public\u00a0AsyncTwitter\u00a0getInstance(Authorization\u00a0auth) Parameters: auth - authorization Returns: an instance getInstance public\u00a0AsyncTwitter\u00a0getInstance(Twitter\u00a0twitter) a kind of copy factory method constructs an AsyncTwitter from Twitter instance Parameters: twitter - Twitter instance Returns: an instance getSingleton public static\u00a0AsyncTwitter\u00a0getSingleton() Returns default singleton AsyncTwitter instance. Returns: default singleton AsyncTwitter instance Since: Twitter4J 2.2.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AsyncTwitterImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AsyncTwitterImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10,&quot;i39&quot;:10,&quot;i40&quot;:10,&quot;i41&quot;:10,&quot;i42&quot;:10,&quot;i43&quot;:10,&quot;i44&quot;:10,&quot;i45&quot;:10,&quot;i46&quot;:10,&quot;i47&quot;:10,&quot;i48&quot;:10,&quot;i49&quot;:10,&quot;i50&quot;:10,&quot;i51&quot;:10,&quot;i52&quot;:10,&quot;i53&quot;:10,&quot;i54&quot;:10,&quot;i55&quot;:10,&quot;i56&quot;:10,&quot;i57&quot;:10,&quot;i58&quot;:10,&quot;i59&quot;:10,&quot;i60&quot;:10,&quot;i61&quot;:10,&quot;i62&quot;:10,&quot;i63&quot;:10,&quot;i64&quot;:10,&quot;i65&quot;:10,&quot;i66&quot;:10,&quot;i67&quot;:10,&quot;i68&quot;:10,&quot;i69&quot;:10,&quot;i70&quot;:10,&quot;i71&quot;:10,&quot;i72&quot;:10,&quot;i73&quot;:10,&quot;i74&quot;:10,&quot;i75&quot;:10,&quot;i76&quot;:10,&quot;i77&quot;:10,&quot;i78&quot;:10,&quot;i79&quot;:10,&quot;i80&quot;:10,&quot;i81&quot;:10,&quot;i82&quot;:10,&quot;i83&quot;:10,&quot;i84&quot;:10,&quot;i85&quot;:10,&quot;i86&quot;:10,&quot;i87&quot;:10,&quot;i88&quot;:10,&quot;i89&quot;:10,&quot;i90&quot;:10,&quot;i91&quot;:10,&quot;i92&quot;:10,&quot;i93&quot;:10,&quot;i94&quot;:10,&quot;i95&quot;:10,&quot;i96&quot;:10,&quot;i97&quot;:10,&quot;i98&quot;:10,&quot;i99&quot;:10,&quot;i100&quot;:10,&quot;i101&quot;:10,&quot;i102&quot;:10,&quot;i103&quot;:10,&quot;i104&quot;:10,&quot;i105&quot;:10,&quot;i106&quot;:10,&quot;i107&quot;:10,&quot;i108&quot;:10,&quot;i109&quot;:10,&quot;i110&quot;:10,&quot;i111&quot;:10,&quot;i112&quot;:10,&quot;i113&quot;:10,&quot;i114&quot;:10,&quot;i115&quot;:10,&quot;i116&quot;:10,&quot;i117&quot;:10,&quot;i118&quot;:10,&quot;i119&quot;:10,&quot;i120&quot;:10,&quot;i121&quot;:10,&quot;i122&quot;:10,&quot;i123&quot;:10,&quot;i124&quot;:10,&quot;i125&quot;:10,&quot;i126&quot;:10,&quot;i127&quot;:10,&quot;i128&quot;:10,&quot;i129&quot;:10,&quot;i130&quot;:10,&quot;i131&quot;:10,&quot;i132&quot;:10,&quot;i133&quot;:10,&quot;i134&quot;:10,&quot;i135&quot;:10,&quot;i136&quot;:10,&quot;i137&quot;:10,&quot;i138&quot;:10,&quot;i139&quot;:10,&quot;i140&quot;:10,&quot;i141&quot;:10,&quot;i142&quot;:10,&quot;i143&quot;:10,&quot;i144&quot;:10,&quot;i145&quot;:10,&quot;i146&quot;:10,&quot;i147&quot;:10,&quot;i148&quot;:10,&quot;i149&quot;:10,&quot;i150&quot;:10,&quot;i151&quot;:10,&quot;i152&quot;:10,&quot;i153&quot;:10,&quot;i154&quot;:10,&quot;i155&quot;:10,&quot;i156&quot;:10,&quot;i157&quot;:10,&quot;i158&quot;:10,&quot;i159&quot;:10,&quot;i160&quot;:10,&quot;i161&quot;:10,&quot;i162&quot;:10,&quot;i163&quot;:10,&quot;i164&quot;:10,&quot;i165&quot;:10,&quot;i166&quot;:10,&quot;i167&quot;:10,&quot;i168&quot;:10,&quot;i169&quot;:10,&quot;i170&quot;:10,&quot;i171&quot;:10,&quot;i172&quot;:10,&quot;i173&quot;:10,&quot;i174&quot;:10,&quot;i175&quot;:10,&quot;i176&quot;:10,&quot;i177&quot;:10,&quot;i178&quot;:10,&quot;i179&quot;:10,&quot;i180&quot;:10,&quot;i181&quot;:10,&quot;i182&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class AsyncTwitterImpl java.lang.Object twitter4j.TwitterBaseImpl twitter4j.AsyncTwitterImpl All Implemented Interfaces: java.io.Serializable, DirectMessagesResourcesAsync, FavoritesResourcesAsync, FriendsFollowersResourcesAsync, HelpResourcesAsync, ListsResourcesAsync, PlacesGeoResourcesAsync, SavedSearchesResourcesAsync, SearchResourceAsync, SpamReportingResourceAsync, SuggestedUsersResourcesAsync, TimelinesResourcesAsync, TrendsResourcesAsync, TweetsResourcesAsync, UsersResourcesAsync, AsyncTwitter, AsyncOAuth2Support, AsyncOAuthSupport, OAuth2Support, OAuthSupport, TwitterBase class AsyncTwitterImpl extends TwitterBaseImpl implements AsyncTwitter Twitter API with a series of asynchronous APIs. With this class, you can call TwitterAPI asynchronously. Note that currently this class is NOT compatible with Google App Engine as it is maintaining threads internally. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purporse. Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description (package private) class\u00a0 AsyncTwitterImpl.AsyncTask\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private static Dispatcher dispatcher\u00a0 private java.util.List&lt;TwitterListener&gt; listeners\u00a0 private static long serialVersionUID\u00a0 private Twitter twitter\u00a0 Fields inherited from class\u00a0twitter4j.TwitterBaseImpl auth, conf, factory, http Constructor Summary Constructors\u00a0 Constructor and Description AsyncTwitterImpl(Configuration\u00a0conf, Authorization\u00a0auth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void addListener(TwitterListener\u00a0listener) Adds twitter listener void createBlock(long\u00a0userId) Blocks the user specified in the ID parameter as the authenticating user. void createBlock(java.lang.String\u00a0screenName) Blocks the user specified in the ID parameter as the authenticating user. void createFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. void createFriendship(long\u00a0userId) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createFriendship(long\u00a0userId, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createMute(long\u00a0userId) Mutes the user specified in the ID parameter as the authenticating user. void createMute(java.lang.String\u00a0screenName) Mutes the user specified in the screen name parameter as the authenticating user. void createSavedSearch(java.lang.String\u00a0query) Creates a saved search for the authenticated user. void createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) Creates a new list for the authenticated user. void createUserListMember(long\u00a0listId, long\u00a0userId) Adds a member to a list. void createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. void createUserListMembers(long\u00a0listId, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListSubscription(long\u00a0listId) Make the authenticated user follow the specified list. void createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. void destroyBlock(long\u00a0userId) Un-blocks the user specified in the ID parameter as the authenticating user. void destroyBlock(java.lang.String\u00a0screenName) Un-blocks the user specified in the ID parameter as the authenticating user. void destroyDirectMessage(long\u00a0id) Destroys the direct message specified in the required ID parameter. void destroyFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. void destroyFriendship(long\u00a0userId) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. void destroyFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. void destroyMute(long\u00a0userId) Un-mutes the user specified in the ID parameter as the authenticating user. void destroyMute(java.lang.String\u00a0screenName) Un-mutes the user specified in the screen name parameter as the authenticating user. void destroySavedSearch(int\u00a0id) Destroys a saved search for the authenticated user. void destroyStatus(long\u00a0statusId) Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. void destroyUserList(long\u00a0listId) Deletes the specified list. void destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Deletes the specified list. void destroyUserListMember(long\u00a0listId, long\u00a0userId) Removes the specified member from the list. void destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. void destroyUserListSubscription(long\u00a0listId) Unsubscribes the authenticated user form the specified list. void destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. boolean equals(java.lang.Object\u00a0o)\u00a0 void getAccountSettings() Returns the current trend, geo and sleep time information for the authenticating user. void getAPIConfiguration() Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. void getAvailableTrends() Retrieves the locations that Twitter has trending topic information for. void getBlocksIDs() Returns an array of numeric user ids the authenticating user is blocking. void getBlocksIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is blocking. void getBlocksList() Returns a list of user objects that the authenticating user is blocking. void getBlocksList(long\u00a0cursor) Returns a list of user objects that the authenticating user is blocking. void getClosestTrends(GeoLocation\u00a0location) Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. void getContributees(long\u00a0userId) Returns an array of users that the specified user can contribute to. void getContributees(java.lang.String\u00a0screenName) Returns an array of users that the specified user can contribute to. void getContributors(long\u00a0userId) Returns an array of users who can contribute to the specified account. void getContributors(java.lang.String\u00a0screenName) Returns an array of users who can contribute to the specified account. void getDirectMessages() Returns a list of the direct messages sent to the authenticating user. void getDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent to the authenticating user. private Dispatcher getDispatcher()\u00a0 void getFavorites() Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(long\u00a0userId) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(java.lang.String\u00a0screenName) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFollowersIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. void getFollowersIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. void getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. void getFollowersList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getFriendsIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the authenticating user is following. void getFriendsIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. void getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. void getFriendsList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getGeoDetails(java.lang.String\u00a0id) Find out more details of a place that was returned from the PlacesGeoResourcesAsync.reverseGeoCode(twitter4j.GeoQuery) method. void getHomeTimeline() Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. void getHomeTimeline(Paging\u00a0paging) Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. void getIncomingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. void getLanguages() Returns the list of languages supported by Twitter along with their ISO 639-1 code. void getMemberSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. void getMentions() Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. void getMentions(Paging\u00a0paging) Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. void getMutesIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is muting. void getMutesList(long\u00a0cursor) Returns a list of user objects that the authenticating user is muting. OAuth2Token getOAuth2Token() Obtains an OAuth 2 Bearer token. void getOAuth2TokenAsync() Obtains an OAuth 2 Bearer token. AccessToken getOAuthAccessToken() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) Retrieves an access token. AccessToken getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. void getOAuthAccessTokenAsync() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. void getOAuthAccessTokenAsync(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. void getOAuthAccessTokenAsync(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. void getOAuthAccessTokenAsync(java.lang.String\u00a0oauthVerifier) Retrieves an access token. void getOAuthAccessTokenAsync(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. RequestToken getOAuthRequestToken() Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackUrl) Retrieves a request token void getOAuthRequestTokenAsync() Retrieves a request token void getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL) Retrieves a request token void getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) Retrieves a request token void getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Retrieves a request token void getOEmbed(OEmbedRequest\u00a0req) Returns information allowing the creation of an embedded representation of a Tweet on third party sites. void getOutgoingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. void getPlaceTrends(int\u00a0woeid) Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. void getPrivacyPolicy() Returns Twitter's Privacy Policy. void getRateLimitStatus() Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. void getRateLimitStatus(java.lang.String...\u00a0resources) Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. void getRetweets(long\u00a0statusId) Returns up to 100 of the first retweets of a given tweet. void getRetweetsOfMe() Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. void getRetweetsOfMe(Paging\u00a0paging) Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. void getSavedSearches() Returns the authenticated user's saved search queries. void getSentDirectMessages() Returns a list of the direct messages sent by the authenticating user. void getSentDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent by the authenticating user. void getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) Locates places near the given coordinates which are similar in name. void getSuggestedUserCategories() Access to Twitter's suggested user list. void getTermsOfService() Returns Twitter's' Terms of Service. void getUserListMembers(long\u00a0listId, long\u00a0cursor) Returns the members of the specified list. void getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. void getUserListMemberships(long\u00a0cursor) List the lists the authenticating user has been added to. void getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) List the lists the specified user has been added to. void getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. void getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) List the lists the specified user has been added to. void getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. void getUserLists(long\u00a0listOwnerUserId) List the lists of the specified user. void getUserLists(java.lang.String\u00a0listOwnerScreenName) List the lists of the specified user. void getUserListStatuses(long\u00a0listId, Paging\u00a0paging) Show tweet timeline for members of the specified list. void getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. void getUserListSubscribers(long\u00a0listId, long\u00a0cursor) Returns the subscribers of the specified list. void getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. void getUserListSubscriptions(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) List the lists the specified user follows. void getUserSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. void getUserTimeline() Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(long\u00a0userId) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(java.lang.String\u00a0screenName) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. int hashCode()\u00a0 void invalidateOAuth2Token() Revokes an issued OAuth 2 Bearer Token. void lookup(long...\u00a0ids) Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. void lookupFriendships(long...\u00a0ids) Returns the relationship of the authenticating user to the specified users. void lookupFriendships(java.lang.String...\u00a0screenNames) Returns the relationship of the authenticating user to the specified users. void lookupUsers(long...\u00a0ids) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. void lookupUsers(java.lang.String...\u00a0screenNames) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. void removeProfileBanner() Removes the uploaded profile banner for the authenticating user. void reportSpam(long\u00a0userId) The user specified in the id is blocked by the authenticated user and reported as a spammer. void reportSpam(java.lang.String\u00a0screenName) The user specified in the id is blocked by the authenticated user and reported as a spammer. void retweetStatus(long\u00a0statusId) Retweets a tweet. void reverseGeoCode(GeoQuery\u00a0query) Search for places (cities and neighborhoods) that can be attached to a statuses/update. void search(Query\u00a0query) Returns tweets that match a specified query. void searchPlaces(GeoQuery\u00a0query) Search for places that can be attached to a statuses/update. void searchUsers(java.lang.String\u00a0query, int\u00a0page) Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. void sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. void sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. void setOAuth2Token(OAuth2Token\u00a0oauth2Token) Sets the OAuth 2 Bearer token. void setOAuthAccessToken(AccessToken\u00a0accessToken) Sets the access token void setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) sets the OAuth consumer key and consumer secret void showDirectMessage(long\u00a0id) Returns a single direct message, specified by an id parameter. void showFriendship(long\u00a0sourceId, long\u00a0targetId) Returns detailed information about the relationship between two users. void showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) Returns detailed information about the relationship between two users. void showSavedSearch(int\u00a0id) Retrieve the data for a saved search owned by the authenticating user specified by the given id. void showStatus(long\u00a0id) Returns a single status, specified by the id parameter below. void showUser(long\u00a0userId) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. void showUser(java.lang.String\u00a0screenName) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. void showUserList(long\u00a0listId) Show the specified list. void showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Show the specified list. void showUserListMembership(long\u00a0listId, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json void showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json void showUserListSubscription(long\u00a0listId, long\u00a0userId) Check if the specified user is a subscriber of the specified list. void showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. void shutdown() Shuts down internal dispatcher thread shared across all AsyncTwitter instances. java.lang.String toString()\u00a0 void updateAccountSettings(java.lang.Integer\u00a0trend_locationWoeid, java.lang.Boolean\u00a0sleep_timeEnabled, java.lang.String\u00a0start_sleepTime, java.lang.String\u00a0end_sleepTime, java.lang.String\u00a0time_zone, java.lang.String\u00a0lang) Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. void updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweet) Allows you to enable or disable retweets and device notifications from the specified user. void updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweet) Allows you to enable or disable retweets and device notifications from the specified user. void updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. void updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. void updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. void updateProfileBanner(java.io.File\u00a0image) Uploads a profile banner on behalf of the authenticating user. void updateProfileBanner(java.io.InputStream\u00a0image) Uploads a profile banner on behalf of the authenticating user. void updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. void updateProfileImage(java.io.File\u00a0image) Updates the authenticating user's profile image. void updateProfileImage(java.io.InputStream\u00a0image) Updates the authenticating user's profile image. void updateStatus(StatusUpdate\u00a0latestStatus) Updates the authenticating user's status. void updateStatus(java.lang.String\u00a0statusText) Updates the authenticating user's status. void updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. void updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. void verifyCredentials() Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Methods inherited from class\u00a0twitter4j.TwitterBaseImpl addRateLimitStatusListener, ensureAuthorizationEnabled, ensureOAuthEnabled, fillInIDAndScreenName, getAuthorization, getConfiguration, getId, getOAuthRequestToken, getOAuthRequestToken, getScreenName, httpResponseReceived, onRateLimitReached, onRateLimitStatus, setFactory Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Methods inherited from interface\u00a0twitter4j.auth.OAuthSupport getOAuthRequestToken, getOAuthRequestToken Methods inherited from interface\u00a0twitter4j.TwitterBase addRateLimitStatusListener, getAuthorization, getConfiguration, getId, getScreenName, onRateLimitReached, onRateLimitStatus Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values twitter private final\u00a0Twitter twitter listeners private final\u00a0java.util.List&lt;TwitterListener&gt; listeners dispatcher private static transient volatile\u00a0Dispatcher dispatcher Constructor Detail AsyncTwitterImpl AsyncTwitterImpl(Configuration\u00a0conf, Authorization\u00a0auth) Method Detail addListener public\u00a0void\u00a0addListener(TwitterListener\u00a0listener) Description copied from interface:\u00a0AsyncTwitter Adds twitter listener Specified by: addListener\u00a0in interface\u00a0AsyncTwitter Parameters: listener - TwitterListener getMentions public\u00a0void\u00a0getMentions() Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. Replies are only available to the authenticating user; you can not request a list of replies to another user whether public or protected. This method calls https://api.twitter.com/1.1/statuses/mentions Specified by: getMentions\u00a0in interface\u00a0TimelinesResourcesAsync See Also: GET statuses/mentions Twitter Developers getMentions public\u00a0void\u00a0getMentions(Paging\u00a0paging) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. Replies are only available to the authenticating user; you can not request a list of replies to another user whether public or protected. This method calls https://api.twitter.com/1.1/statuses/mentions Specified by: getMentions\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: paging - controls pagination See Also: GET statuses/mentions Twitter Developers getUserTimeline public\u00a0void\u00a0getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: screenName - Specifies the screen name of the user for whom to return the user_timeline. paging - controls pagination See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0void\u00a0getUserTimeline(long\u00a0userId, Paging\u00a0paging) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: userId - Specifies the ID of the user for whom to return the user_timeline. paging - controls pagination See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0void\u00a0getUserTimeline(Paging\u00a0paging) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: paging - controls pagination See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0void\u00a0getUserTimeline(java.lang.String\u00a0screenName) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: screenName - Specifies the screen name of the user for whom to return the user_timeline. See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0void\u00a0getUserTimeline(long\u00a0userId) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: userId - Specifies the ID of the user for whom to return the user_timeline. See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0void\u00a0getUserTimeline() Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResourcesAsync See Also: GET statuses/user_timeline Twitter Developers getHomeTimeline public\u00a0void\u00a0getHomeTimeline() Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Specified by: getHomeTimeline\u00a0in interface\u00a0TimelinesResourcesAsync See Also: GET statuses/home_timeline Twitter Developers getHomeTimeline public\u00a0void\u00a0getHomeTimeline(Paging\u00a0paging) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Specified by: getHomeTimeline\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: paging - controls pagination See Also: GET statuses/home_timeline Twitter Developers getRetweetsOfMe public\u00a0void\u00a0getRetweetsOfMe() Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Specified by: getRetweetsOfMe\u00a0in interface\u00a0TimelinesResourcesAsync See Also: GET statuses/retweets_of_me Twitter Developers getRetweetsOfMe public\u00a0void\u00a0getRetweetsOfMe(Paging\u00a0paging) Description copied from interface:\u00a0TimelinesResourcesAsync Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Specified by: getRetweetsOfMe\u00a0in interface\u00a0TimelinesResourcesAsync Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. See Also: GET statuses/retweets_of_me Twitter Developers getRetweets public\u00a0void\u00a0getRetweets(long\u00a0statusId) Description copied from interface:\u00a0TweetsResourcesAsync Returns up to 100 of the first retweets of a given tweet. This method calls https://api.twitter.com/1.1/statuses/retweets Specified by: getRetweets\u00a0in interface\u00a0TweetsResourcesAsync Parameters: statusId - The numerical ID of the tweet you want the retweets of. See Also: Tweets Resources \u203a statuses/retweets/:id showStatus public\u00a0void\u00a0showStatus(long\u00a0id) Description copied from interface:\u00a0TweetsResourcesAsync Returns a single status, specified by the id parameter below. The status's author will be returned inline. This method calls https://api.twitter.com/1.1/statuses/show Specified by: showStatus\u00a0in interface\u00a0TweetsResourcesAsync Parameters: id - int See Also: GET statuses/show/:id Twitter Developers destroyStatus public\u00a0void\u00a0destroyStatus(long\u00a0statusId) Description copied from interface:\u00a0TweetsResourcesAsync Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. This method calls https://api.twitter.com/1.1/statuses/destroy Specified by: destroyStatus\u00a0in interface\u00a0TweetsResourcesAsync Parameters: statusId - String See Also: POST statuses/destroy/:id Twitter Developers updateStatus public\u00a0void\u00a0updateStatus(java.lang.String\u00a0statusText) Description copied from interface:\u00a0TweetsResourcesAsync Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. This method calls https://api.twitter.com/1.1/statuses/update Specified by: updateStatus\u00a0in interface\u00a0TweetsResourcesAsync Parameters: statusText - String See Also: POST statuses/update Twitter Developers updateStatus public\u00a0void\u00a0updateStatus(StatusUpdate\u00a0latestStatus) Description copied from interface:\u00a0TweetsResourcesAsync Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. Statuses over 140 characters will be forcibly truncated. This method calls https://api.twitter.com/1.1/statuses/update Specified by: updateStatus\u00a0in interface\u00a0TweetsResourcesAsync Parameters: latestStatus - the latest status to be updated. See Also: POST statuses/update Twitter Developers retweetStatus public\u00a0void\u00a0retweetStatus(long\u00a0statusId) Description copied from interface:\u00a0TweetsResourcesAsync Retweets a tweet. Returns the original tweet with retweet details embedded. This method calls https://api.twitter.com/1.1/statuses/retweet Specified by: retweetStatus\u00a0in interface\u00a0TweetsResourcesAsync Parameters: statusId - The ID of the status to retweet. See Also: POST statuses/retweet/:id Twitter Developers getOEmbed public\u00a0void\u00a0getOEmbed(OEmbedRequest\u00a0req) Description copied from interface:\u00a0TweetsResourcesAsync Returns information allowing the creation of an embedded representation of a Tweet on third party sites. See the oEmbed specification for information about the response format. While this endpoint allows a bit of customization for the final appearance of the embedded Tweet, be aware that the appearance of the rendered Tweet may change over time to be consistent with Twitter's Display Requirements. Do not rely on any class or id parameters to stay constant in the returned markup. This method calls https://api.twitter.com/1.1/statuses/oembed.json Specified by: getOEmbed\u00a0in interface\u00a0TweetsResourcesAsync Parameters: req - request See Also: GET statuses/oembed Twitter Developers lookup public\u00a0void\u00a0lookup(long...\u00a0ids) Description copied from interface:\u00a0TweetsResourcesAsync Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. This method is especially useful to get the details (hydrate) a collection of Tweet IDs. This method calls https://api.twitter.com/1.1/statuses/lookup.json Specified by: lookup\u00a0in interface\u00a0TweetsResourcesAsync Parameters: ids - array of the ids to lookup See Also: GET statuses/lookup search public\u00a0void\u00a0search(Query\u00a0query) Description copied from interface:\u00a0SearchResourceAsync Returns tweets that match a specified query. This method calls http://search.twitter.com/search.json Specified by: search\u00a0in interface\u00a0SearchResourceAsync Parameters: query - - the search condition See Also: GET search Twitter Developers, Twitter API / Search Operators getDirectMessages public\u00a0void\u00a0getDirectMessages() Description copied from interface:\u00a0DirectMessagesResourcesAsync Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Specified by: getDirectMessages\u00a0in interface\u00a0DirectMessagesResourcesAsync See Also: GET direct_messages Twitter Developers getDirectMessages public\u00a0void\u00a0getDirectMessages(Paging\u00a0paging) Description copied from interface:\u00a0DirectMessagesResourcesAsync Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Specified by: getDirectMessages\u00a0in interface\u00a0DirectMessagesResourcesAsync Parameters: paging - controls pagination See Also: GET direct_messages Twitter Developers getSentDirectMessages public\u00a0void\u00a0getSentDirectMessages() Description copied from interface:\u00a0DirectMessagesResourcesAsync Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Specified by: getSentDirectMessages\u00a0in interface\u00a0DirectMessagesResourcesAsync See Also: GET direct_messages/sent Twitter Developers getSentDirectMessages public\u00a0void\u00a0getSentDirectMessages(Paging\u00a0paging) Description copied from interface:\u00a0DirectMessagesResourcesAsync Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Specified by: getSentDirectMessages\u00a0in interface\u00a0DirectMessagesResourcesAsync Parameters: paging - controls pagination See Also: GET direct_messages/sent Twitter Developers showDirectMessage public\u00a0void\u00a0showDirectMessage(long\u00a0id) Description copied from interface:\u00a0DirectMessagesResourcesAsync Returns a single direct message, specified by an id parameter. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/direct_messages/show/:id.json Specified by: showDirectMessage\u00a0in interface\u00a0DirectMessagesResourcesAsync Parameters: id - message id See Also: #newtwitter and the API - Twitter API Announcements Google Group destroyDirectMessage public\u00a0void\u00a0destroyDirectMessage(long\u00a0id) Description copied from interface:\u00a0DirectMessagesResourcesAsync Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message. This method calls https://api.twitter.com/1.1/direct_messages/destroy Specified by: destroyDirectMessage\u00a0in interface\u00a0DirectMessagesResourcesAsync Parameters: id - int See Also: POST direct_messages/destroy/:id Twitter Developers sendDirectMessage public\u00a0void\u00a0sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) Description copied from interface:\u00a0DirectMessagesResourcesAsync Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Specified by: sendDirectMessage\u00a0in interface\u00a0DirectMessagesResourcesAsync Parameters: userId - the screen name of the user to whom send the direct message text - The text of your direct message. See Also: POST direct_messages/new Twitter Developers sendDirectMessage public\u00a0void\u00a0sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) Description copied from interface:\u00a0DirectMessagesResourcesAsync Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Specified by: sendDirectMessage\u00a0in interface\u00a0DirectMessagesResourcesAsync Parameters: screenName - the screen name of the user to whom send the direct message text - The text of your direct message. See Also: POST direct_messages/new Twitter Developers getFriendsIDs public\u00a0void\u00a0getFriendsIDs(long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user the authenticating user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. See Also: GET friends/ids Twitter Developers getFriendsIDs public\u00a0void\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - Specifies the ID of the user for whom to return the friends list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. See Also: GET friends/ids Twitter Developers getFriendsIDs public\u00a0void\u00a0getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - Specifies the screen name of the user for whom to return the friends list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. See Also: GET friends/ids Twitter Developers getFollowersIDs public\u00a0void\u00a0getFollowersIDs(long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: cursor - Breaks the results into pages. A single page contains 100 users. This is recommended for users who are followed by many other users. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET followers/ids Twitter Developers getFollowersIDs public\u00a0void\u00a0getFollowersIDs(long\u00a0userId, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - Specifies the ID of the user for whom to return the followers list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. See Also: GET followers/ids Twitter Developers getFollowersIDs public\u00a0void\u00a0getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - Specifies the screen name of the user for whom to return the followers list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. See Also: GET followers/ids Twitter Developers lookupFriendships public\u00a0void\u00a0lookupFriendships(long...\u00a0ids) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Specified by: lookupFriendships\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: ids - array of the ids to lookup See Also: #newtwitter and the API - Twitter API Announcements Google Group lookupFriendships public\u00a0void\u00a0lookupFriendships(java.lang.String...\u00a0screenNames) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Specified by: lookupFriendships\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenNames - array of the screen names to lookup See Also: #newtwitter and the API - Twitter API Announcements Google Group getIncomingFriendships public\u00a0void\u00a0getIncomingFriendships(long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. This method calls https://api.twitter.com/1.1/friendships/incoming.json Specified by: getIncomingFriendships\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. See Also: GET friendships/incoming Twitter Developers getOutgoingFriendships public\u00a0void\u00a0getOutgoingFriendships(long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. This method calls https://api.twitter.com/1.1/friendships/outgoing.json Specified by: getOutgoingFriendships\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. See Also: GET friendships/outgoing Twitter Developers createFriendship public\u00a0void\u00a0createFriendship(long\u00a0userId) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - the ID of the user to be befriended See Also: POST friendships/create Twitter Developers createFriendship public\u00a0void\u00a0createFriendship(java.lang.String\u00a0screenName) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - the screen name of the user to be befriended See Also: POST friendships/create Twitter Developers createFriendship public\u00a0void\u00a0createFriendship(long\u00a0userId, boolean\u00a0follow) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - the ID of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. See Also: POST friendships/create Twitter Developers createFriendship public\u00a0void\u00a0createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - the screen name of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. See Also: POST friendships/create Twitter Developers destroyFriendship public\u00a0void\u00a0destroyFriendship(long\u00a0userId) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy Specified by: destroyFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - the screen name of the user to be befriended See Also: POST friendships/destroy Twitter Developers destroyFriendship public\u00a0void\u00a0destroyFriendship(java.lang.String\u00a0screenName) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy Specified by: destroyFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - the screen name of the user to be befriended See Also: POST friendships/destroy Twitter Developers updateFriendship public\u00a0void\u00a0updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweet) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Specified by: updateFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - user id to update enableDeviceNotification - set true to enable device notification retweet - set true to enable retweets See Also: #newtwitter and the API - Twitter API Announcements Google Group updateFriendship public\u00a0void\u00a0updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweet) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Specified by: updateFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - screen name to update enableDeviceNotification - set true to enable device notification retweet - set true to enable retweets See Also: #newtwitter and the API - Twitter API Announcements Google Group showFriendship public\u00a0void\u00a0showFriendship(long\u00a0sourceId, long\u00a0targetId) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Specified by: showFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: sourceId - the ID of the source user targetId - the ID of the target user See Also: GET friendships/show Twitter Developers showFriendship public\u00a0void\u00a0showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Specified by: showFriendship\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: sourceScreenName - the screen name of the source user targetScreenName - the screen name of the target user See Also: GET friendships/show Twitter Developers getFriendsList public\u00a0void\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. See Also: GET friends/list Twitter Developers getFriendsList public\u00a0void\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. See Also: GET friends/list Twitter Developers getFollowersList public\u00a0void\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. See Also: GET followers/list Twitter Developers getFollowersList public\u00a0void\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) Description copied from interface:\u00a0FriendsFollowersResourcesAsync Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResourcesAsync Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. See Also: GET followers/list Twitter Developers getAccountSettings public\u00a0void\u00a0getAccountSettings() Description copied from interface:\u00a0UsersResourcesAsync Returns the current trend, geo and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Specified by: getAccountSettings\u00a0in interface\u00a0UsersResourcesAsync See Also: GET account/settings Twitter Developers verifyCredentials public\u00a0void\u00a0verifyCredentials() Description copied from interface:\u00a0UsersResourcesAsync Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid. This method calls https://api.twitter.com/1.1/account/verify_credentials.json Specified by: verifyCredentials\u00a0in interface\u00a0UsersResourcesAsync See Also: GET account/verify_credentials Twitter Developers updateAccountSettings public\u00a0void\u00a0updateAccountSettings(java.lang.Integer\u00a0trend_locationWoeid, java.lang.Boolean\u00a0sleep_timeEnabled, java.lang.String\u00a0start_sleepTime, java.lang.String\u00a0end_sleepTime, java.lang.String\u00a0time_zone, java.lang.String\u00a0lang) Description copied from interface:\u00a0UsersResourcesAsync Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Specified by: updateAccountSettings\u00a0in interface\u00a0UsersResourcesAsync Parameters: trend_locationWoeid - Optional. The Yahoo! Where On Earth ID to use as the user's default trend location. sleep_timeEnabled - Optional. Whether sleep time is enabled for the user start_sleepTime - Optional. The hour that sleep time should begin if it is enabled. end_sleepTime - Optional. The hour that sleep time should end if it is enabled. time_zone - Optional. The timezone dates and times should be displayed in for the user. lang - Optional. The language which Twitter should render in for this user. (two letter ISO 639-1) See Also: POST account/settings Twitter Developers updateProfile public\u00a0void\u00a0updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) Description copied from interface:\u00a0UsersResourcesAsync Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. Only the parameters specified(non-null) will be updated. Specified by: updateProfile\u00a0in interface\u00a0UsersResourcesAsync Parameters: name - Optional. Maximum of 20 characters. url - Optional. Maximum of 100 characters. Will be prepended with &quot;http://&quot; if not present. location - Optional. Maximum of 30 characters. The contents are not normalized or geocoded in any way. description - Optional. Maximum of 160 characters. See Also: POST account/update_profile Twitter Developers updateProfileBackgroundImage public\u00a0void\u00a0updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) Description copied from interface:\u00a0UsersResourcesAsync Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Specified by: updateProfileBackgroundImage\u00a0in interface\u00a0UsersResourcesAsync Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forcibly scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. See Also: POST account/update_profile_background_image Twitter Developers updateProfileBackgroundImage public\u00a0void\u00a0updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) Description copied from interface:\u00a0UsersResourcesAsync Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Specified by: updateProfileBackgroundImage\u00a0in interface\u00a0UsersResourcesAsync Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forcibly scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. See Also: POST account/update_profile_background_image Twitter Developers updateProfileColors public\u00a0void\u00a0updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) Description copied from interface:\u00a0UsersResourcesAsync Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. Each parameter's value must be a valid hexadecimal value, and may be either three or six characters (ex: #fff or #ffffff). This method calls https://api.twitter.com/1.1/account/update_profile_colors Specified by: updateProfileColors\u00a0in interface\u00a0UsersResourcesAsync Parameters: profileBackgroundColor - optional, can be null profileTextColor - optional, can be null profileLinkColor - optional, can be null profileSidebarFillColor - optional, can be null profileSidebarBorderColor - optional, can be null See Also: POST account/update_profile_colors Twitter Developers updateProfileImage public\u00a0void\u00a0updateProfileImage(java.io.File\u00a0image) Description copied from interface:\u00a0UsersResourcesAsync Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Specified by: updateProfileImage\u00a0in interface\u00a0UsersResourcesAsync Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. See Also: POST account/update_profile_image Twitter Developers updateProfileImage public\u00a0void\u00a0updateProfileImage(java.io.InputStream\u00a0image) Description copied from interface:\u00a0UsersResourcesAsync Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Specified by: updateProfileImage\u00a0in interface\u00a0UsersResourcesAsync Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. See Also: POST account/update_profile_image Twitter Developers getBlocksList public\u00a0void\u00a0getBlocksList() Description copied from interface:\u00a0UsersResourcesAsync Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.xml Specified by: getBlocksList\u00a0in interface\u00a0UsersResourcesAsync See Also: GET blocks/blocking Twitter Developers getBlocksList public\u00a0void\u00a0getBlocksList(long\u00a0cursor) Description copied from interface:\u00a0UsersResourcesAsync Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.xml Specified by: getBlocksList\u00a0in interface\u00a0UsersResourcesAsync Parameters: cursor - Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; See Also: GET blocks/blocking Twitter Developers getBlocksIDs public\u00a0void\u00a0getBlocksIDs() Description copied from interface:\u00a0UsersResourcesAsync Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking/ids Specified by: getBlocksIDs\u00a0in interface\u00a0UsersResourcesAsync See Also: GET blocks/ids Twitter Developers getBlocksIDs public\u00a0void\u00a0getBlocksIDs(long\u00a0cursor) Description copied from interface:\u00a0UsersResourcesAsync Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking/ids Specified by: getBlocksIDs\u00a0in interface\u00a0UsersResourcesAsync Parameters: cursor - cursor See Also: GET blocks/ids Twitter Developers createBlock public\u00a0void\u00a0createBlock(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Specified by: createBlock\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - the screen_name of the user to block See Also: POST blocks/create Twitter Developers createBlock public\u00a0void\u00a0createBlock(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Specified by: createBlock\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - the screen_name of the user to block See Also: POST blocks/create Twitter Developers destroyBlock public\u00a0void\u00a0destroyBlock(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Specified by: destroyBlock\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - the ID of the user to block See Also: POST blocks/destroy Twitter Developers destroyBlock public\u00a0void\u00a0destroyBlock(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Specified by: destroyBlock\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - the screen_name of the user to block See Also: POST blocks/destroy Twitter Developers getMutesList public\u00a0void\u00a0getMutesList(long\u00a0cursor) Description copied from interface:\u00a0UsersResourcesAsync Returns a list of user objects that the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/list Specified by: getMutesList\u00a0in interface\u00a0UsersResourcesAsync Parameters: cursor - Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; See Also: GET mutes/users/list Twitter Developers getMutesIDs public\u00a0void\u00a0getMutesIDs(long\u00a0cursor) Description copied from interface:\u00a0UsersResourcesAsync Returns an array of numeric user ids the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/ids Specified by: getMutesIDs\u00a0in interface\u00a0UsersResourcesAsync Parameters: cursor - Causes the list of muted users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; See Also: GET mutes/users/ids Twitter Developers createMute public\u00a0void\u00a0createMute(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Mutes the user specified in the ID parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Specified by: createMute\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - the ID of the user to mute See Also: POST mutes/users/create Twitter Developers createMute public\u00a0void\u00a0createMute(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Mutes the user specified in the screen name parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Specified by: createMute\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - the screen_name of the user to mute See Also: POST mutes/users/create Twitter Developers destroyMute public\u00a0void\u00a0destroyMute(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Un-mutes the user specified in the ID parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Specified by: destroyMute\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - the ID of the user to mute See Also: POST mutes/users/destroy Twitter Developers destroyMute public\u00a0void\u00a0destroyMute(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Un-mutes the user specified in the screen name parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Specified by: destroyMute\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - the screen_name of the user to mute See Also: POST mutes/users/destroy Twitter Developers lookupUsers public\u00a0void\u00a0lookupUsers(long...\u00a0ids) Description copied from interface:\u00a0UsersResourcesAsync Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Specified by: lookupUsers\u00a0in interface\u00a0UsersResourcesAsync Parameters: ids - Specifies the screen names of the users to retrieve. See Also: GET users/lookup Twitter Developers lookupUsers public\u00a0void\u00a0lookupUsers(java.lang.String...\u00a0screenNames) Description copied from interface:\u00a0UsersResourcesAsync Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Specified by: lookupUsers\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenNames - Specifies the screen names of the users to retrieve. See Also: GET users/lookup Twitter Developers showUser public\u00a0void\u00a0showUser(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Specified by: showUser\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - the ID of the user for whom to request the retrieve See Also: GET users/show Twitter Developers showUser public\u00a0void\u00a0showUser(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Specified by: showUser\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - the screen name of the user for whom to request the detail See Also: GET users/show Twitter Developers searchUsers public\u00a0void\u00a0searchUsers(java.lang.String\u00a0query, int\u00a0page) Description copied from interface:\u00a0UsersResourcesAsync Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. This method calls https://api.twitter.com/1.1/users/search.json Specified by: searchUsers\u00a0in interface\u00a0UsersResourcesAsync Parameters: query - The query to run against people search. page - Specifies the page of results to retrieve. Number of statuses per page is fixed to 20. See Also: GET users/search Twitter Developers getContributees public\u00a0void\u00a0getContributees(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Returns an array of users that the specified user can contribute to. Specified by: getContributees\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - The user id of the user for whom to return results for See Also: GET users/contributors Twitter Developers getContributees public\u00a0void\u00a0getContributees(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Returns an array of users that the specified user can contribute to. Specified by: getContributees\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - The screen name of the user for whom to return results for See Also: GET users/contributors Twitter Developers getContributors public\u00a0void\u00a0getContributors(long\u00a0userId) Description copied from interface:\u00a0UsersResourcesAsync Returns an array of users who can contribute to the specified account. Specified by: getContributors\u00a0in interface\u00a0UsersResourcesAsync Parameters: userId - The user id of the user for whom to return results for See Also: GET users/contributors Twitter Developers getContributors public\u00a0void\u00a0getContributors(java.lang.String\u00a0screenName) Description copied from interface:\u00a0UsersResourcesAsync Returns an array of users who can contribute to the specified account. Specified by: getContributors\u00a0in interface\u00a0UsersResourcesAsync Parameters: screenName - The screen name of the user for whom to return results for See Also: GET users/contributors Twitter Developers removeProfileBanner public\u00a0void\u00a0removeProfileBanner() Description copied from interface:\u00a0UsersResourcesAsync Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success. This method calls https://api.twitter.com/1.1/account/remove_profile_banner.json Specified by: removeProfileBanner\u00a0in interface\u00a0UsersResourcesAsync See Also: POST account/remove_profile_banner Twitter Developers updateProfileBanner public\u00a0void\u00a0updateProfileBanner(java.io.File\u00a0image) Description copied from interface:\u00a0UsersResourcesAsync Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Specified by: updateProfileBanner\u00a0in interface\u00a0UsersResourcesAsync Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. See Also: POST account/update_profile_banner Twitter Developers updateProfileBanner public\u00a0void\u00a0updateProfileBanner(java.io.InputStream\u00a0image) Description copied from interface:\u00a0UsersResourcesAsync Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Specified by: updateProfileBanner\u00a0in interface\u00a0UsersResourcesAsync Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. See Also: POST account/update_profile_banner Twitter Developers getUserSuggestions public\u00a0void\u00a0getUserSuggestions(java.lang.String\u00a0categorySlug) Description copied from interface:\u00a0SuggestedUsersResourcesAsync Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. This method calls https://api.twitter.com/1.1/users/suggestions/:slug.json Specified by: getUserSuggestions\u00a0in interface\u00a0SuggestedUsersResourcesAsync Parameters: categorySlug - slug See Also: GET users/suggestions/:slug Twitter Developers getSuggestedUserCategories public\u00a0void\u00a0getSuggestedUserCategories() Description copied from interface:\u00a0SuggestedUsersResourcesAsync Access to Twitter's suggested user list. This returns the list of suggested user categories. The category can be used in the users/suggestions/category endpoint to get the users in that category. This method calls https://api.twitter.com/1.1/users/suggestions Specified by: getSuggestedUserCategories\u00a0in interface\u00a0SuggestedUsersResourcesAsync See Also: GET users/suggestions Twitter Developers getMemberSuggestions public\u00a0void\u00a0getMemberSuggestions(java.lang.String\u00a0categorySlug) Description copied from interface:\u00a0SuggestedUsersResourcesAsync Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/users/suggestions/:slug/members.json Specified by: getMemberSuggestions\u00a0in interface\u00a0SuggestedUsersResourcesAsync Parameters: categorySlug - slug See Also: #newtwitter and the API - Twitter API Announcements Google Group getFavorites public\u00a0void\u00a0getFavorites() Description copied from interface:\u00a0FavoritesResourcesAsync Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites Specified by: getFavorites\u00a0in interface\u00a0FavoritesResourcesAsync See Also: GET favorites Twitter Developers getFavorites public\u00a0void\u00a0getFavorites(long\u00a0userId) Description copied from interface:\u00a0FavoritesResourcesAsync Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites Specified by: getFavorites\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: userId - the id of the user for whom to request a list of favorite statuses See Also: GET favorites Twitter Developers getFavorites public\u00a0void\u00a0getFavorites(java.lang.String\u00a0screenName) Description copied from interface:\u00a0FavoritesResourcesAsync Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites Specified by: getFavorites\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses See Also: GET favorites Twitter Developers getFavorites public\u00a0void\u00a0getFavorites(Paging\u00a0paging) Description copied from interface:\u00a0FavoritesResourcesAsync Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites.json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: paging - controls pagination. Supports sinceId and page parameters. See Also: GET favorites Twitter Developers getFavorites public\u00a0void\u00a0getFavorites(long\u00a0userId, Paging\u00a0paging) Description copied from interface:\u00a0FavoritesResourcesAsync Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: userId - the id of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. See Also: GET favorites Twitter Developers getFavorites public\u00a0void\u00a0getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) Description copied from interface:\u00a0FavoritesResourcesAsync Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. See Also: GET favorites Twitter Developers destroyFavorite public\u00a0void\u00a0destroyFavorite(long\u00a0id) Description copied from interface:\u00a0FavoritesResourcesAsync Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This method calls https://api.twitter.com/1.1/favorites/destroy Specified by: destroyFavorite\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: id - the ID or screen name of the user for whom to request a list of un-favorite statuses. See Also: POST favorites/destroy/:id Twitter Developers createFavorite public\u00a0void\u00a0createFavorite(long\u00a0id) Description copied from interface:\u00a0FavoritesResourcesAsync Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This method calls https://api.twitter.com/1.1/favorites/create%C2%A0 Specified by: createFavorite\u00a0in interface\u00a0FavoritesResourcesAsync Parameters: id - the ID or screen name of the user for whom to request a list of favorite statuses. See Also: POST favorites/create/:id Twitter Developers getUserLists public\u00a0void\u00a0getUserLists(long\u00a0listOwnerUserId) Description copied from interface:\u00a0ListsResourcesAsync List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Specified by: getUserLists\u00a0in interface\u00a0ListsResourcesAsync Parameters: listOwnerUserId - The id of the list owner returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists Twitter Developers getUserLists public\u00a0void\u00a0getUserLists(java.lang.String\u00a0listOwnerScreenName) Description copied from interface:\u00a0ListsResourcesAsync List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Specified by: getUserLists\u00a0in interface\u00a0ListsResourcesAsync Parameters: listOwnerScreenName - The screen name of the list owner as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists Twitter Developers getUserListStatuses public\u00a0void\u00a0getUserListStatuses(long\u00a0listId, Paging\u00a0paging) Description copied from interface:\u00a0ListsResourcesAsync Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Specified by: getUserListStatuses\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. See Also: GET lists/statuses Twitter Developers getUserListStatuses public\u00a0void\u00a0getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) Description copied from interface:\u00a0ListsResourcesAsync Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Specified by: getUserListStatuses\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. See Also: GET lists/statuses Twitter Developers destroyUserListMember public\u00a0void\u00a0destroyUserListMember(long\u00a0listId, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Specified by: destroyUserListMember\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. userId - The screen name of the member you wish to remove from the list. See Also: POST lists/members/destroy Twitter Developers destroyUserListMember public\u00a0void\u00a0destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Specified by: destroyUserListMember\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The screen name of the member you wish to remove from the list. See Also: POST lists/members/destroy Twitter Developers getUserListMemberships public\u00a0void\u00a0getUserListMemberships(long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync List the lists the authenticating user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResourcesAsync Parameters: cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0void\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResourcesAsync Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0void\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResourcesAsync Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0void\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) Description copied from interface:\u00a0ListsResourcesAsync List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResourcesAsync Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0void\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) Description copied from interface:\u00a0ListsResourcesAsync List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResourcesAsync Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. See Also: GET lists/memberships Twitter Developers getUserListSubscribers public\u00a0void\u00a0getUserListSubscribers(long\u00a0listId, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0void\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/subscribers Twitter Developers createUserListSubscription public\u00a0void\u00a0createUserListSubscription(long\u00a0listId) Description copied from interface:\u00a0ListsResourcesAsync Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Specified by: createUserListSubscription\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. See Also: POST lists/subscribers/create Twitter Developers createUserListSubscription public\u00a0void\u00a0createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Description copied from interface:\u00a0ListsResourcesAsync Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Specified by: createUserListSubscription\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list See Also: POST lists/subscribers/create Twitter Developers showUserListSubscription public\u00a0void\u00a0showUserListSubscription(long\u00a0listId, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Specified by: showUserListSubscription\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/subscribers/show Twitter Developers showUserListSubscription public\u00a0void\u00a0showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Specified by: showUserListSubscription\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/subscribers/show Twitter Developers destroyUserListSubscription public\u00a0void\u00a0destroyUserListSubscription(long\u00a0listId) Description copied from interface:\u00a0ListsResourcesAsync Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Specified by: destroyUserListSubscription\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. See Also: POST lists/subscribers/destroy Twitter Developers destroyUserListSubscription public\u00a0void\u00a0destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Description copied from interface:\u00a0ListsResourcesAsync Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Specified by: destroyUserListSubscription\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list See Also: POST lists/subscribers/destroy Twitter Developers createUserListMembers public\u00a0void\u00a0createUserListMembers(long\u00a0listId, long...\u00a0userIds) Description copied from interface:\u00a0ListsResourcesAsync Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0void\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) Description copied from interface:\u00a0ListsResourcesAsync Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0void\u00a0createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) Description copied from interface:\u00a0ListsResourcesAsync Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0void\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Description copied from interface:\u00a0ListsResourcesAsync Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. See Also: POST lists/members/create_all Twitter Developers showUserListMembership public\u00a0void\u00a0showUserListMembership(long\u00a0listId, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Specified by: showUserListMembership\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. See Also: GET lists/members/show Twitter Developers showUserListMembership public\u00a0void\u00a0showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Specified by: showUserListMembership\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. .getStatusCode() returns 404 in that case.) See Also: GET lists/members/show Twitter Developers getUserListMembers public\u00a0void\u00a0getUserListMembers(long\u00a0listId, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0void\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/members Twitter Developers createUserListMember public\u00a0void\u00a0createUserListMember(long\u00a0listId, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Specified by: createUserListMember\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list. userId - The id of the user to add as a member of the list. See Also: POST lists/members/create Twitter Developers createUserListMember public\u00a0void\u00a0createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Description copied from interface:\u00a0ListsResourcesAsync Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Specified by: createUserListMember\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user to add as a member of the list. See Also: POST lists/members/create Twitter Developers destroyUserList public\u00a0void\u00a0destroyUserList(long\u00a0listId) Description copied from interface:\u00a0ListsResourcesAsync Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Specified by: destroyUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list to delete See Also: POST lists/destroy Twitter Developers destroyUserList public\u00a0void\u00a0destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Description copied from interface:\u00a0ListsResourcesAsync Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Specified by: destroyUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list See Also: POST lists/destroy Twitter Developers updateUserList public\u00a0void\u00a0updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Description copied from interface:\u00a0ListsResourcesAsync Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Specified by: updateUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list to update. newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. See Also: POST lists/update Twitter Developers updateUserList public\u00a0void\u00a0updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Description copied from interface:\u00a0ListsResourcesAsync Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Specified by: updateUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. See Also: POST lists/update Twitter Developers createUserList public\u00a0void\u00a0createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) Description copied from interface:\u00a0ListsResourcesAsync Creates a new list for the authenticated user. Accounts are limited to 20 lists. This method calls https://api.twitter.com/1.1/lists/create.json Specified by: createUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: listName - The name of the list you are creating. Required. isPublicList - set true if you wish to make a public list description - The description of the list you are creating. Optional. See Also: POST lists/create Twitter Developers showUserList public\u00a0void\u00a0showUserList(long\u00a0listId) Description copied from interface:\u00a0ListsResourcesAsync Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Specified by: showUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: listId - The id of the list to show See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers showUserList public\u00a0void\u00a0showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Description copied from interface:\u00a0ListsResourcesAsync Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Specified by: showUserList\u00a0in interface\u00a0ListsResourcesAsync Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers getUserListSubscriptions public\u00a0void\u00a0getUserListSubscriptions(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) Description copied from interface:\u00a0ListsResourcesAsync List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Specified by: getUserListSubscriptions\u00a0in interface\u00a0ListsResourcesAsync Parameters: listOwnerScreenName - The screen name of the list owner cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. See Also: GET lists/subscriptions Twitter Developers getSavedSearches public\u00a0void\u00a0getSavedSearches() Description copied from interface:\u00a0SavedSearchesResourcesAsync Returns the authenticated user's saved search queries. This method calls https://api.twitter.com/1.1/saved_searches.json blocking. Specified by: getSavedSearches\u00a0in interface\u00a0SavedSearchesResourcesAsync See Also: GET saved_searches Twitter Developers showSavedSearch public\u00a0void\u00a0showSavedSearch(int\u00a0id) Description copied from interface:\u00a0SavedSearchesResourcesAsync Retrieve the data for a saved search owned by the authenticating user specified by the given id. This method calls https://api.twitter.com/1.1/saved_searches/show/:id.json Specified by: showSavedSearch\u00a0in interface\u00a0SavedSearchesResourcesAsync Parameters: id - The id of the saved search to be retrieved. See Also: GET saved_searches/show/:id Twitter Developers createSavedSearch public\u00a0void\u00a0createSavedSearch(java.lang.String\u00a0query) Description copied from interface:\u00a0SavedSearchesResourcesAsync Creates a saved search for the authenticated user. This method calls https://api.twitter.com/1.1/saved_searches/saved_searches/create.json Specified by: createSavedSearch\u00a0in interface\u00a0SavedSearchesResourcesAsync Parameters: query - the query string See Also: POST saved_searches/create Twitter Developers destroySavedSearch public\u00a0void\u00a0destroySavedSearch(int\u00a0id) Description copied from interface:\u00a0SavedSearchesResourcesAsync Destroys a saved search for the authenticated user. The search specified by id must be owned by the authenticating user. This method calls https://api.twitter.com/1.1/saved_searches/destroy/id.json Specified by: destroySavedSearch\u00a0in interface\u00a0SavedSearchesResourcesAsync Parameters: id - The id of the saved search to be deleted. See Also: POST saved_searches/destroy/:id Twitter Developers getGeoDetails public\u00a0void\u00a0getGeoDetails(java.lang.String\u00a0id) Description copied from interface:\u00a0PlacesGeoResourcesAsync Find out more details of a place that was returned from the PlacesGeoResourcesAsync.reverseGeoCode(twitter4j.GeoQuery) method. This method calls https://api.twitter.com/1.1/geo/id/:id.json Specified by: getGeoDetails\u00a0in interface\u00a0PlacesGeoResourcesAsync Parameters: id - The ID of the location to query about. See Also: GET geo/id/:place_id Twitter Developers reverseGeoCode public\u00a0void\u00a0reverseGeoCode(GeoQuery\u00a0query) Description copied from interface:\u00a0PlacesGeoResourcesAsync Search for places (cities and neighborhoods) that can be attached to a statuses/update. Given a latitude and a longitude, return a list of all the valid places that can be used as a place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location up with a call to statuses/update. There are multiple granularities of places that can be returned -- &quot;neighborhoods&quot;, &quot;cities&quot;, etc. At this time, only United States data is available through this method. This API call is meant to be an informative call and will deliver generalized results about geography. This method calls https://api.twitter.com/1.1/geo/reverse_geocode.json Specified by: reverseGeoCode\u00a0in interface\u00a0PlacesGeoResourcesAsync Parameters: query - search query See Also: GET geo/reverse_geocode Twitter Developers searchPlaces public\u00a0void\u00a0searchPlaces(GeoQuery\u00a0query) Description copied from interface:\u00a0PlacesGeoResourcesAsync Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location with a call to statuses/update. This is the recommended method to use find places that can be attached to statuses/update. Unlike geo/reverse_geocode which provides raw data access, this endpoint can potentially re-order places with regards to the user who is authenticated. This approach is also preferred for interactive place matching with the user. This method calls https://api.twitter.com/1.1/geo/search.json Specified by: searchPlaces\u00a0in interface\u00a0PlacesGeoResourcesAsync Parameters: query - search query See Also: GET geo/search Twitter Developers getSimilarPlaces public\u00a0void\u00a0getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) Description copied from interface:\u00a0PlacesGeoResourcesAsync Locates places near the given coordinates which are similar in name. Conceptually you would use this method to get a list of known places to choose from first. Then, if the desired place doesn't exist, make a request to post/geo/place to create a new one. The token contained in the response is the token needed to be able to create a new place. This method calls https://api.twitter.com/1.1/geo/similar_places.json Specified by: getSimilarPlaces\u00a0in interface\u00a0PlacesGeoResourcesAsync Parameters: location - The latitude and longitude to search around. name - The name a place is known as. containedWithin - optional: the place_id which you would like to restrict the search results to. Setting this value means only places within the given place_id will be found. streetAddress - optional: This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about Place Attributes. getPlaceTrends public\u00a0void\u00a0getPlaceTrends(int\u00a0woeid) Description copied from interface:\u00a0TrendsResourcesAsync Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. Requesting more frequently than that will not return any more data, and will count against your rate limit usage. This method calls https://api.twitter.com/1.1/trends/place.json Specified by: getPlaceTrends\u00a0in interface\u00a0TrendsResourcesAsync Parameters: woeid - The Yahoo! Where On Earth ID of the location to return trending information for. Global information is available by using 1 as the WOEID. See Also: GET trends/place Twitter Developers getAvailableTrends public\u00a0void\u00a0getAvailableTrends() Description copied from interface:\u00a0TrendsResourcesAsync Retrieves the locations that Twitter has trending topic information for. The response is an array of &quot;locations&quot; that encode the location's WOEID (a Yahoo! Where On Earth ID) and some other human-readable information such as a canonical name and country the location belongs in. This method calls https://api.twitter.com/1.1/trends/available.json Specified by: getAvailableTrends\u00a0in interface\u00a0TrendsResourcesAsync See Also: GET trends/available Twitter Developers getClosestTrends public\u00a0void\u00a0getClosestTrends(GeoLocation\u00a0location) Description copied from interface:\u00a0TrendsResourcesAsync Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. This method calls https://api.twitter.com/1.1/trends/closest.json Specified by: getClosestTrends\u00a0in interface\u00a0TrendsResourcesAsync Parameters: location - the available trend locations will be sorted by distance to the lat and long passed in. The sort is nearest to furthest. See Also: GET trends/closest Twitter Developers reportSpam public\u00a0void\u00a0reportSpam(long\u00a0userId) Description copied from interface:\u00a0SpamReportingResourceAsync The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Specified by: reportSpam\u00a0in interface\u00a0SpamReportingResourceAsync Parameters: userId - The ID of the user you want to report as a spammer. See Also: POST report_spam Twitter Developers reportSpam public\u00a0void\u00a0reportSpam(java.lang.String\u00a0screenName) Description copied from interface:\u00a0SpamReportingResourceAsync The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Specified by: reportSpam\u00a0in interface\u00a0SpamReportingResourceAsync Parameters: screenName - The screen name of the user you want to report as a spammer. See Also: POST report_spam Twitter Developers getAPIConfiguration public\u00a0void\u00a0getAPIConfiguration() Description copied from interface:\u00a0HelpResourcesAsync Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. Specified by: getAPIConfiguration\u00a0in interface\u00a0HelpResourcesAsync See Also: GET help/configuration Twitter Developers getLanguages public\u00a0void\u00a0getLanguages() Description copied from interface:\u00a0HelpResourcesAsync Returns the list of languages supported by Twitter along with their ISO 639-1 code. The ISO 639-1 code is the two letter value to use if you include lang with any of your requests. Specified by: getLanguages\u00a0in interface\u00a0HelpResourcesAsync See Also: GET help/languages Twitter Developers getPrivacyPolicy public\u00a0void\u00a0getPrivacyPolicy() Description copied from interface:\u00a0HelpResourcesAsync Returns Twitter's Privacy Policy. This method calls https://api.twitter.com/1.1/help/privacy.json Specified by: getPrivacyPolicy\u00a0in interface\u00a0HelpResourcesAsync See Also: GET help/privacy Twitter Developers getTermsOfService public\u00a0void\u00a0getTermsOfService() Description copied from interface:\u00a0HelpResourcesAsync Returns Twitter's' Terms of Service. This method calls https://api.twitter.com/1.1/help/tos.json Specified by: getTermsOfService\u00a0in interface\u00a0HelpResourcesAsync See Also: GET help/tos Twitter Developers getRateLimitStatus public\u00a0void\u00a0getRateLimitStatus() Description copied from interface:\u00a0HelpResourcesAsync Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Specified by: getRateLimitStatus\u00a0in interface\u00a0HelpResourcesAsync See Also: GET application/rate_limit_status getRateLimitStatus public\u00a0void\u00a0getRateLimitStatus(java.lang.String...\u00a0resources) Description copied from interface:\u00a0HelpResourcesAsync Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. As of Nov 4th 2012, supported resource names are as follows: &quot;trends&quot;,&quot;application&quot;,&quot;users&quot;,&quot;saved_searches&quot;,&quot;geo&quot;,&quot;direct_messages&quot;,&quot;blocks&quot;,&quot;favorites&quot;,&quot;statuses&quot;,&quot;followers&quot;,&quot;help&quot;,&quot;friends&quot;,&quot;search&quot;,&quot;friendships&quot;,&quot;account&quot;,&quot;lists&quot; This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Specified by: getRateLimitStatus\u00a0in interface\u00a0HelpResourcesAsync Parameters: resources - resources See Also: GET application/rate_limit_status getOAuthRequestTokenAsync public\u00a0void\u00a0getOAuthRequestTokenAsync() Description copied from interface:\u00a0AsyncOAuthSupport Retrieves a request token Specified by: getOAuthRequestTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestTokenAsync public\u00a0void\u00a0getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves a request token Specified by: getOAuthRequestTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: callbackURL - callback URL See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestTokenAsync public\u00a0void\u00a0getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves a request token Specified by: getOAuthRequestTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestTokenAsync public\u00a0void\u00a0getOAuthRequestTokenAsync(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves a request token Specified by: getOAuthRequestTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. xAuthMode - Set to reverse_auth to obtain a special request token to be used in the reverse auth process. See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthAccessTokenAsync public\u00a0void\u00a0getOAuthAccessTokenAsync() Description copied from interface:\u00a0AsyncOAuthSupport Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. Specified by: getOAuthAccessTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync public\u00a0void\u00a0getOAuthAccessTokenAsync(java.lang.String\u00a0oauthVerifier) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves an access token. Specified by: getOAuthAccessTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: oauthVerifier - OAuth verifier. AKA pin. See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync public\u00a0void\u00a0getOAuthAccessTokenAsync(RequestToken\u00a0requestToken) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: requestToken - the request token See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync public\u00a0void\u00a0getOAuthAccessTokenAsync(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: requestToken - the request token oauthVerifier - OAuth verifier. AKA pin. See Also: OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessTokenAsync public\u00a0void\u00a0getOAuthAccessTokenAsync(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Description copied from interface:\u00a0AsyncOAuthSupport Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Specified by: getOAuthAccessTokenAsync\u00a0in interface\u00a0AsyncOAuthSupport Parameters: screenName - the screen name password - the password See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, xAuth Twitter Developers, POST oauth/access_token Twitter Developers shutdown public\u00a0void\u00a0shutdown() Description copied from interface:\u00a0AsyncTwitter Shuts down internal dispatcher thread shared across all AsyncTwitter instances. Specified by: shutdown\u00a0in interface\u00a0AsyncTwitter getDispatcher private\u00a0Dispatcher\u00a0getDispatcher() setOAuthConsumer public\u00a0void\u00a0setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Description copied from interface:\u00a0OAuthSupport sets the OAuth consumer key and consumer secret Specified by: setOAuthConsumer\u00a0in interface\u00a0OAuth2Support Specified by: setOAuthConsumer\u00a0in interface\u00a0OAuthSupport Overrides: setOAuthConsumer\u00a0in class\u00a0TwitterBaseImpl Parameters: consumerKey - OAuth consumer key consumerSecret - OAuth consumer secret getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken() throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthRequestToken\u00a0in class\u00a0TwitterBaseImpl Returns: generated request token. Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackUrl) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthRequestToken\u00a0in class\u00a0TwitterBaseImpl Parameters: callbackUrl - callback URL Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken() throws TwitterException Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. Basic authenticated instance of this class will try acquiring an AccessToken using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Basic authenticated instance of this class will try acquiring an AccessToken using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthAccessToken\u00a0in class\u00a0TwitterBaseImpl Returns: access token Throws: TwitterException - When Twitter service or network is unavailable, when the user has not authorized, or when the client application is not permitted to use xAuth See Also: xAuth Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthAccessToken\u00a0in class\u00a0TwitterBaseImpl Parameters: oauthVerifier - OAuth verifier. AKA pin. Returns: access token Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthAccessToken\u00a0in class\u00a0TwitterBaseImpl Parameters: requestToken - the request token Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthAccessToken\u00a0in class\u00a0TwitterBaseImpl Parameters: requestToken - the request token oauthVerifier - OAuth verifier. AKA pin. Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers setOAuthAccessToken public\u00a0void\u00a0setOAuthAccessToken(AccessToken\u00a0accessToken) Description copied from interface:\u00a0OAuthSupport Sets the access token Specified by: setOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Overrides: setOAuthAccessToken\u00a0in class\u00a0TwitterBaseImpl Parameters: accessToken - accessToken getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Overrides: getOAuthAccessToken\u00a0in class\u00a0TwitterBaseImpl Parameters: screenName - the screen name password - the password Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, xAuth Twitter Developers, POST oauth/access_token Twitter Developers getOAuth2Token public\u00a0OAuth2Token\u00a0getOAuth2Token() throws TwitterException Description copied from interface:\u00a0OAuth2Support Obtains an OAuth 2 Bearer token. Specified by: getOAuth2Token\u00a0in interface\u00a0OAuth2Support Overrides: getOAuth2Token\u00a0in class\u00a0TwitterBaseImpl Returns: OAuth 2 Bearer token Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. See Also: POST oauth2/token Twitter Developers setOAuth2Token public\u00a0void\u00a0setOAuth2Token(OAuth2Token\u00a0oauth2Token) Description copied from interface:\u00a0OAuth2Support Sets the OAuth 2 Bearer token. Specified by: setOAuth2Token\u00a0in interface\u00a0OAuth2Support Overrides: setOAuth2Token\u00a0in class\u00a0TwitterBaseImpl Parameters: oauth2Token - OAuth 2 Bearer token getOAuth2TokenAsync public\u00a0void\u00a0getOAuth2TokenAsync() Description copied from interface:\u00a0AsyncOAuth2Support Obtains an OAuth 2 Bearer token. Specified by: getOAuth2TokenAsync\u00a0in interface\u00a0AsyncOAuth2Support See Also: POST oauth2/token Twitter Developers invalidateOAuth2Token public\u00a0void\u00a0invalidateOAuth2Token() throws TwitterException Description copied from interface:\u00a0OAuth2Support Revokes an issued OAuth 2 Bearer Token. Specified by: invalidateOAuth2Token\u00a0in interface\u00a0OAuth2Support Overrides: invalidateOAuth2Token\u00a0in class\u00a0TwitterBaseImpl Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0TwitterBaseImpl hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0TwitterBaseImpl toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0TwitterBaseImpl Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Authorization &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Authorization&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Interface Authorization All Superinterfaces: java.io.Serializable All Known Implementing Classes: BasicAuthorization, NullAuthorization, OAuth2Authorization, OAuthAuthorization public interface Authorization extends java.io.Serializable An interface represents credentials. Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getAuthorizationHeader(HttpRequest\u00a0req)\u00a0 boolean isEnabled() Returns true if authorization credentials are set. Method Detail getAuthorizationHeader java.lang.String\u00a0getAuthorizationHeader(HttpRequest\u00a0req) isEnabled boolean\u00a0isEnabled() Returns true if authorization credentials are set. Returns: true if authorization credentials are set Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AuthorizationConfiguration &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AuthorizationConfiguration&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Interface AuthorizationConfiguration All Known Subinterfaces: Configuration All Known Implementing Classes: ConfigurationBase, PropertyConfiguration public interface AuthorizationConfiguration A static factory class for Authorization. Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getOAuth2AccessToken()\u00a0 java.lang.String getOAuth2TokenType()\u00a0 java.lang.String getOAuthAccessToken()\u00a0 java.lang.String getOAuthAccessTokenSecret()\u00a0 java.lang.String getOAuthConsumerKey()\u00a0 java.lang.String getOAuthConsumerSecret()\u00a0 java.lang.String getPassword()\u00a0 java.lang.String getUser()\u00a0 Method Detail getUser java.lang.String\u00a0getUser() getPassword java.lang.String\u00a0getPassword() getOAuthConsumerKey java.lang.String\u00a0getOAuthConsumerKey() getOAuthConsumerSecret java.lang.String\u00a0getOAuthConsumerSecret() getOAuthAccessToken java.lang.String\u00a0getOAuthAccessToken() getOAuthAccessTokenSecret java.lang.String\u00a0getOAuthAccessTokenSecret() getOAuth2TokenType java.lang.String\u00a0getOAuth2TokenType() getOAuth2AccessToken java.lang.String\u00a0getOAuth2AccessToken() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method AuthorizationFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;AuthorizationFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class AuthorizationFactory java.lang.Object twitter4j.auth.AuthorizationFactory public final class AuthorizationFactory extends java.lang.Object A static factory class for Authorization. Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com Constructor Summary Constructors\u00a0 Constructor and Description AuthorizationFactory()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static Authorization getInstance(Configuration\u00a0conf)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Constructor Detail AuthorizationFactory public\u00a0AuthorizationFactory() Method Detail getInstance public static\u00a0Authorization\u00a0getInstance(Configuration\u00a0conf) Parameters: conf - configuration Returns: authorization instance Since: Twitter4J 2.1.11 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method BasicAuthorization &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;BasicAuthorization&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class BasicAuthorization java.lang.Object twitter4j.auth.BasicAuthorization All Implemented Interfaces: java.io.Serializable, Authorization public class BasicAuthorization extends java.lang.Object implements Authorization, java.io.Serializable An authentication implementation implements Basic authentication Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String basic\u00a0 private java.lang.String password\u00a0 private static long serialVersionUID\u00a0 private java.lang.String userId\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description BasicAuthorization(java.lang.String\u00a0userId, java.lang.String\u00a0password)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description private java.lang.String encodeBasicAuthenticationString()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 java.lang.String getAuthorizationHeader(HttpRequest\u00a0req)\u00a0 java.lang.String getPassword()\u00a0 java.lang.String getUserId()\u00a0 int hashCode()\u00a0 boolean isEnabled() #{inheritDoc} java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values userId private final\u00a0java.lang.String userId password private final\u00a0java.lang.String password basic private final\u00a0java.lang.String basic Constructor Detail BasicAuthorization public\u00a0BasicAuthorization(java.lang.String\u00a0userId, java.lang.String\u00a0password) Method Detail getUserId public\u00a0java.lang.String\u00a0getUserId() getPassword public\u00a0java.lang.String\u00a0getPassword() encodeBasicAuthenticationString private\u00a0java.lang.String\u00a0encodeBasicAuthenticationString() getAuthorizationHeader public\u00a0java.lang.String\u00a0getAuthorizationHeader(HttpRequest\u00a0req) Specified by: getAuthorizationHeader\u00a0in interface\u00a0Authorization isEnabled public\u00a0boolean\u00a0isEnabled() #{inheritDoc} Specified by: isEnabled\u00a0in interface\u00a0Authorization Returns: true if authorization credentials are set equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Category &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Category&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Category public interface Category Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getName()\u00a0 int getSize()\u00a0 java.lang.String getSlug()\u00a0 Method Detail getName java.lang.String\u00a0getName() getSlug java.lang.String\u00a0getSlug() getSize int\u00a0getSize() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method CharacterUtil &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;CharacterUtil&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.util Class CharacterUtil java.lang.Object twitter4j.util.CharacterUtil public final class CharacterUtil extends java.lang.Object Since: Twitter4J 2.1.2 Author: Yusuke Yamamoto - yusuke at mac.com Constructor Summary Constructors\u00a0 Modifier Constructor and Description private CharacterUtil()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static int count(java.lang.String\u00a0text) Counts the length of the tweet static boolean isExceedingLengthLimitation(java.lang.String\u00a0text) Returns true if the length of the string is exceeding length limitation Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Constructor Detail CharacterUtil private\u00a0CharacterUtil() Method Detail count public static\u00a0int\u00a0count(java.lang.String\u00a0text) Counts the length of the tweet Parameters: text - tweet to be counted Returns: the length of the tweet isExceedingLengthLimitation public static\u00a0boolean\u00a0isExceedingLengthLimitation(java.lang.String\u00a0text) Returns true if the length of the string is exceeding length limitation Parameters: text - String to be examined Returns: if the length of the string is exceeding length limitation Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Configuration &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Configuration&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6,&quot;i35&quot;:6,&quot;i36&quot;:6,&quot;i37&quot;:6,&quot;i38&quot;:6,&quot;i39&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Interface Configuration All Superinterfaces: AuthorizationConfiguration, java.io.Serializable All Known Implementing Classes: ConfigurationBase, PropertyConfiguration public interface Configuration extends AuthorizationConfiguration, java.io.Serializable Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getAsyncNumThreads()\u00a0 long getContributingTo()\u00a0 java.lang.String getDispatcherImpl()\u00a0 HttpClientConfiguration getHttpClientConfiguration()\u00a0 int getHttpStreamingReadTimeout()\u00a0 java.lang.String getLoggerFactory()\u00a0 java.lang.String getMediaProvider()\u00a0 java.lang.String getMediaProviderAPIKey()\u00a0 java.util.Properties getMediaProviderParameters()\u00a0 java.lang.String getOAuth2AccessToken()\u00a0 java.lang.String getOAuth2InvalidateTokenURL()\u00a0 java.lang.String getOAuth2Scope()\u00a0 java.lang.String getOAuth2TokenType()\u00a0 java.lang.String getOAuth2TokenURL()\u00a0 java.lang.String getOAuthAccessToken()\u00a0 java.lang.String getOAuthAccessTokenSecret()\u00a0 java.lang.String getOAuthAccessTokenURL()\u00a0 java.lang.String getOAuthAuthenticationURL()\u00a0 java.lang.String getOAuthAuthorizationURL()\u00a0 java.lang.String getOAuthConsumerKey()\u00a0 java.lang.String getOAuthConsumerSecret()\u00a0 java.lang.String getOAuthRequestTokenURL()\u00a0 java.lang.String getPassword()\u00a0 java.lang.String getRestBaseURL()\u00a0 java.lang.String getSiteStreamBaseURL()\u00a0 java.lang.String getStreamBaseURL()\u00a0 java.lang.String getUploadBaseURL()\u00a0 java.lang.String getUser()\u00a0 java.lang.String getUserStreamBaseURL()\u00a0 boolean isApplicationOnlyAuthEnabled()\u00a0 boolean isDaemonEnabled()\u00a0 boolean isDebugEnabled()\u00a0 boolean isIncludeEntitiesEnabled()\u00a0 boolean isIncludeMyRetweetEnabled()\u00a0 boolean isJSONStoreEnabled()\u00a0 boolean isMBeanEnabled()\u00a0 boolean isStallWarningsEnabled()\u00a0 boolean isTrimUserEnabled()\u00a0 boolean isUserStreamRepliesAllEnabled()\u00a0 boolean isUserStreamWithFollowingsEnabled()\u00a0 Method Detail isDebugEnabled boolean\u00a0isDebugEnabled() isApplicationOnlyAuthEnabled boolean\u00a0isApplicationOnlyAuthEnabled() getUser java.lang.String\u00a0getUser() Specified by: getUser\u00a0in interface\u00a0AuthorizationConfiguration getPassword java.lang.String\u00a0getPassword() Specified by: getPassword\u00a0in interface\u00a0AuthorizationConfiguration getHttpClientConfiguration HttpClientConfiguration\u00a0getHttpClientConfiguration() getHttpStreamingReadTimeout int\u00a0getHttpStreamingReadTimeout() getOAuthConsumerKey java.lang.String\u00a0getOAuthConsumerKey() Specified by: getOAuthConsumerKey\u00a0in interface\u00a0AuthorizationConfiguration getOAuthConsumerSecret java.lang.String\u00a0getOAuthConsumerSecret() Specified by: getOAuthConsumerSecret\u00a0in interface\u00a0AuthorizationConfiguration getOAuthAccessToken java.lang.String\u00a0getOAuthAccessToken() Specified by: getOAuthAccessToken\u00a0in interface\u00a0AuthorizationConfiguration getOAuthAccessTokenSecret java.lang.String\u00a0getOAuthAccessTokenSecret() Specified by: getOAuthAccessTokenSecret\u00a0in interface\u00a0AuthorizationConfiguration getOAuth2TokenType java.lang.String\u00a0getOAuth2TokenType() Specified by: getOAuth2TokenType\u00a0in interface\u00a0AuthorizationConfiguration getOAuth2AccessToken java.lang.String\u00a0getOAuth2AccessToken() Specified by: getOAuth2AccessToken\u00a0in interface\u00a0AuthorizationConfiguration getOAuth2Scope java.lang.String\u00a0getOAuth2Scope() getRestBaseURL java.lang.String\u00a0getRestBaseURL() getUploadBaseURL java.lang.String\u00a0getUploadBaseURL() getStreamBaseURL java.lang.String\u00a0getStreamBaseURL() getOAuthRequestTokenURL java.lang.String\u00a0getOAuthRequestTokenURL() getOAuthAuthorizationURL java.lang.String\u00a0getOAuthAuthorizationURL() getOAuthAccessTokenURL java.lang.String\u00a0getOAuthAccessTokenURL() getOAuthAuthenticationURL java.lang.String\u00a0getOAuthAuthenticationURL() getOAuth2TokenURL java.lang.String\u00a0getOAuth2TokenURL() getOAuth2InvalidateTokenURL java.lang.String\u00a0getOAuth2InvalidateTokenURL() getUserStreamBaseURL java.lang.String\u00a0getUserStreamBaseURL() getSiteStreamBaseURL java.lang.String\u00a0getSiteStreamBaseURL() isIncludeMyRetweetEnabled boolean\u00a0isIncludeMyRetweetEnabled() isJSONStoreEnabled boolean\u00a0isJSONStoreEnabled() isMBeanEnabled boolean\u00a0isMBeanEnabled() isUserStreamRepliesAllEnabled boolean\u00a0isUserStreamRepliesAllEnabled() isUserStreamWithFollowingsEnabled boolean\u00a0isUserStreamWithFollowingsEnabled() isStallWarningsEnabled boolean\u00a0isStallWarningsEnabled() getMediaProvider java.lang.String\u00a0getMediaProvider() getMediaProviderAPIKey java.lang.String\u00a0getMediaProviderAPIKey() getMediaProviderParameters java.util.Properties\u00a0getMediaProviderParameters() getAsyncNumThreads int\u00a0getAsyncNumThreads() getContributingTo long\u00a0getContributingTo() getDispatcherImpl java.lang.String\u00a0getDispatcherImpl() getLoggerFactory java.lang.String\u00a0getLoggerFactory() isIncludeEntitiesEnabled boolean\u00a0isIncludeEntitiesEnabled() isTrimUserEnabled boolean\u00a0isTrimUserEnabled() isDaemonEnabled boolean\u00a0isDaemonEnabled() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ConfigurationBase &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ConfigurationBase&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:9,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:9,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:9,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10,&quot;i39&quot;:10,&quot;i40&quot;:10,&quot;i41&quot;:10,&quot;i42&quot;:10,&quot;i43&quot;:10,&quot;i44&quot;:10,&quot;i45&quot;:10,&quot;i46&quot;:10,&quot;i47&quot;:10,&quot;i48&quot;:10,&quot;i49&quot;:10,&quot;i50&quot;:10,&quot;i51&quot;:10,&quot;i52&quot;:10,&quot;i53&quot;:10,&quot;i54&quot;:10,&quot;i55&quot;:10,&quot;i56&quot;:10,&quot;i57&quot;:10,&quot;i58&quot;:10,&quot;i59&quot;:10,&quot;i60&quot;:10,&quot;i61&quot;:10,&quot;i62&quot;:10,&quot;i63&quot;:10,&quot;i64&quot;:10,&quot;i65&quot;:10,&quot;i66&quot;:10,&quot;i67&quot;:10,&quot;i68&quot;:10,&quot;i69&quot;:10,&quot;i70&quot;:10,&quot;i71&quot;:10,&quot;i72&quot;:10,&quot;i73&quot;:10,&quot;i74&quot;:10,&quot;i75&quot;:10,&quot;i76&quot;:10,&quot;i77&quot;:10,&quot;i78&quot;:10,&quot;i79&quot;:10,&quot;i80&quot;:10,&quot;i81&quot;:10,&quot;i82&quot;:10,&quot;i83&quot;:10,&quot;i84&quot;:10,&quot;i85&quot;:10,&quot;i86&quot;:10,&quot;i87&quot;:10,&quot;i88&quot;:10,&quot;i89&quot;:10,&quot;i90&quot;:10,&quot;i91&quot;:10,&quot;i92&quot;:10,&quot;i93&quot;:10,&quot;i94&quot;:10,&quot;i95&quot;:10,&quot;i96&quot;:10,&quot;i97&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Class ConfigurationBase java.lang.Object twitter4j.conf.ConfigurationBase All Implemented Interfaces: java.io.Serializable, AuthorizationConfiguration, Configuration Direct Known Subclasses: PropertyConfiguration class ConfigurationBase extends java.lang.Object implements Configuration, java.io.Serializable Configuration base class with default settings. Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description (package private) class\u00a0 ConfigurationBase.MyHttpClientConfiguration\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private boolean applicationOnlyAuthEnabled\u00a0 private int asyncNumThreads\u00a0 private long contributingTo\u00a0 private boolean daemonEnabled\u00a0 private boolean debug\u00a0 private java.lang.String dispatcherImpl\u00a0 private HttpClientConfiguration httpConf\u00a0 private int httpRetryCount\u00a0 private int httpRetryIntervalSeconds\u00a0 private int httpStreamingReadTimeout\u00a0 private boolean includeEntitiesEnabled\u00a0 private boolean includeMyRetweetEnabled\u00a0 private static java.util.List&lt;ConfigurationBase&gt; instances\u00a0 private boolean jsonStoreEnabled\u00a0 private java.lang.String loggerFactory\u00a0 private boolean mbeanEnabled\u00a0 private java.lang.String mediaProvider\u00a0 private java.lang.String mediaProviderAPIKey\u00a0 private java.util.Properties mediaProviderParameters\u00a0 private java.lang.String oAuth2AccessToken\u00a0 private java.lang.String oAuth2InvalidateTokenURL\u00a0 private java.lang.String oAuth2Scope\u00a0 private java.lang.String oAuth2TokenType\u00a0 private java.lang.String oAuth2TokenURL\u00a0 private java.lang.String oAuthAccessToken\u00a0 private java.lang.String oAuthAccessTokenSecret\u00a0 private java.lang.String oAuthAccessTokenURL\u00a0 private java.lang.String oAuthAuthenticationURL\u00a0 private java.lang.String oAuthAuthorizationURL\u00a0 private java.lang.String oAuthConsumerKey\u00a0 private java.lang.String oAuthConsumerSecret\u00a0 private java.lang.String oAuthRequestTokenURL\u00a0 private java.lang.String password\u00a0 private java.lang.String restBaseURL\u00a0 private static long serialVersionUID\u00a0 private java.lang.String siteStreamBaseURL\u00a0 private boolean stallWarningsEnabled\u00a0 private java.lang.String streamBaseURL\u00a0 private boolean trimUserEnabled\u00a0 private java.lang.String uploadBaseURL\u00a0 private java.lang.String user\u00a0 private java.lang.String userStreamBaseURL\u00a0 private boolean userStreamRepliesAllEnabled\u00a0 private boolean userStreamWithFollowingsEnabled\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description protected ConfigurationBase()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description protected void cacheInstance()\u00a0 private static void cacheInstance(ConfigurationBase\u00a0conf)\u00a0 void dumpConfiguration()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 (package private) static java.lang.String fixURL(boolean\u00a0useSSL, java.lang.String\u00a0url)\u00a0 int getAsyncNumThreads()\u00a0 long getContributingTo()\u00a0 java.lang.String getDispatcherImpl()\u00a0 HttpClientConfiguration getHttpClientConfiguration()\u00a0 int getHttpStreamingReadTimeout()\u00a0 private static ConfigurationBase getInstance(ConfigurationBase\u00a0configurationBase)\u00a0 java.lang.String getLoggerFactory()\u00a0 java.lang.String getMediaProvider()\u00a0 java.lang.String getMediaProviderAPIKey()\u00a0 java.util.Properties getMediaProviderParameters()\u00a0 java.lang.String getOAuth2AccessToken()\u00a0 java.lang.String getOAuth2InvalidateTokenURL()\u00a0 java.lang.String getOAuth2Scope()\u00a0 java.lang.String getOAuth2TokenType()\u00a0 java.lang.String getOAuth2TokenURL()\u00a0 java.lang.String getOAuthAccessToken()\u00a0 java.lang.String getOAuthAccessTokenSecret()\u00a0 java.lang.String getOAuthAccessTokenURL()\u00a0 java.lang.String getOAuthAuthenticationURL()\u00a0 java.lang.String getOAuthAuthorizationURL()\u00a0 java.lang.String getOAuthConsumerKey()\u00a0 java.lang.String getOAuthConsumerSecret()\u00a0 java.lang.String getOAuthRequestTokenURL()\u00a0 java.lang.String getPassword()\u00a0 java.lang.String getRestBaseURL()\u00a0 java.lang.String getSiteStreamBaseURL()\u00a0 java.lang.String getStreamBaseURL()\u00a0 java.lang.String getUploadBaseURL()\u00a0 java.lang.String getUser()\u00a0 java.lang.String getUserStreamBaseURL()\u00a0 int hashCode()\u00a0 boolean isApplicationOnlyAuthEnabled()\u00a0 boolean isDaemonEnabled()\u00a0 boolean isDebugEnabled()\u00a0 boolean isIncludeEntitiesEnabled()\u00a0 boolean isIncludeMyRetweetEnabled()\u00a0 boolean isJSONStoreEnabled()\u00a0 boolean isMBeanEnabled()\u00a0 boolean isStallWarningsEnabled()\u00a0 boolean isTrimUserEnabled()\u00a0 boolean isUserStreamRepliesAllEnabled()\u00a0 boolean isUserStreamWithFollowingsEnabled()\u00a0 protected java.lang.Object readResolve()\u00a0 protected void setApplicationOnlyAuthEnabled(boolean\u00a0applicationOnlyAuthEnabled)\u00a0 protected void setAsyncNumThreads(int\u00a0asyncNumThreads)\u00a0 protected void setContributingTo(long\u00a0contributingTo)\u00a0 protected void setDaemonEnabled(boolean\u00a0daemonEnabled)\u00a0 protected void setDebug(boolean\u00a0debug)\u00a0 protected void setDispatcherImpl(java.lang.String\u00a0dispatcherImpl)\u00a0 protected void setGZIPEnabled(boolean\u00a0gzipEnabled)\u00a0 protected void setHttpConnectionTimeout(int\u00a0connectionTimeout)\u00a0 protected void setHttpProxyHost(java.lang.String\u00a0proxyHost)\u00a0 protected void setHttpProxyPassword(java.lang.String\u00a0proxyPassword)\u00a0 protected void setHttpProxyPort(int\u00a0proxyPort)\u00a0 protected void setHttpProxyUser(java.lang.String\u00a0proxyUser)\u00a0 protected void setHttpReadTimeout(int\u00a0readTimeout)\u00a0 protected void setHttpRetryCount(int\u00a0retryCount)\u00a0 protected void setHttpRetryIntervalSeconds(int\u00a0retryIntervalSeconds)\u00a0 protected void setHttpStreamingReadTimeout(int\u00a0httpStreamingReadTimeout)\u00a0 protected void setIncludeEntitiesEnabled(boolean\u00a0includeEntitiesEnabled)\u00a0 void setIncludeMyRetweetEnabled(boolean\u00a0enabled)\u00a0 protected void setJSONStoreEnabled(boolean\u00a0enabled)\u00a0 protected void setLoggerFactory(java.lang.String\u00a0loggerImpl)\u00a0 protected void setMBeanEnabled(boolean\u00a0enabled)\u00a0 protected void setMediaProvider(java.lang.String\u00a0mediaProvider)\u00a0 protected void setMediaProviderAPIKey(java.lang.String\u00a0mediaProviderAPIKey)\u00a0 protected void setMediaProviderParameters(java.util.Properties\u00a0props)\u00a0 protected void setOAuth2AccessToken(java.lang.String\u00a0oAuth2AccessToken)\u00a0 protected void setOAuth2InvalidateTokenURL(java.lang.String\u00a0oAuth2InvalidateTokenURL)\u00a0 protected void setOAuth2Scope(java.lang.String\u00a0oAuth2Scope)\u00a0 protected void setOAuth2TokenType(java.lang.String\u00a0oAuth2TokenType)\u00a0 protected void setOAuth2TokenURL(java.lang.String\u00a0oAuth2TokenURL)\u00a0 protected void setOAuthAccessToken(java.lang.String\u00a0oAuthAccessToken)\u00a0 protected void setOAuthAccessTokenSecret(java.lang.String\u00a0oAuthAccessTokenSecret)\u00a0 protected void setOAuthAccessTokenURL(java.lang.String\u00a0oAuthAccessTokenURL)\u00a0 protected void setOAuthAuthenticationURL(java.lang.String\u00a0oAuthAuthenticationURL)\u00a0 protected void setOAuthAuthorizationURL(java.lang.String\u00a0oAuthAuthorizationURL)\u00a0 protected void setOAuthConsumerKey(java.lang.String\u00a0oAuthConsumerKey)\u00a0 protected void setOAuthConsumerSecret(java.lang.String\u00a0oAuthConsumerSecret)\u00a0 protected void setOAuthRequestTokenURL(java.lang.String\u00a0oAuthRequestTokenURL)\u00a0 protected void setPassword(java.lang.String\u00a0password)\u00a0 protected void setPrettyDebugEnabled(boolean\u00a0prettyDebug)\u00a0 protected void setRestBaseURL(java.lang.String\u00a0restBaseURL)\u00a0 protected void setSiteStreamBaseURL(java.lang.String\u00a0siteStreamBaseURL)\u00a0 protected void setStallWarningsEnabled(boolean\u00a0stallWarningsEnabled)\u00a0 protected void setStreamBaseURL(java.lang.String\u00a0streamBaseURL)\u00a0 void setTrimUserEnabled(boolean\u00a0enabled)\u00a0 protected void setUploadBaseURL(java.lang.String\u00a0uploadBaseURL)\u00a0 protected void setUser(java.lang.String\u00a0user)\u00a0 protected void setUserStreamBaseURL(java.lang.String\u00a0siteStreamBaseURL)\u00a0 protected void setUserStreamRepliesAllEnabled(boolean\u00a0enabled)\u00a0 protected void setUserStreamWithFollowingsEnabled(boolean\u00a0enabled)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values debug private\u00a0boolean debug user private\u00a0java.lang.String user password private\u00a0java.lang.String password httpConf private\u00a0HttpClientConfiguration httpConf httpStreamingReadTimeout private\u00a0int httpStreamingReadTimeout httpRetryCount private\u00a0int httpRetryCount httpRetryIntervalSeconds private\u00a0int httpRetryIntervalSeconds oAuthConsumerKey private\u00a0java.lang.String oAuthConsumerKey oAuthConsumerSecret private\u00a0java.lang.String oAuthConsumerSecret oAuthAccessToken private\u00a0java.lang.String oAuthAccessToken oAuthAccessTokenSecret private\u00a0java.lang.String oAuthAccessTokenSecret oAuth2TokenType private\u00a0java.lang.String oAuth2TokenType oAuth2AccessToken private\u00a0java.lang.String oAuth2AccessToken oAuth2Scope private\u00a0java.lang.String oAuth2Scope oAuthRequestTokenURL private\u00a0java.lang.String oAuthRequestTokenURL oAuthAuthorizationURL private\u00a0java.lang.String oAuthAuthorizationURL oAuthAccessTokenURL private\u00a0java.lang.String oAuthAccessTokenURL oAuthAuthenticationURL private\u00a0java.lang.String oAuthAuthenticationURL oAuth2TokenURL private\u00a0java.lang.String oAuth2TokenURL oAuth2InvalidateTokenURL private\u00a0java.lang.String oAuth2InvalidateTokenURL restBaseURL private\u00a0java.lang.String restBaseURL streamBaseURL private\u00a0java.lang.String streamBaseURL userStreamBaseURL private\u00a0java.lang.String userStreamBaseURL siteStreamBaseURL private\u00a0java.lang.String siteStreamBaseURL uploadBaseURL private\u00a0java.lang.String uploadBaseURL dispatcherImpl private\u00a0java.lang.String dispatcherImpl asyncNumThreads private\u00a0int asyncNumThreads loggerFactory private\u00a0java.lang.String loggerFactory contributingTo private\u00a0long contributingTo includeMyRetweetEnabled private\u00a0boolean includeMyRetweetEnabled includeEntitiesEnabled private\u00a0boolean includeEntitiesEnabled trimUserEnabled private\u00a0boolean trimUserEnabled jsonStoreEnabled private\u00a0boolean jsonStoreEnabled mbeanEnabled private\u00a0boolean mbeanEnabled userStreamRepliesAllEnabled private\u00a0boolean userStreamRepliesAllEnabled userStreamWithFollowingsEnabled private\u00a0boolean userStreamWithFollowingsEnabled stallWarningsEnabled private\u00a0boolean stallWarningsEnabled applicationOnlyAuthEnabled private\u00a0boolean applicationOnlyAuthEnabled mediaProvider private\u00a0java.lang.String mediaProvider mediaProviderAPIKey private\u00a0java.lang.String mediaProviderAPIKey mediaProviderParameters private\u00a0java.util.Properties mediaProviderParameters daemonEnabled private\u00a0boolean daemonEnabled instances private static final\u00a0java.util.List&lt;ConfigurationBase&gt; instances Constructor Detail ConfigurationBase protected\u00a0ConfigurationBase() Method Detail dumpConfiguration public\u00a0void\u00a0dumpConfiguration() isDebugEnabled public final\u00a0boolean\u00a0isDebugEnabled() Specified by: isDebugEnabled\u00a0in interface\u00a0Configuration setDebug protected final\u00a0void\u00a0setDebug(boolean\u00a0debug) getUser public final\u00a0java.lang.String\u00a0getUser() Specified by: getUser\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getUser\u00a0in interface\u00a0Configuration setUser protected final\u00a0void\u00a0setUser(java.lang.String\u00a0user) getPassword public final\u00a0java.lang.String\u00a0getPassword() Specified by: getPassword\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getPassword\u00a0in interface\u00a0Configuration getHttpClientConfiguration public\u00a0HttpClientConfiguration\u00a0getHttpClientConfiguration() Specified by: getHttpClientConfiguration\u00a0in interface\u00a0Configuration setPassword protected final\u00a0void\u00a0setPassword(java.lang.String\u00a0password) setPrettyDebugEnabled protected final\u00a0void\u00a0setPrettyDebugEnabled(boolean\u00a0prettyDebug) setGZIPEnabled protected final\u00a0void\u00a0setGZIPEnabled(boolean\u00a0gzipEnabled) setHttpProxyHost protected final\u00a0void\u00a0setHttpProxyHost(java.lang.String\u00a0proxyHost) setHttpProxyUser protected final\u00a0void\u00a0setHttpProxyUser(java.lang.String\u00a0proxyUser) setHttpProxyPassword protected final\u00a0void\u00a0setHttpProxyPassword(java.lang.String\u00a0proxyPassword) setHttpProxyPort protected final\u00a0void\u00a0setHttpProxyPort(int\u00a0proxyPort) setHttpConnectionTimeout protected final\u00a0void\u00a0setHttpConnectionTimeout(int\u00a0connectionTimeout) setHttpReadTimeout protected final\u00a0void\u00a0setHttpReadTimeout(int\u00a0readTimeout) getHttpStreamingReadTimeout public\u00a0int\u00a0getHttpStreamingReadTimeout() Specified by: getHttpStreamingReadTimeout\u00a0in interface\u00a0Configuration setHttpStreamingReadTimeout protected final\u00a0void\u00a0setHttpStreamingReadTimeout(int\u00a0httpStreamingReadTimeout) setHttpRetryCount protected final\u00a0void\u00a0setHttpRetryCount(int\u00a0retryCount) setHttpRetryIntervalSeconds protected final\u00a0void\u00a0setHttpRetryIntervalSeconds(int\u00a0retryIntervalSeconds) getOAuthConsumerKey public final\u00a0java.lang.String\u00a0getOAuthConsumerKey() Specified by: getOAuthConsumerKey\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getOAuthConsumerKey\u00a0in interface\u00a0Configuration setOAuthConsumerKey protected final\u00a0void\u00a0setOAuthConsumerKey(java.lang.String\u00a0oAuthConsumerKey) getOAuthConsumerSecret public final\u00a0java.lang.String\u00a0getOAuthConsumerSecret() Specified by: getOAuthConsumerSecret\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getOAuthConsumerSecret\u00a0in interface\u00a0Configuration setOAuthConsumerSecret protected final\u00a0void\u00a0setOAuthConsumerSecret(java.lang.String\u00a0oAuthConsumerSecret) getOAuthAccessToken public\u00a0java.lang.String\u00a0getOAuthAccessToken() Specified by: getOAuthAccessToken\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getOAuthAccessToken\u00a0in interface\u00a0Configuration setOAuthAccessToken protected final\u00a0void\u00a0setOAuthAccessToken(java.lang.String\u00a0oAuthAccessToken) getOAuthAccessTokenSecret public\u00a0java.lang.String\u00a0getOAuthAccessTokenSecret() Specified by: getOAuthAccessTokenSecret\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getOAuthAccessTokenSecret\u00a0in interface\u00a0Configuration setOAuthAccessTokenSecret protected final\u00a0void\u00a0setOAuthAccessTokenSecret(java.lang.String\u00a0oAuthAccessTokenSecret) getOAuth2TokenType public\u00a0java.lang.String\u00a0getOAuth2TokenType() Specified by: getOAuth2TokenType\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getOAuth2TokenType\u00a0in interface\u00a0Configuration setOAuth2TokenType protected final\u00a0void\u00a0setOAuth2TokenType(java.lang.String\u00a0oAuth2TokenType) getOAuth2AccessToken public\u00a0java.lang.String\u00a0getOAuth2AccessToken() Specified by: getOAuth2AccessToken\u00a0in interface\u00a0AuthorizationConfiguration Specified by: getOAuth2AccessToken\u00a0in interface\u00a0Configuration getOAuth2Scope public\u00a0java.lang.String\u00a0getOAuth2Scope() Specified by: getOAuth2Scope\u00a0in interface\u00a0Configuration setOAuth2AccessToken protected final\u00a0void\u00a0setOAuth2AccessToken(java.lang.String\u00a0oAuth2AccessToken) setOAuth2Scope protected final\u00a0void\u00a0setOAuth2Scope(java.lang.String\u00a0oAuth2Scope) getAsyncNumThreads public final\u00a0int\u00a0getAsyncNumThreads() Specified by: getAsyncNumThreads\u00a0in interface\u00a0Configuration setAsyncNumThreads protected final\u00a0void\u00a0setAsyncNumThreads(int\u00a0asyncNumThreads) getContributingTo public final\u00a0long\u00a0getContributingTo() Specified by: getContributingTo\u00a0in interface\u00a0Configuration setContributingTo protected final\u00a0void\u00a0setContributingTo(long\u00a0contributingTo) getRestBaseURL public\u00a0java.lang.String\u00a0getRestBaseURL() Specified by: getRestBaseURL\u00a0in interface\u00a0Configuration setRestBaseURL protected final\u00a0void\u00a0setRestBaseURL(java.lang.String\u00a0restBaseURL) getUploadBaseURL public\u00a0java.lang.String\u00a0getUploadBaseURL() Specified by: getUploadBaseURL\u00a0in interface\u00a0Configuration setUploadBaseURL protected final\u00a0void\u00a0setUploadBaseURL(java.lang.String\u00a0uploadBaseURL) getStreamBaseURL public\u00a0java.lang.String\u00a0getStreamBaseURL() Specified by: getStreamBaseURL\u00a0in interface\u00a0Configuration setStreamBaseURL protected final\u00a0void\u00a0setStreamBaseURL(java.lang.String\u00a0streamBaseURL) getUserStreamBaseURL public\u00a0java.lang.String\u00a0getUserStreamBaseURL() Specified by: getUserStreamBaseURL\u00a0in interface\u00a0Configuration setUserStreamBaseURL protected final\u00a0void\u00a0setUserStreamBaseURL(java.lang.String\u00a0siteStreamBaseURL) getSiteStreamBaseURL public\u00a0java.lang.String\u00a0getSiteStreamBaseURL() Specified by: getSiteStreamBaseURL\u00a0in interface\u00a0Configuration setSiteStreamBaseURL protected final\u00a0void\u00a0setSiteStreamBaseURL(java.lang.String\u00a0siteStreamBaseURL) getOAuthRequestTokenURL public\u00a0java.lang.String\u00a0getOAuthRequestTokenURL() Specified by: getOAuthRequestTokenURL\u00a0in interface\u00a0Configuration setOAuthRequestTokenURL protected final\u00a0void\u00a0setOAuthRequestTokenURL(java.lang.String\u00a0oAuthRequestTokenURL) getOAuthAuthorizationURL public\u00a0java.lang.String\u00a0getOAuthAuthorizationURL() Specified by: getOAuthAuthorizationURL\u00a0in interface\u00a0Configuration setOAuthAuthorizationURL protected final\u00a0void\u00a0setOAuthAuthorizationURL(java.lang.String\u00a0oAuthAuthorizationURL) getOAuthAccessTokenURL public\u00a0java.lang.String\u00a0getOAuthAccessTokenURL() Specified by: getOAuthAccessTokenURL\u00a0in interface\u00a0Configuration setOAuthAccessTokenURL protected final\u00a0void\u00a0setOAuthAccessTokenURL(java.lang.String\u00a0oAuthAccessTokenURL) getOAuthAuthenticationURL public\u00a0java.lang.String\u00a0getOAuthAuthenticationURL() Specified by: getOAuthAuthenticationURL\u00a0in interface\u00a0Configuration setOAuthAuthenticationURL protected final\u00a0void\u00a0setOAuthAuthenticationURL(java.lang.String\u00a0oAuthAuthenticationURL) getOAuth2TokenURL public\u00a0java.lang.String\u00a0getOAuth2TokenURL() Specified by: getOAuth2TokenURL\u00a0in interface\u00a0Configuration setOAuth2TokenURL protected final\u00a0void\u00a0setOAuth2TokenURL(java.lang.String\u00a0oAuth2TokenURL) getOAuth2InvalidateTokenURL public\u00a0java.lang.String\u00a0getOAuth2InvalidateTokenURL() Specified by: getOAuth2InvalidateTokenURL\u00a0in interface\u00a0Configuration setOAuth2InvalidateTokenURL protected final\u00a0void\u00a0setOAuth2InvalidateTokenURL(java.lang.String\u00a0oAuth2InvalidateTokenURL) getDispatcherImpl public\u00a0java.lang.String\u00a0getDispatcherImpl() Specified by: getDispatcherImpl\u00a0in interface\u00a0Configuration setDispatcherImpl protected final\u00a0void\u00a0setDispatcherImpl(java.lang.String\u00a0dispatcherImpl) getLoggerFactory public\u00a0java.lang.String\u00a0getLoggerFactory() Specified by: getLoggerFactory\u00a0in interface\u00a0Configuration isIncludeEntitiesEnabled public\u00a0boolean\u00a0isIncludeEntitiesEnabled() Specified by: isIncludeEntitiesEnabled\u00a0in interface\u00a0Configuration setIncludeEntitiesEnabled protected\u00a0void\u00a0setIncludeEntitiesEnabled(boolean\u00a0includeEntitiesEnabled) setLoggerFactory protected final\u00a0void\u00a0setLoggerFactory(java.lang.String\u00a0loggerImpl) isIncludeMyRetweetEnabled public\u00a0boolean\u00a0isIncludeMyRetweetEnabled() Specified by: isIncludeMyRetweetEnabled\u00a0in interface\u00a0Configuration setIncludeMyRetweetEnabled public\u00a0void\u00a0setIncludeMyRetweetEnabled(boolean\u00a0enabled) isTrimUserEnabled public\u00a0boolean\u00a0isTrimUserEnabled() Specified by: isTrimUserEnabled\u00a0in interface\u00a0Configuration isDaemonEnabled public\u00a0boolean\u00a0isDaemonEnabled() Specified by: isDaemonEnabled\u00a0in interface\u00a0Configuration setDaemonEnabled protected\u00a0void\u00a0setDaemonEnabled(boolean\u00a0daemonEnabled) setTrimUserEnabled public\u00a0void\u00a0setTrimUserEnabled(boolean\u00a0enabled) isJSONStoreEnabled public\u00a0boolean\u00a0isJSONStoreEnabled() Specified by: isJSONStoreEnabled\u00a0in interface\u00a0Configuration setJSONStoreEnabled protected final\u00a0void\u00a0setJSONStoreEnabled(boolean\u00a0enabled) isMBeanEnabled public\u00a0boolean\u00a0isMBeanEnabled() Specified by: isMBeanEnabled\u00a0in interface\u00a0Configuration setMBeanEnabled protected final\u00a0void\u00a0setMBeanEnabled(boolean\u00a0enabled) isUserStreamRepliesAllEnabled public\u00a0boolean\u00a0isUserStreamRepliesAllEnabled() Specified by: isUserStreamRepliesAllEnabled\u00a0in interface\u00a0Configuration isUserStreamWithFollowingsEnabled public\u00a0boolean\u00a0isUserStreamWithFollowingsEnabled() Specified by: isUserStreamWithFollowingsEnabled\u00a0in interface\u00a0Configuration setUserStreamRepliesAllEnabled protected final\u00a0void\u00a0setUserStreamRepliesAllEnabled(boolean\u00a0enabled) setUserStreamWithFollowingsEnabled protected final\u00a0void\u00a0setUserStreamWithFollowingsEnabled(boolean\u00a0enabled) isStallWarningsEnabled public\u00a0boolean\u00a0isStallWarningsEnabled() Specified by: isStallWarningsEnabled\u00a0in interface\u00a0Configuration setStallWarningsEnabled protected final\u00a0void\u00a0setStallWarningsEnabled(boolean\u00a0stallWarningsEnabled) isApplicationOnlyAuthEnabled public\u00a0boolean\u00a0isApplicationOnlyAuthEnabled() Specified by: isApplicationOnlyAuthEnabled\u00a0in interface\u00a0Configuration setApplicationOnlyAuthEnabled protected final\u00a0void\u00a0setApplicationOnlyAuthEnabled(boolean\u00a0applicationOnlyAuthEnabled) getMediaProvider public\u00a0java.lang.String\u00a0getMediaProvider() Specified by: getMediaProvider\u00a0in interface\u00a0Configuration setMediaProvider protected final\u00a0void\u00a0setMediaProvider(java.lang.String\u00a0mediaProvider) getMediaProviderAPIKey public\u00a0java.lang.String\u00a0getMediaProviderAPIKey() Specified by: getMediaProviderAPIKey\u00a0in interface\u00a0Configuration setMediaProviderAPIKey protected final\u00a0void\u00a0setMediaProviderAPIKey(java.lang.String\u00a0mediaProviderAPIKey) getMediaProviderParameters public\u00a0java.util.Properties\u00a0getMediaProviderParameters() Specified by: getMediaProviderParameters\u00a0in interface\u00a0Configuration setMediaProviderParameters protected final\u00a0void\u00a0setMediaProviderParameters(java.util.Properties\u00a0props) fixURL static\u00a0java.lang.String\u00a0fixURL(boolean\u00a0useSSL, java.lang.String\u00a0url) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object cacheInstance private static\u00a0void\u00a0cacheInstance(ConfigurationBase\u00a0conf) cacheInstance protected\u00a0void\u00a0cacheInstance() getInstance private static\u00a0ConfigurationBase\u00a0getInstance(ConfigurationBase\u00a0configurationBase) readResolve protected\u00a0java.lang.Object\u00a0readResolve() throws java.io.ObjectStreamException Throws: java.io.ObjectStreamException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ConfigurationBuilder &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ConfigurationBuilder&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10,&quot;i39&quot;:10,&quot;i40&quot;:10,&quot;i41&quot;:10,&quot;i42&quot;:10,&quot;i43&quot;:10,&quot;i44&quot;:10,&quot;i45&quot;:10,&quot;i46&quot;:10,&quot;i47&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Class ConfigurationBuilder java.lang.Object twitter4j.conf.ConfigurationBuilder public final class ConfigurationBuilder extends java.lang.Object A builder that can be used to construct a twitter4j configuration with desired settings. This builder has sensible defaults such that new ConfigurationBuilder().build() would create a usable configuration. This configuration builder is useful for clients that wish to configure twitter4j in unit tests or from command line flags for example. Author: John Sirois - john.sirois at gmail.com Field Summary Fields\u00a0 Modifier and Type Field and Description private ConfigurationBase configurationBean\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description ConfigurationBuilder()\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description Configuration build()\u00a0 private void checkNotBuilt()\u00a0 ConfigurationBuilder setApplicationOnlyAuthEnabled(boolean\u00a0applicationOnlyAuthEnabled)\u00a0 ConfigurationBuilder setAsyncNumThreads(int\u00a0asyncNumThreads)\u00a0 ConfigurationBuilder setContributingTo(long\u00a0contributingTo)\u00a0 ConfigurationBuilder setDaemonEnabled(boolean\u00a0daemonEnabled)\u00a0 ConfigurationBuilder setDebugEnabled(boolean\u00a0debugEnabled)\u00a0 ConfigurationBuilder setDispatcherImpl(java.lang.String\u00a0dispatcherImpl)\u00a0 ConfigurationBuilder setGZIPEnabled(boolean\u00a0gzipEnabled)\u00a0 ConfigurationBuilder setHttpConnectionTimeout(int\u00a0httpConnectionTimeout)\u00a0 ConfigurationBuilder setHttpProxyHost(java.lang.String\u00a0httpProxyHost)\u00a0 ConfigurationBuilder setHttpProxyPassword(java.lang.String\u00a0httpProxyPassword)\u00a0 ConfigurationBuilder setHttpProxyPort(int\u00a0httpProxyPort)\u00a0 ConfigurationBuilder setHttpProxyUser(java.lang.String\u00a0httpProxyUser)\u00a0 ConfigurationBuilder setHttpReadTimeout(int\u00a0httpReadTimeout)\u00a0 ConfigurationBuilder setHttpRetryCount(int\u00a0httpRetryCount)\u00a0 ConfigurationBuilder setHttpRetryIntervalSeconds(int\u00a0httpRetryIntervalSeconds)\u00a0 ConfigurationBuilder setHttpStreamingReadTimeout(int\u00a0httpStreamingReadTimeout)\u00a0 ConfigurationBuilder setIncludeEntitiesEnabled(boolean\u00a0enabled)\u00a0 ConfigurationBuilder setIncludeMyRetweetEnabled(boolean\u00a0enabled)\u00a0 ConfigurationBuilder setJSONStoreEnabled(boolean\u00a0enabled)\u00a0 ConfigurationBuilder setMBeanEnabled(boolean\u00a0enabled)\u00a0 ConfigurationBuilder setMediaProvider(java.lang.String\u00a0mediaProvider)\u00a0 ConfigurationBuilder setMediaProviderAPIKey(java.lang.String\u00a0mediaProviderAPIKey)\u00a0 ConfigurationBuilder setMediaProviderParameters(java.util.Properties\u00a0props)\u00a0 ConfigurationBuilder setOAuth2AccessToken(java.lang.String\u00a0oAuth2AccessToken)\u00a0 ConfigurationBuilder setOAuth2InvalidateTokenURL(java.lang.String\u00a0invalidateTokenURL)\u00a0 ConfigurationBuilder setOAuth2Scope(java.lang.String\u00a0oAuth2Scope)\u00a0 ConfigurationBuilder setOAuth2TokenType(java.lang.String\u00a0oAuth2TokenType)\u00a0 ConfigurationBuilder setOAuth2TokenURL(java.lang.String\u00a0oAuth2TokenURL)\u00a0 ConfigurationBuilder setOAuthAccessToken(java.lang.String\u00a0oAuthAccessToken)\u00a0 ConfigurationBuilder setOAuthAccessTokenSecret(java.lang.String\u00a0oAuthAccessTokenSecret)\u00a0 ConfigurationBuilder setOAuthAccessTokenURL(java.lang.String\u00a0oAuthAccessTokenURL)\u00a0 ConfigurationBuilder setOAuthAuthenticationURL(java.lang.String\u00a0oAuthAuthenticationURL)\u00a0 ConfigurationBuilder setOAuthAuthorizationURL(java.lang.String\u00a0oAuthAuthorizationURL)\u00a0 ConfigurationBuilder setOAuthConsumerKey(java.lang.String\u00a0oAuthConsumerKey)\u00a0 ConfigurationBuilder setOAuthConsumerSecret(java.lang.String\u00a0oAuthConsumerSecret)\u00a0 ConfigurationBuilder setOAuthRequestTokenURL(java.lang.String\u00a0oAuthRequestTokenURL)\u00a0 ConfigurationBuilder setPassword(java.lang.String\u00a0password)\u00a0 ConfigurationBuilder setPrettyDebugEnabled(boolean\u00a0prettyDebugEnabled)\u00a0 ConfigurationBuilder setRestBaseURL(java.lang.String\u00a0restBaseURL)\u00a0 ConfigurationBuilder setSiteStreamBaseURL(java.lang.String\u00a0siteStreamBaseURL)\u00a0 ConfigurationBuilder setStreamBaseURL(java.lang.String\u00a0streamBaseURL)\u00a0 ConfigurationBuilder setTrimUserEnabled(boolean\u00a0enabled)\u00a0 ConfigurationBuilder setUser(java.lang.String\u00a0user)\u00a0 ConfigurationBuilder setUserStreamBaseURL(java.lang.String\u00a0userStreamBaseURL)\u00a0 ConfigurationBuilder setUserStreamRepliesAllEnabled(boolean\u00a0enabled)\u00a0 ConfigurationBuilder setUserStreamWithFollowingsEnabled(boolean\u00a0enabled)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail configurationBean private\u00a0ConfigurationBase configurationBean Constructor Detail ConfigurationBuilder public\u00a0ConfigurationBuilder() Method Detail setPrettyDebugEnabled public\u00a0ConfigurationBuilder\u00a0setPrettyDebugEnabled(boolean\u00a0prettyDebugEnabled) setGZIPEnabled public\u00a0ConfigurationBuilder\u00a0setGZIPEnabled(boolean\u00a0gzipEnabled) setDebugEnabled public\u00a0ConfigurationBuilder\u00a0setDebugEnabled(boolean\u00a0debugEnabled) setApplicationOnlyAuthEnabled public\u00a0ConfigurationBuilder\u00a0setApplicationOnlyAuthEnabled(boolean\u00a0applicationOnlyAuthEnabled) setUser public\u00a0ConfigurationBuilder\u00a0setUser(java.lang.String\u00a0user) setPassword public\u00a0ConfigurationBuilder\u00a0setPassword(java.lang.String\u00a0password) setHttpProxyHost public\u00a0ConfigurationBuilder\u00a0setHttpProxyHost(java.lang.String\u00a0httpProxyHost) setHttpProxyUser public\u00a0ConfigurationBuilder\u00a0setHttpProxyUser(java.lang.String\u00a0httpProxyUser) setHttpProxyPassword public\u00a0ConfigurationBuilder\u00a0setHttpProxyPassword(java.lang.String\u00a0httpProxyPassword) setHttpProxyPort public\u00a0ConfigurationBuilder\u00a0setHttpProxyPort(int\u00a0httpProxyPort) setHttpConnectionTimeout public\u00a0ConfigurationBuilder\u00a0setHttpConnectionTimeout(int\u00a0httpConnectionTimeout) setHttpReadTimeout public\u00a0ConfigurationBuilder\u00a0setHttpReadTimeout(int\u00a0httpReadTimeout) setHttpStreamingReadTimeout public\u00a0ConfigurationBuilder\u00a0setHttpStreamingReadTimeout(int\u00a0httpStreamingReadTimeout) setHttpRetryCount public\u00a0ConfigurationBuilder\u00a0setHttpRetryCount(int\u00a0httpRetryCount) setHttpRetryIntervalSeconds public\u00a0ConfigurationBuilder\u00a0setHttpRetryIntervalSeconds(int\u00a0httpRetryIntervalSeconds) setOAuthConsumerKey public\u00a0ConfigurationBuilder\u00a0setOAuthConsumerKey(java.lang.String\u00a0oAuthConsumerKey) setOAuthConsumerSecret public\u00a0ConfigurationBuilder\u00a0setOAuthConsumerSecret(java.lang.String\u00a0oAuthConsumerSecret) setOAuthAccessToken public\u00a0ConfigurationBuilder\u00a0setOAuthAccessToken(java.lang.String\u00a0oAuthAccessToken) setOAuthAccessTokenSecret public\u00a0ConfigurationBuilder\u00a0setOAuthAccessTokenSecret(java.lang.String\u00a0oAuthAccessTokenSecret) setOAuth2TokenType public\u00a0ConfigurationBuilder\u00a0setOAuth2TokenType(java.lang.String\u00a0oAuth2TokenType) setOAuth2AccessToken public\u00a0ConfigurationBuilder\u00a0setOAuth2AccessToken(java.lang.String\u00a0oAuth2AccessToken) setOAuth2Scope public\u00a0ConfigurationBuilder\u00a0setOAuth2Scope(java.lang.String\u00a0oAuth2Scope) setOAuthRequestTokenURL public\u00a0ConfigurationBuilder\u00a0setOAuthRequestTokenURL(java.lang.String\u00a0oAuthRequestTokenURL) setOAuthAuthorizationURL public\u00a0ConfigurationBuilder\u00a0setOAuthAuthorizationURL(java.lang.String\u00a0oAuthAuthorizationURL) setOAuthAccessTokenURL public\u00a0ConfigurationBuilder\u00a0setOAuthAccessTokenURL(java.lang.String\u00a0oAuthAccessTokenURL) setOAuthAuthenticationURL public\u00a0ConfigurationBuilder\u00a0setOAuthAuthenticationURL(java.lang.String\u00a0oAuthAuthenticationURL) setOAuth2TokenURL public\u00a0ConfigurationBuilder\u00a0setOAuth2TokenURL(java.lang.String\u00a0oAuth2TokenURL) setOAuth2InvalidateTokenURL public\u00a0ConfigurationBuilder\u00a0setOAuth2InvalidateTokenURL(java.lang.String\u00a0invalidateTokenURL) setRestBaseURL public\u00a0ConfigurationBuilder\u00a0setRestBaseURL(java.lang.String\u00a0restBaseURL) setStreamBaseURL public\u00a0ConfigurationBuilder\u00a0setStreamBaseURL(java.lang.String\u00a0streamBaseURL) setUserStreamBaseURL public\u00a0ConfigurationBuilder\u00a0setUserStreamBaseURL(java.lang.String\u00a0userStreamBaseURL) setSiteStreamBaseURL public\u00a0ConfigurationBuilder\u00a0setSiteStreamBaseURL(java.lang.String\u00a0siteStreamBaseURL) setAsyncNumThreads public\u00a0ConfigurationBuilder\u00a0setAsyncNumThreads(int\u00a0asyncNumThreads) setDaemonEnabled public\u00a0ConfigurationBuilder\u00a0setDaemonEnabled(boolean\u00a0daemonEnabled) setContributingTo public\u00a0ConfigurationBuilder\u00a0setContributingTo(long\u00a0contributingTo) setDispatcherImpl public\u00a0ConfigurationBuilder\u00a0setDispatcherImpl(java.lang.String\u00a0dispatcherImpl) setTrimUserEnabled public\u00a0ConfigurationBuilder\u00a0setTrimUserEnabled(boolean\u00a0enabled) setIncludeMyRetweetEnabled public\u00a0ConfigurationBuilder\u00a0setIncludeMyRetweetEnabled(boolean\u00a0enabled) setIncludeEntitiesEnabled public\u00a0ConfigurationBuilder\u00a0setIncludeEntitiesEnabled(boolean\u00a0enabled) setJSONStoreEnabled public\u00a0ConfigurationBuilder\u00a0setJSONStoreEnabled(boolean\u00a0enabled) setMBeanEnabled public\u00a0ConfigurationBuilder\u00a0setMBeanEnabled(boolean\u00a0enabled) setUserStreamRepliesAllEnabled public\u00a0ConfigurationBuilder\u00a0setUserStreamRepliesAllEnabled(boolean\u00a0enabled) setUserStreamWithFollowingsEnabled public\u00a0ConfigurationBuilder\u00a0setUserStreamWithFollowingsEnabled(boolean\u00a0enabled) setMediaProvider public\u00a0ConfigurationBuilder\u00a0setMediaProvider(java.lang.String\u00a0mediaProvider) setMediaProviderAPIKey public\u00a0ConfigurationBuilder\u00a0setMediaProviderAPIKey(java.lang.String\u00a0mediaProviderAPIKey) setMediaProviderParameters public\u00a0ConfigurationBuilder\u00a0setMediaProviderParameters(java.util.Properties\u00a0props) build public\u00a0Configuration\u00a0build() checkNotBuilt private\u00a0void\u00a0checkNotBuilt() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ConfigurationContext &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ConfigurationContext&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Class ConfigurationContext java.lang.Object twitter4j.conf.ConfigurationContext public final class ConfigurationContext extends java.lang.Object Static factory of Configuration. This class wraps ConfigurationFactory implementations. By default, twitter4j.conf.PropertyConfigurationFactory will be used and can be changed with -Dtwitter4j.configurationFactory system property. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static java.lang.String CONFIGURATION_IMPL\u00a0 private static java.lang.String DEFAULT_CONFIGURATION_FACTORY\u00a0 private static ConfigurationFactory factory\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description ConfigurationContext()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static Configuration getInstance()\u00a0 static Configuration getInstance(java.lang.String\u00a0configTreePath)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail DEFAULT_CONFIGURATION_FACTORY private static final\u00a0java.lang.String DEFAULT_CONFIGURATION_FACTORY See Also: Constant Field Values CONFIGURATION_IMPL private static final\u00a0java.lang.String CONFIGURATION_IMPL See Also: Constant Field Values factory private static final\u00a0ConfigurationFactory factory Constructor Detail ConfigurationContext public\u00a0ConfigurationContext() Method Detail getInstance public static\u00a0Configuration\u00a0getInstance() getInstance public static\u00a0Configuration\u00a0getInstance(java.lang.String\u00a0configTreePath) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ConfigurationFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ConfigurationFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Interface ConfigurationFactory All Known Implementing Classes: PropertyConfigurationFactory public interface ConfigurationFactory Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void dispose() clean up resources acquired by this factory. Configuration getInstance() returns the root configuration Configuration getInstance(java.lang.String\u00a0configTreePath) returns the configuration specified by the path Method Detail getInstance Configuration\u00a0getInstance() returns the root configuration Returns: root configuration getInstance Configuration\u00a0getInstance(java.lang.String\u00a0configTreePath) returns the configuration specified by the path Parameters: configTreePath - the path Returns: the configuratoin dispose void\u00a0dispose() clean up resources acquired by this factory. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ConnectionLifeCycleListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ConnectionLifeCycleListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface ConnectionLifeCycleListener public interface ConnectionLifeCycleListener Since: Twitter4J 2.1.7 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onCleanUp() called before thread gets cleaned up void onConnect() called after connection was established void onDisconnect() called after connection was disconnected Method Detail onConnect void\u00a0onConnect() called after connection was established onDisconnect void\u00a0onDisconnect() called after connection was disconnected onCleanUp void\u00a0onCleanUp() called before thread gets cleaned up Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Consumer &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Consumer&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.util.function Interface Consumer&lt;T&gt; public interface Consumer&lt;T&gt; Functional interface for handling TwitterExceptions Since: Twitter4J 4.0.4 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void accept(T\u00a0t)\u00a0 Method Detail accept void\u00a0accept(T\u00a0t) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ControlStreamInfo &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ControlStreamInfo&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class ControlStreamInfo java.lang.Object twitter4j.ControlStreamInfo All Implemented Interfaces: java.io.Serializable public final class ControlStreamInfo extends java.lang.Object implements java.io.Serializable Since: Twitter4J 2.2.6 Author: Yusuke Yamamoto - yusuke at twitter.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private boolean includeFollowingsActivity\u00a0 private boolean includeUserChanges\u00a0 private java.lang.String replies\u00a0 private static long serialVersionUID\u00a0 private StreamController.User[] users\u00a0 private java.lang.String with\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description ControlStreamInfo(StreamController\u00a0controller, JSONObject\u00a0json)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 StreamController.User[] getUsers()\u00a0 int hashCode()\u00a0 boolean isIncludeFollowingsActivity()\u00a0 boolean isIncludeUserChanges()\u00a0 java.lang.String isReplies()\u00a0 java.lang.String isWith()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values users private final\u00a0StreamController.User[] users includeFollowingsActivity private final\u00a0boolean includeFollowingsActivity includeUserChanges private final\u00a0boolean includeUserChanges replies private final\u00a0java.lang.String replies with private final\u00a0java.lang.String with Constructor Detail ControlStreamInfo ControlStreamInfo(StreamController\u00a0controller, JSONObject\u00a0json) throws TwitterException Throws: TwitterException Method Detail getUsers public\u00a0StreamController.User[]\u00a0getUsers() isIncludeFollowingsActivity public\u00a0boolean\u00a0isIncludeFollowingsActivity() isIncludeUserChanges public\u00a0boolean\u00a0isIncludeUserChanges() isReplies public\u00a0java.lang.String\u00a0isReplies() isWith public\u00a0java.lang.String\u00a0isWith() equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method CursorSupport &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;CursorSupport&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface CursorSupport All Known Subinterfaces: IDs, PagableResponseList&lt;T&gt; All Known Implementing Classes: StreamController.FriendsIDs public interface CursorSupport Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description static long START\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long getNextCursor()\u00a0 long getPreviousCursor()\u00a0 boolean hasNext()\u00a0 boolean hasPrevious()\u00a0 Field Detail START static final\u00a0long START Since: Twitter4J 2.2.3 See Also: Constant Field Values Method Detail hasPrevious boolean\u00a0hasPrevious() Returns: has previous page Since: Twitter4J 2.0.10 getPreviousCursor long\u00a0getPreviousCursor() Returns: previous cursor Since: Twitter4J 2.0.10 hasNext boolean\u00a0hasNext() Returns: has next Since: Twitter4J 2.0.10 getNextCursor long\u00a0getNextCursor() Returns: next cursor Since: Twitter4J 2.0.10 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method DataObjectFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;DataObjectFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:41,&quot;i1&quot;:41,&quot;i2&quot;:41,&quot;i3&quot;:41,&quot;i4&quot;:41,&quot;i5&quot;:41,&quot;i6&quot;:41,&quot;i7&quot;:41,&quot;i8&quot;:41,&quot;i9&quot;:41,&quot;i10&quot;:41,&quot;i11&quot;:41,&quot;i12&quot;:41,&quot;i13&quot;:41,&quot;i14&quot;:41,&quot;i15&quot;:41,&quot;i16&quot;:41}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;],32:[&quot;t6&quot;,&quot;Deprecated Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.json Class DataObjectFactory java.lang.Object twitter4j.json.DataObjectFactory Deprecated.\u00a0 use TwitterObjectFactory instead public final class DataObjectFactory extends java.lang.Object Since: Twitter4J 2.1.7 Author: Yusuke Yamamoto - yusuke at mac.com Constructor Summary Constructors\u00a0 Modifier Constructor and Description private DataObjectFactory() Deprecated.\u00a0 \u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0Deprecated Methods\u00a0 Modifier and Type Method and Description static AccountTotals createAccountTotals(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs an AccountTotals object from rawJSON string. static Category createCategory(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Category object from rawJSON string. static DirectMessage createDirectMessage(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a DirectMessage object from rawJSON string. static IDs createIDs(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a IDs object from rawJSON string. static Location createLocation(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Location object from rawJSON string. static java.lang.Object createObject(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 use TwitterObjectFactory.createObject(String) instead static OEmbed createOEmbed(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs an OEmbed object from rawJSON string. static Place createPlace(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Place object from rawJSON string. static java.util.Map&lt;java.lang.String,RateLimitStatus&gt; createRateLimitStatus(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a RateLimitStatus object from rawJSON string. static Relationship createRelationship(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Relationship object from rawJSON string. static SavedSearch createSavedSearch(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a SavedSearch object from rawJSON string. static Status createStatus(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Status object from rawJSON string. static Trend createTrend(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Trend object from rawJSON string. static Trends createTrends(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a Trends object from rawJSON string. static User createUser(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a User object from rawJSON string. static UserList createUserList(java.lang.String\u00a0rawJSON) Deprecated.\u00a0 Constructs a UserList object from rawJSON string. static java.lang.String getRawJSON(java.lang.Object\u00a0obj) Deprecated.\u00a0 Returns a raw JSON form of the provided object. Note that raw JSON forms can be retrieved only from the same thread invoked the last method call and will become inaccessible once another method call Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Constructor Detail DataObjectFactory private\u00a0DataObjectFactory() Deprecated.\u00a0 Method Detail getRawJSON public static\u00a0java.lang.String\u00a0getRawJSON(java.lang.Object\u00a0obj) Deprecated.\u00a0 Returns a raw JSON form of the provided object. Note that raw JSON forms can be retrieved only from the same thread invoked the last method call and will become inaccessible once another method call Parameters: obj - target object to retrieve JSON Returns: raw JSON Since: Twitter4J 2.1.7 createStatus public static\u00a0Status\u00a0createStatus(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Status object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Status Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createUser public static\u00a0User\u00a0createUser(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a User object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: User Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createAccountTotals public static\u00a0AccountTotals\u00a0createAccountTotals(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs an AccountTotals object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: AccountTotals Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.9 createRelationship public static\u00a0Relationship\u00a0createRelationship(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Relationship object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Relationship Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createPlace public static\u00a0Place\u00a0createPlace(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Place object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Place Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createSavedSearch public static\u00a0SavedSearch\u00a0createSavedSearch(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a SavedSearch object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: SavedSearch Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createTrend public static\u00a0Trend\u00a0createTrend(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Trend object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Trend Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createTrends public static\u00a0Trends\u00a0createTrends(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Trends object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Trends Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createIDs public static\u00a0IDs\u00a0createIDs(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a IDs object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: IDs Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createRateLimitStatus public static\u00a0java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0createRateLimitStatus(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a RateLimitStatus object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: RateLimitStatus Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createCategory public static\u00a0Category\u00a0createCategory(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Category object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Category Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createDirectMessage public static\u00a0DirectMessage\u00a0createDirectMessage(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a DirectMessage object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: DirectMessage Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createLocation public static\u00a0Location\u00a0createLocation(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a Location object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Location Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createUserList public static\u00a0UserList\u00a0createUserList(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs a UserList object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: UserList Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createOEmbed public static\u00a0OEmbed\u00a0createOEmbed(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0 Constructs an OEmbed object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: OEmbed Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 3.0.2 createObject public static\u00a0java.lang.Object\u00a0createObject(java.lang.String\u00a0rawJSON) throws TwitterException Deprecated.\u00a0use TwitterObjectFactory.createObject(String) instead Construct an object from rawJSON string. This method may be called when you do not know what a given raw JSON string contains. It will do the work of determining what type of object the JSON represents, and constructing the respective object type. For example, if the JSON contents represents a Status, then a Status will be returned. If it represents a deletion notice, then a StatusDeletionNotice will be returned. The caller can simply use instanceof to handle the returned object as applicable. NOTE: the raw JSONObject will be returned in cases where there isn't a discrete respective object type that can be constructed. That way, the caller can at least have access to the JSON itself. Parameters: rawJSON - raw JSON form as String Returns: the respective constructed object, or the JSONObject in the case where we cannot determine the object type. Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.9 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method DirectMessage &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;DirectMessage&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface DirectMessage All Superinterfaces: EntitySupport, java.io.Serializable, TwitterResponse public interface DirectMessage extends TwitterResponse, EntitySupport, java.io.Serializable A data interface representing sent/received direct message. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.util.Date getCreatedAt()\u00a0 long getId()\u00a0 User getRecipient()\u00a0 long getRecipientId()\u00a0 java.lang.String getRecipientScreenName()\u00a0 User getSender()\u00a0 long getSenderId()\u00a0 java.lang.String getSenderScreenName()\u00a0 java.lang.String getText()\u00a0 Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Methods inherited from interface\u00a0twitter4j.EntitySupport getExtendedMediaEntities, getHashtagEntities, getMediaEntities, getSymbolEntities, getURLEntities, getUserMentionEntities Method Detail getId long\u00a0getId() getText java.lang.String\u00a0getText() getSenderId long\u00a0getSenderId() getRecipientId long\u00a0getRecipientId() getCreatedAt java.util.Date\u00a0getCreatedAt() Returns: created_at Since: Twitter4J 1.1.0 getSenderScreenName java.lang.String\u00a0getSenderScreenName() getRecipientScreenName java.lang.String\u00a0getRecipientScreenName() getSender User\u00a0getSender() getRecipient User\u00a0getRecipient() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method DirectMessagesResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;DirectMessagesResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface DirectMessagesResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface DirectMessagesResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description DirectMessage destroyDirectMessage(long\u00a0id) Destroys the direct message specified in the required ID parameter. ResponseList&lt;DirectMessage&gt; getDirectMessages() Returns a list of the direct messages sent to the authenticating user. ResponseList&lt;DirectMessage&gt; getDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent to the authenticating user. java.io.InputStream getDMImageAsStream(java.lang.String\u00a0url) Returns a stream of the image included in direct messages. ResponseList&lt;DirectMessage&gt; getSentDirectMessages() Returns a list of the direct messages sent by the authenticating user. ResponseList&lt;DirectMessage&gt; getSentDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent by the authenticating user. DirectMessage sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. DirectMessage sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. DirectMessage showDirectMessage(long\u00a0id) Returns a single direct message, specified by an id parameter. Method Detail getDirectMessages ResponseList&lt;DirectMessage&gt;\u00a0getDirectMessages() throws TwitterException Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages Twitter Developers getDirectMessages ResponseList&lt;DirectMessage&gt;\u00a0getDirectMessages(Paging\u00a0paging) throws TwitterException Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages Twitter Developers getSentDirectMessages ResponseList&lt;DirectMessage&gt;\u00a0getSentDirectMessages() throws TwitterException Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages/sent Twitter Developers getSentDirectMessages ResponseList&lt;DirectMessage&gt;\u00a0getSentDirectMessages(Paging\u00a0paging) throws TwitterException Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: List Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: GET direct_messages/sent Twitter Developers showDirectMessage DirectMessage\u00a0showDirectMessage(long\u00a0id) throws TwitterException Returns a single direct message, specified by an id parameter. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/direct_messages/show/:id.json Parameters: id - message id Returns: DirectMessage Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group destroyDirectMessage DirectMessage\u00a0destroyDirectMessage(long\u00a0id) throws TwitterException Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message. This method calls https://api.twitter.com/1.1/direct_messages/destroy Parameters: id - the ID of the direct message to destroy Returns: the deleted direct message Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST direct_messages/destroy/:id Twitter Developers sendDirectMessage DirectMessage\u00a0sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) throws TwitterException Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimmed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Parameters: userId - the screen name of the user to whom send the direct message text - The text of your direct message. Returns: DirectMessage Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4j 2.1.0 See Also: POST direct_messages/new Twitter Developers sendDirectMessage DirectMessage\u00a0sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) throws TwitterException Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimmed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Parameters: screenName - the screen name of the user to whom send the direct message text - The text of your direct message. Returns: DirectMessage Throws: TwitterException - when Twitter service or network is unavailable See Also: POST direct_messages/new Twitter Developers getDMImageAsStream java.io.InputStream\u00a0getDMImageAsStream(java.lang.String\u00a0url) throws TwitterException Returns a stream of the image included in direct messages. Parameters: url - image url Returns: InputStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: Access media shared in direct messages Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method DirectMessagesResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;DirectMessagesResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface DirectMessagesResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface DirectMessagesResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void destroyDirectMessage(long\u00a0id) Destroys the direct message specified in the required ID parameter. void getDirectMessages() Returns a list of the direct messages sent to the authenticating user. void getDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent to the authenticating user. void getSentDirectMessages() Returns a list of the direct messages sent by the authenticating user. void getSentDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent by the authenticating user. void sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. void sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. void showDirectMessage(long\u00a0id) Returns a single direct message, specified by an id parameter. Method Detail getDirectMessages void\u00a0getDirectMessages() Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages See Also: GET direct_messages Twitter Developers getDirectMessages void\u00a0getDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Parameters: paging - controls pagination Since: Twitter4J 2.0.1 See Also: GET direct_messages Twitter Developers getSentDirectMessages void\u00a0getSentDirectMessages() Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent See Also: GET direct_messages/sent Twitter Developers getSentDirectMessages void\u00a0getSentDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Parameters: paging - controls pagination Since: Twitter4J 2.0.1 See Also: GET direct_messages/sent Twitter Developers showDirectMessage void\u00a0showDirectMessage(long\u00a0id) Returns a single direct message, specified by an id parameter. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/direct_messages/show/:id.json Parameters: id - message id Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group destroyDirectMessage void\u00a0destroyDirectMessage(long\u00a0id) Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message. This method calls https://api.twitter.com/1.1/direct_messages/destroy Parameters: id - int Since: Twitter4J 2.0.1 See Also: POST direct_messages/destroy/:id Twitter Developers sendDirectMessage void\u00a0sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Parameters: userId - the screen name of the user to whom send the direct message text - The text of your direct message. Since: Twitter4j 2.1.0 See Also: POST direct_messages/new Twitter Developers sendDirectMessage void\u00a0sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Parameters: screenName - the screen name of the user to whom send the direct message text - The text of your direct message. See Also: POST direct_messages/new Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method EntitySupport &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;EntitySupport&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface EntitySupport All Known Subinterfaces: DirectMessage, Status public interface EntitySupport Since: Twitter4J 2.2.5 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description ExtendedMediaEntity[] getExtendedMediaEntities() Returns an array of ExtendedMediaEntities if media of extended_entities are available in the tweet. HashtagEntity[] getHashtagEntities() Returns an array if hashtag mentioned in the tweet. MediaEntity[] getMediaEntities() Returns an array of MediaEntities if medias are available in the tweet. SymbolEntity[] getSymbolEntities() Returns an array of SymbolEntities if medias are available in the tweet. URLEntity[] getURLEntities() Returns an array if URLEntity mentioned in the tweet. UserMentionEntity[] getUserMentionEntities() Returns an array of user mentions in the tweet. Method Detail getUserMentionEntities UserMentionEntity[]\u00a0getUserMentionEntities() Returns an array of user mentions in the tweet. This method will an empty array if no users were mentioned in the tweet. Returns: An array of user mention entities in the tweet. Since: Twitter4J 2.1.9 getURLEntities URLEntity[]\u00a0getURLEntities() Returns an array if URLEntity mentioned in the tweet. This method will an empty array if no url were mentioned in the tweet. Returns: An array of URLEntity mentioned in the tweet. Since: Twitter4J 2.1.9 getHashtagEntities HashtagEntity[]\u00a0getHashtagEntities() Returns an array if hashtag mentioned in the tweet. This method will an empty array if no hashtags were mentioned in the tweet. Returns: An array of Hashtag mentioned in the tweet. Since: Twitter4J 2.1.9 getMediaEntities MediaEntity[]\u00a0getMediaEntities() Returns an array of MediaEntities if medias are available in the tweet. This method will an empty array if no medias were mentioned. Returns: an array of MediaEntities. Since: Twitter4J 2.2.3 getExtendedMediaEntities ExtendedMediaEntity[]\u00a0getExtendedMediaEntities() Returns an array of ExtendedMediaEntities if media of extended_entities are available in the tweet. This method will an empty array if no extended-medias were mentioned. Returns: an array of ExtendedMediaEntities. Since: Twitter4J 4.0.2 See Also: Multiple Media Entities in Statuses getSymbolEntities SymbolEntity[]\u00a0getSymbolEntities() Returns an array of SymbolEntities if medias are available in the tweet. This method will an empty array if no symbols were mentioned. Returns: an array of SymbolEntities. Since: Twitter4J 3.0.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ExceptionDiagnosis &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ExceptionDiagnosis&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class ExceptionDiagnosis java.lang.Object twitter4j.ExceptionDiagnosis All Implemented Interfaces: java.io.Serializable final class ExceptionDiagnosis extends java.lang.Object implements java.io.Serializable Since: Twitter4J 2.1.3 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String hexString\u00a0 private int lineNumberHash\u00a0 private static long serialVersionUID\u00a0 private int stackLineHash\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description ExceptionDiagnosis(java.lang.Throwable\u00a0th)\u00a0 ExceptionDiagnosis(java.lang.Throwable\u00a0th, java.lang.String[]\u00a0inclusionFilter)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) java.lang.String asHexString()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 (package private) int getLineNumberHash()\u00a0 (package private) java.lang.String getLineNumberHashAsHex()\u00a0 (package private) int getStackLineHash()\u00a0 (package private) java.lang.String getStackLineHashAsHex()\u00a0 int hashCode()\u00a0 private java.lang.String toHexString(int\u00a0value)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values stackLineHash private\u00a0int stackLineHash lineNumberHash private\u00a0int lineNumberHash hexString private\u00a0java.lang.String hexString Constructor Detail ExceptionDiagnosis ExceptionDiagnosis(java.lang.Throwable\u00a0th) ExceptionDiagnosis ExceptionDiagnosis(java.lang.Throwable\u00a0th, java.lang.String[]\u00a0inclusionFilter) Method Detail getStackLineHash int\u00a0getStackLineHash() getStackLineHashAsHex java.lang.String\u00a0getStackLineHashAsHex() getLineNumberHash int\u00a0getLineNumberHash() getLineNumberHashAsHex java.lang.String\u00a0getLineNumberHashAsHex() asHexString java.lang.String\u00a0asHexString() toHexString private\u00a0java.lang.String\u00a0toHexString(int\u00a0value) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ExtendedMediaEntity.Variant &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ExtendedMediaEntity.Variant&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface ExtendedMediaEntity.Variant All Superinterfaces: java.io.Serializable Enclosing interface: ExtendedMediaEntity public static interface ExtendedMediaEntity.Variant extends java.io.Serializable Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getBitrate()\u00a0 java.lang.String getContentType()\u00a0 java.lang.String getUrl()\u00a0 Method Detail getBitrate int\u00a0getBitrate() getContentType java.lang.String\u00a0getContentType() getUrl java.lang.String\u00a0getUrl() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ExtendedMediaEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ExtendedMediaEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface ExtendedMediaEntity All Superinterfaces: MediaEntity, java.io.Serializable, TweetEntity, URLEntity public interface ExtendedMediaEntity extends MediaEntity Since: Twitter4J 4.x.x Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Interface and Description static interface\u00a0 ExtendedMediaEntity.Variant\u00a0 Nested classes/interfaces inherited from interface\u00a0twitter4j.MediaEntity MediaEntity.Size Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getVideoAspectRatioHeight()\u00a0 int getVideoAspectRatioWidth()\u00a0 long getVideoDurationMillis()\u00a0 ExtendedMediaEntity.Variant[] getVideoVariants()\u00a0 Methods inherited from interface\u00a0twitter4j.MediaEntity getId, getMediaURL, getMediaURLHttps, getSizes, getType Methods inherited from interface\u00a0twitter4j.URLEntity getDisplayURL, getEnd, getExpandedURL, getStart, getText, getURL Method Detail getVideoAspectRatioWidth int\u00a0getVideoAspectRatioWidth() getVideoAspectRatioHeight int\u00a0getVideoAspectRatioHeight() getVideoDurationMillis long\u00a0getVideoDurationMillis() getVideoVariants ExtendedMediaEntity.Variant[]\u00a0getVideoVariants() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method FavoritesResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;FavoritesResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface FavoritesResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface FavoritesResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description Status createFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. Status destroyFavorite(long\u00a0id) Un-favorites the status specified in the ID parameter as the authenticating user. ResponseList&lt;Status&gt; getFavorites() Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(long\u00a0userId) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(java.lang.String\u00a0screenName) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. Method Detail getFavorites ResponseList&lt;Status&gt;\u00a0getFavorites() throws TwitterException Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites.json Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: GET favorites Twitter Developers getFavorites ResponseList&lt;Status&gt;\u00a0getFavorites(long\u00a0userId) throws TwitterException Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. Parameters: userId - the id of the user for whom to request a list of favorite statuses Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET favorites Twitter Developers getFavorites ResponseList&lt;Status&gt;\u00a0getFavorites(java.lang.String\u00a0screenName) throws TwitterException Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: GET favorites Twitter Developers getFavorites ResponseList&lt;Status&gt;\u00a0getFavorites(Paging\u00a0paging) throws TwitterException Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites.json Parameters: paging - controls pagination. Supports sinceId and page parameters. Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.5 See Also: GET favorites Twitter Developers getFavorites ResponseList&lt;Status&gt;\u00a0getFavorites(long\u00a0userId, Paging\u00a0paging) throws TwitterException Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Parameters: userId - the id of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET favorites Twitter Developers getFavorites ResponseList&lt;Status&gt;\u00a0getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) throws TwitterException Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.5 See Also: GET favorites Twitter Developers createFavorite Status\u00a0createFavorite(long\u00a0id) throws TwitterException Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This method calls https://api.twitter.com/1.1/favorites/create/[id].json Parameters: id - the ID of the status to favorite Returns: created favorite status Throws: TwitterException - when Twitter service or network is unavailable See Also: POST favorites/create/:id Twitter Developers destroyFavorite Status\u00a0destroyFavorite(long\u00a0id) throws TwitterException Un-favorites the status specified in the ID parameter as the authenticating user. Returns the un-favorited status in the requested format when successful. This method calls https://api.twitter.com/1.1/favorites/destroy/[id].json Parameters: id - the ID of the status to un-favorite Returns: destroyed statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: POST favorites/destroy/:id Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method FavoritesResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;FavoritesResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface FavoritesResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface FavoritesResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void createFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. void destroyFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. void getFavorites() Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(long\u00a0id) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(java.lang.String\u00a0screenName) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. void getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. Method Detail getFavorites void\u00a0getFavorites() Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites Since: Twitter4J 2.0.1 See Also: GET favorites Twitter Developers getFavorites void\u00a0getFavorites(long\u00a0id) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites Parameters: id - the id of the user for whom to request a list of favorite statuses Since: Twitter4J 3.0.0 See Also: GET favorites Twitter Developers getFavorites void\u00a0getFavorites(java.lang.String\u00a0screenName) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses Since: Twitter4J 2.0.1 See Also: GET favorites Twitter Developers getFavorites void\u00a0getFavorites(Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites.json Parameters: paging - controls pagination. Supports sinceId and page parameters. Since: Twitter4J 2.2.5 See Also: GET favorites Twitter Developers getFavorites void\u00a0getFavorites(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Parameters: userId - the id of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. Since: Twitter4J 2.2.5 See Also: GET favorites Twitter Developers getFavorites void\u00a0getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. Since: Twitter4J 2.2.5 See Also: GET favorites Twitter Developers createFavorite void\u00a0createFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This method calls https://api.twitter.com/1.1/favorites/create%C2%A0 Parameters: id - the ID or screen name of the user for whom to request a list of favorite statuses. Since: 1.1.2 See Also: POST favorites/create/:id Twitter Developers destroyFavorite void\u00a0destroyFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This method calls https://api.twitter.com/1.1/favorites/destroy Parameters: id - the ID or screen name of the user for whom to request a list of un-favorite statuses. Since: 1.1.2 See Also: POST favorites/destroy/:id Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method FilterQuery &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;FilterQuery&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class FilterQuery java.lang.Object twitter4j.FilterQuery All Implemented Interfaces: java.io.Serializable public final class FilterQuery extends java.lang.Object implements java.io.Serializable Since: Twitter4J 2.1.2 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private int count\u00a0 private java.lang.String filterLevel\u00a0 private long[] follow\u00a0 private java.lang.String[] language\u00a0 private double[][] locations\u00a0 private static long serialVersionUID\u00a0 private java.lang.String[] track\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description FilterQuery() Creates a new FilterQuery FilterQuery(int\u00a0count, long...\u00a0follow) Creates a new FilterQuery FilterQuery(int\u00a0count, long[]\u00a0follow, java.lang.String[]\u00a0track) Creates a new FilterQuery FilterQuery(int\u00a0count, long[]\u00a0follow, java.lang.String[]\u00a0track, double[][]\u00a0locations) Creates a new FilterQuery FilterQuery(int\u00a0count, long[]\u00a0follow, java.lang.String[]\u00a0track, double[][]\u00a0locations, java.lang.String[]\u00a0language) Creates a new FilterQuery FilterQuery(long...\u00a0follow) Creates a new FilterQuery FilterQuery(java.lang.String...\u00a0track) Creates a new FilterQuery Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) HttpParameter[] asHttpParameterArray(HttpParameter\u00a0stallWarningsParam)\u00a0 FilterQuery count(int\u00a0count) Sets count boolean equals(java.lang.Object\u00a0o)\u00a0 FilterQuery filterLevel(java.lang.String\u00a0filterLevel) The filter level limits what tweets appear in the stream to those with a minimum filter_level attribute value. FilterQuery follow(long...\u00a0follow) Sets follow int hashCode()\u00a0 FilterQuery language(java.lang.String...\u00a0language) Sets language FilterQuery locations(double[]...\u00a0locations) Sets locations private java.lang.String toLocationsString(double[][]\u00a0keywords)\u00a0 java.lang.String toString()\u00a0 FilterQuery track(java.lang.String...\u00a0track) Sets track Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values count private\u00a0int count follow private\u00a0long[] follow track private\u00a0java.lang.String[] track locations private\u00a0double[][] locations language private\u00a0java.lang.String[] language filterLevel private\u00a0java.lang.String filterLevel Constructor Detail FilterQuery public\u00a0FilterQuery() Creates a new FilterQuery FilterQuery public\u00a0FilterQuery(long...\u00a0follow) Creates a new FilterQuery Parameters: follow - Specifies the users, by ID, to receive public tweets from. FilterQuery public\u00a0FilterQuery(java.lang.String...\u00a0track) Creates a new FilterQuery Parameters: track - Specifies keywords to track. Since: Twitter4J 4.0.4 FilterQuery public\u00a0FilterQuery(int\u00a0count, long...\u00a0follow) Creates a new FilterQuery Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. follow - Specifies the users, by ID, to receive public tweets from. FilterQuery public\u00a0FilterQuery(int\u00a0count, long[]\u00a0follow, java.lang.String[]\u00a0track) Creates a new FilterQuery Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. follow - Specifies the users, by ID, to receive public tweets from. track - Specifies keywords to track. FilterQuery public\u00a0FilterQuery(int\u00a0count, long[]\u00a0follow, java.lang.String[]\u00a0track, double[][]\u00a0locations) Creates a new FilterQuery Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. follow - Specifies the users, by ID, to receive public tweets from. track - Specifies keywords to track. locations - Specifies the locations to track. 2D array FilterQuery public\u00a0FilterQuery(int\u00a0count, long[]\u00a0follow, java.lang.String[]\u00a0track, double[][]\u00a0locations, java.lang.String[]\u00a0language) Creates a new FilterQuery Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. follow - Specifies the users, by ID, to receive public tweets from. track - Specifies keywords to track. locations - Specifies the locations to track. 2D array language - Specifies the tweets language of the stream Method Detail count public\u00a0FilterQuery\u00a0count(int\u00a0count) Sets count Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. Returns: this instance follow public\u00a0FilterQuery\u00a0follow(long...\u00a0follow) Sets follow Parameters: follow - Specifies the users, by ID, to receive public tweets from. Returns: this instance track public\u00a0FilterQuery\u00a0track(java.lang.String...\u00a0track) Sets track Parameters: track - Specifies keywords to track. Returns: this instance locations public\u00a0FilterQuery\u00a0locations(double[]...\u00a0locations) Sets locations Parameters: locations - Specifies the locations to track. 2D array Returns: this instance language public\u00a0FilterQuery\u00a0language(java.lang.String...\u00a0language) Sets language Parameters: language - Specifies languages to track. Returns: this instance filterLevel public\u00a0FilterQuery\u00a0filterLevel(java.lang.String\u00a0filterLevel) The filter level limits what tweets appear in the stream to those with a minimum filter_level attribute value. Parameters: filterLevel - one of either none, low, or medium. Returns: this instance asHttpParameterArray HttpParameter[]\u00a0asHttpParameterArray(HttpParameter\u00a0stallWarningsParam) toLocationsString private\u00a0java.lang.String\u00a0toLocationsString(double[][]\u00a0keywords) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method FriendsFollowersResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;FriendsFollowersResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6,&quot;i35&quot;:6,&quot;i36&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface FriendsFollowersResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface FriendsFollowersResources Author: Joern Huxhorn - jhuxhorn at googlemail.com, Mocel - docel77 at gmail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description User createFriendship(long\u00a0userId) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createFriendship(long\u00a0userId, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User destroyFriendship(long\u00a0userId) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. User destroyFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. IDs getFollowersIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is followed by. PagableResponseList&lt;User&gt; getFollowersList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. IDs getFriendsIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the authenticating user is following. IDs getFriendsIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. IDs getFriendsIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is following. IDs getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. IDs getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is following. PagableResponseList&lt;User&gt; getFriendsList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. IDs getIncomingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. IDs getNoRetweetsFriendships() Returns a collection of user IDs that the currently authenticated user does not want to receive retweets from. IDs getOutgoingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. ResponseList&lt;Friendship&gt; lookupFriendships(long...\u00a0ids) Returns the relationship of the authenticating user to the specified users. ResponseList&lt;Friendship&gt; lookupFriendships(java.lang.String...\u00a0screenNames) Returns the relationship of the authenticating user to the specified users. Relationship showFriendship(long\u00a0sourceId, long\u00a0targetId) Returns detailed information about the relationship between two users. Relationship showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) Returns detailed information about the relationship between two users. Relationship updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. Relationship updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. Method Detail getNoRetweetsFriendships IDs\u00a0getNoRetweetsFriendships() throws TwitterException Returns a collection of user IDs that the currently authenticated user does not want to receive retweets from. This method calls https://api.twitter.com/1.1/friendships/no_retweets/ids.json Returns: a collection of numeric IDs that the currently authenticated user does not want to receive retweets from. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET friendships/no_retweets/ids Twitter Developers getFriendsIDs IDs\u00a0getFriendsIDs(long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user the authenticating user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Parameters: cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: an array of numeric IDs for every user the authenticating user is following Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET friends/ids Twitter Developers getFriendsIDs IDs\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Parameters: userId - Specifies the ID of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET friends/ids Twitter Developers getFriendsIDs IDs\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Returns an array of numeric IDs for every user the specified user is following. This method calls http://api.twitter.com/1.1/friends/ids.json Parameters: userId - Specifies the ID of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET friends/ids Twitter Developers getFriendsIDs IDs\u00a0getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Parameters: screenName - Specifies the screen name of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET friends/ids Twitter Developers getFriendsIDs IDs\u00a0getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Returns an array of numeric IDs for every user the specified user is following. This method calls http://api.twitter.com/1.1/friends/ids.json Parameters: screenName - Specifies the screen name of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET friends/ids Twitter Developers getFollowersIDs IDs\u00a0getFollowersIDs(long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Parameters: cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET followers/ids Twitter Developers getFollowersIDs IDs\u00a0getFollowersIDs(long\u00a0userId, long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Parameters: userId - Specifies the ID of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET followers/ids Twitter Developers getFollowersIDs IDs\u00a0getFollowersIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Returns an array of numeric IDs for every user the specified user is followed by. This method calls http://api.twitter.com/1.1/followers/ids.json Parameters: userId - Specifies the ID of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET followers/ids Twitter Developers getFollowersIDs IDs\u00a0getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Parameters: screenName - Specifies the screen name of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET followers/ids Twitter Developers getFollowersIDs IDs\u00a0getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Returns an array of numeric IDs for every user the specified user is followed by. This method calls http://api.twitter.com/1.1/followers/ids.json Parameters: screenName - Specifies the screen name of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET followers/ids Twitter Developers lookupFriendships ResponseList&lt;Friendship&gt;\u00a0lookupFriendships(long...\u00a0ids) throws TwitterException Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Parameters: ids - array of the ids to lookup Returns: list of Relationships Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group lookupFriendships ResponseList&lt;Friendship&gt;\u00a0lookupFriendships(java.lang.String...\u00a0screenNames) throws TwitterException Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Parameters: screenNames - array of the screen names to lookup Returns: list of Relationships Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group getIncomingFriendships IDs\u00a0getIncomingFriendships(long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. This method calls https://api.twitter.com/1.1/friendships/incoming.json Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. Returns: an array of numeric IDs for every user who has a pending request to follow the authenticating user. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.2 See Also: GET friendships/incoming Twitter Developers getOutgoingFriendships IDs\u00a0getOutgoingFriendships(long\u00a0cursor) throws TwitterException Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. This method calls https://api.twitter.com/1.1/friendships/outgoing.json Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. Returns: an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.2 See Also: GET friendships/outgoing Twitter Developers createFriendship User\u00a0createFriendship(long\u00a0userId) throws TwitterException Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Parameters: userId - the ID of the user to be befriended Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST friendships/create Twitter Developers createFriendship User\u00a0createFriendship(java.lang.String\u00a0screenName) throws TwitterException Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Parameters: screenName - the screen name of the user to be befriended Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST friendships/create Twitter Developers createFriendship User\u00a0createFriendship(long\u00a0userId, boolean\u00a0follow) throws TwitterException Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Parameters: userId - the ID of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST friendships/create Twitter Developers createFriendship User\u00a0createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) throws TwitterException Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Parameters: screenName - the screen name of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.2 See Also: POST friendships/create Twitter Developers destroyFriendship User\u00a0destroyFriendship(long\u00a0userId) throws TwitterException Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy/[id].json Parameters: userId - the ID of the user for whom to request a list of friends Returns: User Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST friendships/destroy Twitter Developers destroyFriendship User\u00a0destroyFriendship(java.lang.String\u00a0screenName) throws TwitterException Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy/[id].json Parameters: screenName - the screen name of the user for whom to request a list of friends Returns: User Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST friendships/destroy Twitter Developers updateFriendship Relationship\u00a0updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) throws TwitterException Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Parameters: userId - user id to update enableDeviceNotification - set true to enable device notification retweets - set true to enable retweets Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group updateFriendship Relationship\u00a0updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) throws TwitterException Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Parameters: screenName - screen name to update enableDeviceNotification - set true to enable device notification retweets - set true to enable retweets Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group showFriendship Relationship\u00a0showFriendship(long\u00a0sourceId, long\u00a0targetId) throws TwitterException Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Parameters: sourceId - the ID of the source user targetId - the ID of the target user Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET friendships/show Twitter Developers showFriendship Relationship\u00a0showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) throws TwitterException Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Parameters: sourceScreenName - the screen name of the source user targetScreenName - the screen name of the target user Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET friendships/show Twitter Developers getFriendsList PagableResponseList&lt;User&gt;\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor) throws TwitterException Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET friends/list Twitter Developers getFriendsList PagableResponseList&lt;User&gt;\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFriendsList PagableResponseList&lt;User&gt;\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET friends/list Twitter Developers getFriendsList PagableResponseList&lt;User&gt;\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET friends/list Twitter Developers getFriendsList PagableResponseList&lt;User&gt;\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET friends/list Twitter Developers getFriendsList PagableResponseList&lt;User&gt;\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET friends/list Twitter Developers getFollowersList PagableResponseList&lt;User&gt;\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor) throws TwitterException Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET followers/list Twitter Developers getFollowersList PagableResponseList&lt;User&gt;\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET followers/list Twitter Developers getFollowersList PagableResponseList&lt;User&gt;\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: GET followers/list Twitter Developers getFollowersList PagableResponseList&lt;User&gt;\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: GET followers/list Twitter Developers getFollowersList PagableResponseList&lt;User&gt;\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET followers/list Twitter Developers getFollowersList PagableResponseList&lt;User&gt;\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET followers/list Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method FriendsFollowersResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;FriendsFollowersResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface FriendsFollowersResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface FriendsFollowersResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void createFriendship(long\u00a0userId) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createFriendship(long\u00a0userId, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. void destroyFriendship(long\u00a0userId) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. void destroyFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. void getFollowersIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. void getFollowersIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. void getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. void getFollowersList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getFriendsIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the authenticating user is following. void getFriendsIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. void getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. void getFriendsList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. void getIncomingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. void getOutgoingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. void lookupFriendships(long...\u00a0ids) Returns the relationship of the authenticating user to the specified users. void lookupFriendships(java.lang.String...\u00a0screenNames) Returns the relationship of the authenticating user to the specified users. void showFriendship(long\u00a0sourceId, long\u00a0targetId) Returns detailed information about the relationship between two users. void showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) Returns detailed information about the relationship between two users. void updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. void updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. Method Detail getFriendsIDs void\u00a0getFriendsIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the authenticating user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Parameters: cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. Since: Twitter4J 2.0.10 See Also: GET friends/ids Twitter Developers getFriendsIDs void\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Parameters: userId - Specifies the ID of the user for whom to return the friends list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. Since: Twitter4J 2.0.10 See Also: GET friends/ids Twitter Developers getFriendsIDs void\u00a0getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Parameters: screenName - Specifies the screen name of the user for whom to return the friends list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. Since: Twitter4J 2.0.10 See Also: GET friends/ids Twitter Developers getFollowersIDs void\u00a0getFollowersIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Parameters: cursor - Breaks the results into pages. A single page contains 100 users. This is recommended for users who are followed by many other users. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.0.10 See Also: GET followers/ids Twitter Developers getFollowersIDs void\u00a0getFollowersIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Parameters: userId - Specifies the ID of the user for whom to return the followers list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. Since: Twitter4J 2.0.10 See Also: GET followers/ids Twitter Developers getFollowersIDs void\u00a0getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Parameters: screenName - Specifies the screen name of the user for whom to return the followers list. cursor - Specifies the page number of the results beginning at 1. A single page contains 5000 ids. This is recommended for users with large ID lists. If not provided all ids are returned. Since: Twitter4J 2.0.10 See Also: GET followers/ids Twitter Developers lookupFriendships void\u00a0lookupFriendships(long...\u00a0ids) Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Parameters: ids - array of the ids to lookup Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group lookupFriendships void\u00a0lookupFriendships(java.lang.String...\u00a0screenNames) Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Parameters: screenNames - array of the screen names to lookup Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group getIncomingFriendships void\u00a0getIncomingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. This method calls https://api.twitter.com/1.1/friendships/incoming.json Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. Since: Twitter4J 2.1.2 See Also: GET friendships/incoming Twitter Developers getOutgoingFriendships void\u00a0getOutgoingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. This method calls https://api.twitter.com/1.1/friendships/outgoing.json Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. Since: Twitter4J 2.1.2 See Also: GET friendships/outgoing Twitter Developers createFriendship void\u00a0createFriendship(long\u00a0userId) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Parameters: userId - the ID of the user to be befriended Since: Twitter4J 2.1.0 See Also: POST friendships/create Twitter Developers createFriendship void\u00a0createFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Parameters: screenName - the screen name of the user to be befriended Since: Twitter4J 2.0.1 See Also: POST friendships/create Twitter Developers createFriendship void\u00a0createFriendship(long\u00a0userId, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Parameters: userId - the ID of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. Since: Twitter4J 2.1.0 See Also: POST friendships/create Twitter Developers createFriendship void\u00a0createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create Parameters: screenName - the screen name of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. Since: Twitter4J 2.0.1 See Also: POST friendships/create Twitter Developers destroyFriendship void\u00a0destroyFriendship(long\u00a0userId) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy Parameters: userId - the screen name of the user to be befriended Since: Twitter4J 2.1.0 See Also: POST friendships/destroy Twitter Developers destroyFriendship void\u00a0destroyFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy Parameters: screenName - the screen name of the user to be befriended Since: Twitter4J 2.0.1 See Also: POST friendships/destroy Twitter Developers updateFriendship void\u00a0updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Parameters: userId - user id to update enableDeviceNotification - set true to enable device notification retweets - set true to enable retweets Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group updateFriendship void\u00a0updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Parameters: screenName - screen name to update enableDeviceNotification - set true to enable device notification retweets - set true to enable retweets Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group showFriendship void\u00a0showFriendship(long\u00a0sourceId, long\u00a0targetId) Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Parameters: sourceId - the ID of the source user targetId - the ID of the target user Since: Twitter4J 2.1.0 See Also: GET friendships/show Twitter Developers showFriendship void\u00a0showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Parameters: sourceScreenName - the screen name of the source user targetScreenName - the screen name of the target user Since: Twitter4J 2.1.0 See Also: GET friendships/show Twitter Developers getFriendsList void\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Since: Twitter4J 3.0.2 See Also: GET friends/list Twitter Developers getFriendsList void\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Since: Twitter4J 3.0.2 See Also: GET friends/list Twitter Developers getFollowersList void\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Since: Twitter4J 3.0.2 See Also: GET followers/list Twitter Developers getFollowersList void\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Since: Twitter4J 3.0.2 See Also: GET followers/list Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Friendship &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Friendship&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Friendship All Superinterfaces: java.io.Serializable public interface Friendship extends java.io.Serializable Since: Twitter4J 2.1.9 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long getId()\u00a0 java.lang.String getName()\u00a0 java.lang.String getScreenName()\u00a0 boolean isFollowedBy()\u00a0 boolean isFollowing()\u00a0 Method Detail getId long\u00a0getId() getName java.lang.String\u00a0getName() getScreenName java.lang.String\u00a0getScreenName() isFollowing boolean\u00a0isFollowing() isFollowedBy boolean\u00a0isFollowedBy() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method GeoLocation &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;GeoLocation&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class GeoLocation java.lang.Object twitter4j.GeoLocation All Implemented Interfaces: java.io.Serializable public class GeoLocation extends java.lang.Object implements java.io.Serializable A data class representing geo location. Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private double latitude\u00a0 private double longitude\u00a0 private static long serialVersionUID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description GeoLocation()\u00a0 GeoLocation(double\u00a0latitude, double\u00a0longitude) Creates a GeoLocation instance Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 double getLatitude() returns the latitude of the geo location double getLongitude() returns the longitude of the geo location int hashCode()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values latitude private\u00a0double latitude longitude private\u00a0double longitude Constructor Detail GeoLocation public\u00a0GeoLocation(double\u00a0latitude, double\u00a0longitude) Creates a GeoLocation instance Parameters: latitude - the latitude longitude - the longitude GeoLocation GeoLocation() Method Detail getLatitude public\u00a0double\u00a0getLatitude() returns the latitude of the geo location Returns: the latitude getLongitude public\u00a0double\u00a0getLongitude() returns the longitude of the geo location Returns: the longitude equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method GeoQuery &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;GeoQuery&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class GeoQuery java.lang.Object twitter4j.GeoQuery All Implemented Interfaces: java.io.Serializable public final class GeoQuery extends java.lang.Object implements java.io.Serializable Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String accuracy\u00a0 private java.lang.String granularity\u00a0 private java.lang.String ip\u00a0 private GeoLocation location\u00a0 private int maxResults\u00a0 private java.lang.String query\u00a0 private static long serialVersionUID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description GeoQuery(GeoLocation\u00a0location) Creates a GeoQuery with the specified location GeoQuery(java.lang.String\u00a0ip) Creates a GeoQuery with the specified IP address Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description GeoQuery accuracy(java.lang.String\u00a0accuracy)\u00a0 private void appendParameter(java.lang.String\u00a0name, double\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void appendParameter(java.lang.String\u00a0name, int\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 (package private) HttpParameter[] asHttpParameterArray()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 java.lang.String getAccuracy()\u00a0 java.lang.String getGranularity()\u00a0 java.lang.String getIp()\u00a0 GeoLocation getLocation()\u00a0 int getMaxResults()\u00a0 java.lang.String getQuery() Gets the query to filter Place results from geo/search GeoQuery granularity(java.lang.String\u00a0granularity)\u00a0 int hashCode()\u00a0 GeoQuery maxResults(int\u00a0maxResults)\u00a0 void setAccuracy(java.lang.String\u00a0accuracy) Sets a hint on the &quot;region&quot; in which to search. void setGranularity(java.lang.String\u00a0granularity) Sets the minimal granularity of data to return. void setMaxResults(int\u00a0maxResults) Sets a hint as to the number of results to return. void setQuery(java.lang.String\u00a0query)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values location private\u00a0GeoLocation location query private\u00a0java.lang.String query ip private\u00a0java.lang.String ip accuracy private\u00a0java.lang.String accuracy granularity private\u00a0java.lang.String granularity maxResults private\u00a0int maxResults Constructor Detail GeoQuery public\u00a0GeoQuery(GeoLocation\u00a0location) Creates a GeoQuery with the specified location Parameters: location - geo location GeoQuery public\u00a0GeoQuery(java.lang.String\u00a0ip) Creates a GeoQuery with the specified IP address Parameters: ip - IP address Method Detail getLocation public\u00a0GeoLocation\u00a0getLocation() getQuery public\u00a0java.lang.String\u00a0getQuery() Gets the query to filter Place results from geo/search Returns: the query setQuery public\u00a0void\u00a0setQuery(java.lang.String\u00a0query) getIp public\u00a0java.lang.String\u00a0getIp() getAccuracy public\u00a0java.lang.String\u00a0getAccuracy() setAccuracy public\u00a0void\u00a0setAccuracy(java.lang.String\u00a0accuracy) Sets a hint on the &quot;region&quot; in which to search. If a number, then this is a radius in meters, but it can also take a string that is suffixed with ft to specify feet. If this is not passed in, then it is assumed to be 0m. If coming from a device, in practice, this value is whatever accuracy the device has measuring its location (whether it be coming from a GPS, WiFi triangulation, etc.). Parameters: accuracy - a hint on the &quot;region&quot; in which to search. accuracy public\u00a0GeoQuery\u00a0accuracy(java.lang.String\u00a0accuracy) getGranularity public\u00a0java.lang.String\u00a0getGranularity() setGranularity public\u00a0void\u00a0setGranularity(java.lang.String\u00a0granularity) Sets the minimal granularity of data to return. If this is not passed in, then neighborhood is assumed. city can also be passed. Parameters: granularity - the minimal granularity of data to return granularity public\u00a0GeoQuery\u00a0granularity(java.lang.String\u00a0granularity) getMaxResults public\u00a0int\u00a0getMaxResults() setMaxResults public\u00a0void\u00a0setMaxResults(int\u00a0maxResults) Sets a hint as to the number of results to return. This does not guarantee that the number of results returned will equal max_results, but instead informs how many &quot;nearby&quot; results to return. Ideally, only pass in the number of places you intend to display to the user here. Parameters: maxResults - A hint as to the number of results to return. maxResults public\u00a0GeoQuery\u00a0maxResults(int\u00a0maxResults) asHttpParameterArray HttpParameter[]\u00a0asHttpParameterArray() appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, int\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, double\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method HashtagEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;HashtagEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface HashtagEntity All Superinterfaces: java.io.Serializable, TweetEntity public interface HashtagEntity extends TweetEntity, java.io.Serializable A data interface representing one single Hashtag entity. Since: Twitter4J 2.1.9 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getEnd() Returns the index of the end character of the hashtag. int getStart() Returns the index of the start character of the hashtag. java.lang.String getText() Returns the text of the hashtag without #. Method Detail getText java.lang.String\u00a0getText() Returns the text of the hashtag without #. Specified by: getText\u00a0in interface\u00a0TweetEntity Returns: the text of the hashtag getStart int\u00a0getStart() Returns the index of the start character of the hashtag. Specified by: getStart\u00a0in interface\u00a0TweetEntity Returns: the index of the start character of the hashtag getEnd int\u00a0getEnd() Returns the index of the end character of the hashtag. Specified by: getEnd\u00a0in interface\u00a0TweetEntity Returns: the index of the end character of the hashtag Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method HelpResources.Language &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;HelpResources.Language&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface HelpResources.Language Enclosing interface: HelpResources public static interface HelpResources.Language Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getCode()\u00a0 java.lang.String getName()\u00a0 java.lang.String getStatus()\u00a0 Method Detail getName java.lang.String\u00a0getName() getCode java.lang.String\u00a0getCode() getStatus java.lang.String\u00a0getStatus() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method HelpResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;HelpResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface HelpResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface HelpResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Interface and Description static interface\u00a0 HelpResources.Language\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description TwitterAPIConfiguration getAPIConfiguration() Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. ResponseList&lt;HelpResources.Language&gt; getLanguages() Returns the list of languages supported by Twitter along with their ISO 639-1 code. java.lang.String getPrivacyPolicy() Returns Twitter's Privacy Policy. java.util.Map&lt;java.lang.String,RateLimitStatus&gt; getRateLimitStatus() Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. java.util.Map&lt;java.lang.String,RateLimitStatus&gt; getRateLimitStatus(java.lang.String...\u00a0resources) Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. java.lang.String getTermsOfService() Returns Twitter's' Terms of Service. Method Detail getAPIConfiguration TwitterAPIConfiguration\u00a0getAPIConfiguration() throws TwitterException Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. Returns: configuration Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: GET help/configuration Twitter Developers getLanguages ResponseList&lt;HelpResources.Language&gt;\u00a0getLanguages() throws TwitterException Returns the list of languages supported by Twitter along with their ISO 639-1 code. The ISO 639-1 code is the two letter value to use if you include lang with any of your requests. Returns: list of languages supported by Twitter Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: GET help/languages Twitter Developers getPrivacyPolicy java.lang.String\u00a0getPrivacyPolicy() throws TwitterException Returns Twitter's Privacy Policy. This method calls https://api.twitter.com/1.1/help/privacy.json Returns: privacy policy Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.7 See Also: GET help/privacy Twitter Developers getTermsOfService java.lang.String\u00a0getTermsOfService() throws TwitterException Returns Twitter's' Terms of Service. This method calls https://api.twitter.com/1.1/help/tos.json Returns: Terms of Service Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.7 See Also: GET help/tos Twitter Developers getRateLimitStatus java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0getRateLimitStatus() throws TwitterException Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Returns: the rate limit statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET application/rate_limit_status getRateLimitStatus java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0getRateLimitStatus(java.lang.String...\u00a0resources) throws TwitterException Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. As of Nov 4th 2012, supported resource names are as follows: &quot;trends&quot;,&quot;application&quot;,&quot;users&quot;,&quot;saved_searches&quot;,&quot;geo&quot;,&quot;direct_messages&quot;,&quot;blocks&quot;,&quot;favorites&quot;,&quot;statuses&quot;,&quot;followers&quot;,&quot;help&quot;,&quot;friends&quot;,&quot;search&quot;,&quot;friendships&quot;,&quot;account&quot;,&quot;lists&quot; This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Parameters: resources - resources Returns: the rate limit statuses Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET application/rate_limit_status Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method HelpResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;HelpResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface HelpResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface HelpResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getAPIConfiguration() Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. void getLanguages() Returns the list of languages supported by Twitter along with their ISO 639-1 code. void getPrivacyPolicy() Returns Twitter's Privacy Policy. void getRateLimitStatus() Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. void getRateLimitStatus(java.lang.String...\u00a0resources) Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. void getTermsOfService() Returns Twitter's' Terms of Service. Method Detail getAPIConfiguration void\u00a0getAPIConfiguration() Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. Since: Twitter4J 2.2.3 See Also: GET help/configuration Twitter Developers getLanguages void\u00a0getLanguages() Returns the list of languages supported by Twitter along with their ISO 639-1 code. The ISO 639-1 code is the two letter value to use if you include lang with any of your requests. Since: Twitter4J 2.2.3 See Also: GET help/languages Twitter Developers getPrivacyPolicy void\u00a0getPrivacyPolicy() Returns Twitter's Privacy Policy. This method calls https://api.twitter.com/1.1/help/privacy.json Since: Twitter4J 2.1.7 See Also: GET help/privacy Twitter Developers getTermsOfService void\u00a0getTermsOfService() Returns Twitter's' Terms of Service. This method calls https://api.twitter.com/1.1/help/tos.json Since: Twitter4J 2.1.7 See Also: GET help/tos Twitter Developers getRateLimitStatus void\u00a0getRateLimitStatus() Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Since: Twitter4J 3.0.0 See Also: GET application/rate_limit_status getRateLimitStatus void\u00a0getRateLimitStatus(java.lang.String...\u00a0resources) Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. As of Nov 4th 2012, supported resource names are as follows: &quot;trends&quot;,&quot;application&quot;,&quot;users&quot;,&quot;saved_searches&quot;,&quot;geo&quot;,&quot;direct_messages&quot;,&quot;blocks&quot;,&quot;favorites&quot;,&quot;statuses&quot;,&quot;followers&quot;,&quot;help&quot;,&quot;friends&quot;,&quot;search&quot;,&quot;friendships&quot;,&quot;account&quot;,&quot;lists&quot; This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Parameters: resources - resources Since: Twitter4J 3.0.0 See Also: GET application/rate_limit_status Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method IDs &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;IDs&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface IDs All Superinterfaces: CursorSupport, java.io.Serializable, TwitterResponse public interface IDs extends TwitterResponse, CursorSupport, java.io.Serializable A data interface representing array of numeric IDs. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Fields inherited from interface\u00a0twitter4j.CursorSupport START Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long[] getIDs()\u00a0 long getNextCursor()\u00a0 long getPreviousCursor()\u00a0 boolean hasNext()\u00a0 boolean hasPrevious()\u00a0 Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getIDs long[]\u00a0getIDs() hasPrevious boolean\u00a0hasPrevious() Specified by: hasPrevious\u00a0in interface\u00a0CursorSupport Returns: has previous page getPreviousCursor long\u00a0getPreviousCursor() Specified by: getPreviousCursor\u00a0in interface\u00a0CursorSupport Returns: previous cursor hasNext boolean\u00a0hasNext() Specified by: hasNext\u00a0in interface\u00a0CursorSupport Returns: has next getNextCursor long\u00a0getNextCursor() Specified by: getNextCursor\u00a0in interface\u00a0CursorSupport Returns: next cursor Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ImageUpload &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ImageUpload&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Interface ImageUpload All Known Implementing Classes: AbstractImageUploadImpl, ImgLyUpload, MobypictureUpload, TwippleUpload, TwitterUpload, YFrogUpload public interface ImageUpload Since: Twitter4J 2.1.8 Author: R\u00e9my Rakic - remy.rakic at gmail.com, Takao Nakaguchi - takao.nakaguchi at gmail.com, withgod - noname at withgod.jp Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String upload(java.io.File\u00a0image)\u00a0 java.lang.String upload(java.io.File\u00a0image, java.lang.String\u00a0message)\u00a0 java.lang.String upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody)\u00a0 java.lang.String upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody, java.lang.String\u00a0message)\u00a0 Method Detail upload java.lang.String\u00a0upload(java.io.File\u00a0image, java.lang.String\u00a0message) throws TwitterException Throws: TwitterException upload java.lang.String\u00a0upload(java.io.File\u00a0image) throws TwitterException Throws: TwitterException upload java.lang.String\u00a0upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody) throws TwitterException Throws: TwitterException upload java.lang.String\u00a0upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody, java.lang.String\u00a0message) throws TwitterException Throws: TwitterException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ImageUploadFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ImageUploadFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class ImageUploadFactory java.lang.Object twitter4j.media.ImageUploadFactory public class ImageUploadFactory extends java.lang.Object Since: Twitter4J 2.1.12 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String apiKey\u00a0 private Configuration conf\u00a0 private MediaProvider defaultMediaProvider\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description ImageUploadFactory() Creates an ImageUploadFactory with default configuration ImageUploadFactory(Configuration\u00a0conf) Creates an ImageUploadFactory with the specified configuration Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description ImageUpload getInstance() Returns an ImageUpload instance associated with the default media provider ImageUpload getInstance(Authorization\u00a0authorization) Returns an ImageUpload instance associated with the default media provider ImageUpload getInstance(MediaProvider\u00a0mediaProvider) Returns an ImageUploader instance associated with the specified media provider ImageUpload getInstance(MediaProvider\u00a0mediaProvider, Authorization\u00a0authorization) Returns an ImageUpload instance associated with the specified media provider Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail conf private final\u00a0Configuration conf defaultMediaProvider private final\u00a0MediaProvider defaultMediaProvider apiKey private final\u00a0java.lang.String apiKey Constructor Detail ImageUploadFactory public\u00a0ImageUploadFactory() Creates an ImageUploadFactory with default configuration ImageUploadFactory public\u00a0ImageUploadFactory(Configuration\u00a0conf) Creates an ImageUploadFactory with the specified configuration Parameters: conf - configuration to be associated Method Detail getInstance public\u00a0ImageUpload\u00a0getInstance() Returns an ImageUpload instance associated with the default media provider Returns: ImageUpload getInstance public\u00a0ImageUpload\u00a0getInstance(Authorization\u00a0authorization) Returns an ImageUpload instance associated with the default media provider Parameters: authorization - authorization Returns: ImageUpload Since: Twitter4J 2.1.11 getInstance public\u00a0ImageUpload\u00a0getInstance(MediaProvider\u00a0mediaProvider) Returns an ImageUploader instance associated with the specified media provider Parameters: mediaProvider - media provider Returns: ImageUploader getInstance public\u00a0ImageUpload\u00a0getInstance(MediaProvider\u00a0mediaProvider, Authorization\u00a0authorization) Returns an ImageUpload instance associated with the specified media provider Parameters: mediaProvider - media provider authorization - authorization Returns: ImageUpload Since: Twitter4J 2.1.11 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ImgLyUpload &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ImgLyUpload&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class ImgLyUpload java.lang.Object twitter4j.media.AbstractImageUploadImpl twitter4j.media.ImgLyUpload All Implemented Interfaces: ImageUpload class ImgLyUpload extends AbstractImageUploadImpl Since: Twitter4J 2.1.8 Author: Takao Nakaguchi - takao.nakaguchi at gmail.com, withgod - noname at withgod.jp Field Summary Fields inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl apiKey, headers, httpResponse, image, message, oauth, postParameter, TWITTER_VERIFY_CREDENTIALS_JSON_V1_1, uploadUrl Constructor Summary Constructors\u00a0 Constructor and Description ImgLyUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description protected java.lang.String postUpload()\u00a0 protected void preUpload()\u00a0 Methods inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl appendHttpParameters, equals, generateVerifyCredentialsAuthorizationHeader, generateVerifyCredentialsAuthorizationURL, hashCode, toString, upload, upload, upload, upload Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Constructor Detail ImgLyUpload public\u00a0ImgLyUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth) Method Detail postUpload protected\u00a0java.lang.String\u00a0postUpload() throws TwitterException Specified by: postUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException preUpload protected\u00a0void\u00a0preUpload() throws TwitterException Specified by: preUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method JSONObjectType.Type &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;JSONObjectType.Type&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j Enum JSONObjectType.Type java.lang.Object java.lang.Enum&lt;JSONObjectType.Type&gt; twitter4j.JSONObjectType.Type All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;JSONObjectType.Type&gt; Enclosing class: JSONObjectType public static enum JSONObjectType.Type extends java.lang.Enum&lt;JSONObjectType.Type&gt; Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description BLOCK\u00a0 DELETE\u00a0 DIRECT_MESSAGE\u00a0 DISCONNECTION\u00a0 FAVORITE\u00a0 FAVORITED_RETWEET\u00a0 FOLLOW\u00a0 FRIENDS\u00a0 LIMIT\u00a0 QUOTED_TWEET\u00a0 RETWEETED_RETWEET\u00a0 SCRUB_GEO\u00a0 SENDER\u00a0 STALL_WARNING\u00a0 STATUS\u00a0 UNBLOCK\u00a0 UNFAVORITE\u00a0 UNFOLLOW\u00a0 UNKNOWN\u00a0 USER_DELETE\u00a0 USER_LIST_CREATED\u00a0 USER_LIST_DESTROYED\u00a0 USER_LIST_MEMBER_ADDED\u00a0 USER_LIST_MEMBER_DELETED\u00a0 USER_LIST_SUBSCRIBED\u00a0 USER_LIST_UNSUBSCRIBED\u00a0 USER_LIST_UPDATED\u00a0 USER_SUSPEND\u00a0 USER_UPDATE\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static JSONObjectType.Type valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static JSONObjectType.Type[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail SENDER public static final\u00a0JSONObjectType.Type SENDER STATUS public static final\u00a0JSONObjectType.Type STATUS DIRECT_MESSAGE public static final\u00a0JSONObjectType.Type DIRECT_MESSAGE DELETE public static final\u00a0JSONObjectType.Type DELETE LIMIT public static final\u00a0JSONObjectType.Type LIMIT STALL_WARNING public static final\u00a0JSONObjectType.Type STALL_WARNING SCRUB_GEO public static final\u00a0JSONObjectType.Type SCRUB_GEO FRIENDS public static final\u00a0JSONObjectType.Type FRIENDS FAVORITE public static final\u00a0JSONObjectType.Type FAVORITE UNFAVORITE public static final\u00a0JSONObjectType.Type UNFAVORITE FOLLOW public static final\u00a0JSONObjectType.Type FOLLOW UNFOLLOW public static final\u00a0JSONObjectType.Type UNFOLLOW USER_LIST_MEMBER_ADDED public static final\u00a0JSONObjectType.Type USER_LIST_MEMBER_ADDED USER_LIST_MEMBER_DELETED public static final\u00a0JSONObjectType.Type USER_LIST_MEMBER_DELETED USER_LIST_SUBSCRIBED public static final\u00a0JSONObjectType.Type USER_LIST_SUBSCRIBED USER_LIST_UNSUBSCRIBED public static final\u00a0JSONObjectType.Type USER_LIST_UNSUBSCRIBED USER_LIST_CREATED public static final\u00a0JSONObjectType.Type USER_LIST_CREATED USER_LIST_UPDATED public static final\u00a0JSONObjectType.Type USER_LIST_UPDATED USER_LIST_DESTROYED public static final\u00a0JSONObjectType.Type USER_LIST_DESTROYED USER_UPDATE public static final\u00a0JSONObjectType.Type USER_UPDATE USER_DELETE public static final\u00a0JSONObjectType.Type USER_DELETE USER_SUSPEND public static final\u00a0JSONObjectType.Type USER_SUSPEND BLOCK public static final\u00a0JSONObjectType.Type BLOCK UNBLOCK public static final\u00a0JSONObjectType.Type UNBLOCK DISCONNECTION public static final\u00a0JSONObjectType.Type DISCONNECTION RETWEETED_RETWEET public static final\u00a0JSONObjectType.Type RETWEETED_RETWEET FAVORITED_RETWEET public static final\u00a0JSONObjectType.Type FAVORITED_RETWEET QUOTED_TWEET public static final\u00a0JSONObjectType.Type QUOTED_TWEET UNKNOWN public static final\u00a0JSONObjectType.Type UNKNOWN Method Detail values public static\u00a0JSONObjectType.Type[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (JSONObjectType.Type c : JSONObjectType.Type.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0JSONObjectType.Type\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method JSONObjectType &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;JSONObjectType&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class JSONObjectType java.lang.Object twitter4j.JSONObjectType public final class JSONObjectType extends java.lang.Object Since: Twitter4J 2.1.9 Author: Dan Checkoway - dcheckoway at gmail.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description static class\u00a0 JSONObjectType.Type\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private static Logger logger\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description JSONObjectType()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static JSONObjectType.Type determine(JSONObject\u00a0json) Determine the respective object type for a given JSONObject. Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail logger private static final\u00a0Logger logger Constructor Detail JSONObjectType public\u00a0JSONObjectType() Method Detail determine public static\u00a0JSONObjectType.Type\u00a0determine(JSONObject\u00a0json) Determine the respective object type for a given JSONObject. This method inspects the object to figure out what type of object it represents. This is useful when processing JSON events of mixed type from a stream, in which case you may need to know what type of object to construct, or how to handle the event properly. Parameters: json - the JSONObject whose type should be determined Returns: the determined JSONObjectType, or null if not recognized Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ListsResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ListsResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6,&quot;i35&quot;:6,&quot;i36&quot;:6,&quot;i37&quot;:6,&quot;i38&quot;:6,&quot;i39&quot;:6,&quot;i40&quot;:6,&quot;i41&quot;:6,&quot;i42&quot;:6,&quot;i43&quot;:6,&quot;i44&quot;:6,&quot;i45&quot;:6,&quot;i46&quot;:6,&quot;i47&quot;:6,&quot;i48&quot;:6,&quot;i49&quot;:6,&quot;i50&quot;:6,&quot;i51&quot;:6,&quot;i52&quot;:6,&quot;i53&quot;:6,&quot;i54&quot;:6,&quot;i55&quot;:6,&quot;i56&quot;:6,&quot;i57&quot;:6,&quot;i58&quot;:6,&quot;i59&quot;:6,&quot;i60&quot;:6,&quot;i61&quot;:6,&quot;i62&quot;:6,&quot;i63&quot;:6,&quot;i64&quot;:6,&quot;i65&quot;:6,&quot;i66&quot;:6,&quot;i67&quot;:6,&quot;i68&quot;:6,&quot;i69&quot;:6,&quot;i70&quot;:6,&quot;i71&quot;:6,&quot;i72&quot;:6,&quot;i73&quot;:6,&quot;i74&quot;:6,&quot;i75&quot;:6,&quot;i76&quot;:6,&quot;i77&quot;:6,&quot;i78&quot;:6,&quot;i79&quot;:6,&quot;i80&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface ListsResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface ListsResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description UserList createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) Creates a new list for the authenticated user. UserList createUserListMember(long\u00a0listId, long\u00a0userId) Adds a member to a list. UserList createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. UserList createUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. UserList createUserListMembers(long\u00a0listId, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListSubscription(long\u00a0listId) Make the authenticated user follow the specified list. UserList createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. UserList createUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. UserList destroyUserList(long\u00a0listId) Deletes the specified list. UserList destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Deletes the specified list. UserList destroyUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Deletes the specified list. UserList destroyUserListMember(long\u00a0listId, long\u00a0userId) Removes the specified member from the list. UserList destroyUserListMember(long\u00a0listId, java.lang.String\u00a0screenName) Removes the specified members from the list. UserList destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. UserList destroyUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. UserList destroyUserListMembers(long\u00a0listId, long[]\u00a0userIds) Removes the specified members from the list. UserList destroyUserListMembers(long\u00a0listId, java.lang.String[]\u00a0screenNames) Removes the specified members from the list. UserList destroyUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String[]\u00a0screenNames) Removes the specified members from the list. UserList destroyUserListSubscription(long\u00a0listId) Unsubscribes the authenticated user form the specified list. UserList destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. UserList destroyUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0listId, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;UserList&gt; getUserListMemberships(int\u00a0count, long\u00a0cursor) List the lists the authenticating user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0cursor) List the lists the authenticating user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. ResponseList&lt;UserList&gt; getUserLists(long\u00a0listOwnerUserId) List the lists of the specified user. ResponseList&lt;UserList&gt; getUserLists(long\u00a0listOwnerUserId, boolean\u00a0reverse) List the lists of the specified user. ResponseList&lt;UserList&gt; getUserLists(java.lang.String\u00a0listOwnerScreenName) List the lists of the specified user. ResponseList&lt;UserList&gt; getUserLists(java.lang.String\u00a0listOwnerScreenName, boolean\u00a0reverse) List the lists of the specified user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(long\u00a0listOwnerId, int\u00a0count, long\u00a0cursor) Returns the lists owned by the specified Twitter user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(long\u00a0listOwnerId, long\u00a0cursor) Returns the lists owned by the specified Twitter user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, int\u00a0count, long\u00a0cursor) Returns the lists owned by the specified Twitter user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) Returns the lists owned by the specified Twitter user. ResponseList&lt;Status&gt; getUserListStatuses(long\u00a0listId, Paging\u00a0paging) Show tweet timeline for members of the specified list. ResponseList&lt;Status&gt; getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. ResponseList&lt;Status&gt; getUserListStatuses(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0listId, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(long\u00a0listSubscriberId, int\u00a0count, long\u00a0cursor) List the lists the specified user follows. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(long\u00a0listSubscriberId, long\u00a0cursor) List the lists the specified user follows. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, int\u00a0count, long\u00a0cursor) List the lists the specified user follows. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, long\u00a0cursor) List the lists the specified user follows. UserList showUserList(long\u00a0listId) Show the specified list. UserList showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Show the specified list. UserList showUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Show the specified list. User showUserListMembership(long\u00a0listId, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json User showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json User showUserListMembership(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json User showUserListSubscription(long\u00a0listId, long\u00a0userId) Check if the specified user is a subscriber of the specified list. User showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. User showUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. UserList updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. UserList updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. UserList updateUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. Method Detail getUserLists ResponseList&lt;UserList&gt;\u00a0getUserLists(java.lang.String\u00a0listOwnerScreenName) throws TwitterException List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Parameters: listOwnerScreenName - The screen name of the list owner as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET lists/list Twitter Developers getUserLists ResponseList&lt;UserList&gt;\u00a0getUserLists(java.lang.String\u00a0listOwnerScreenName, boolean\u00a0reverse) throws TwitterException List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Parameters: listOwnerScreenName - The screen name of the list owner as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. reverse - Set this to true if you would like owned lists to be returned first Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/list Twitter Developers getUserLists ResponseList&lt;UserList&gt;\u00a0getUserLists(long\u00a0listOwnerUserId) throws TwitterException List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Parameters: listOwnerUserId - The id of the list owner Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: GET lists/list Twitter Developers getUserLists ResponseList&lt;UserList&gt;\u00a0getUserLists(long\u00a0listOwnerUserId, boolean\u00a0reverse) throws TwitterException List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Parameters: listOwnerUserId - The id of the list owner reverse - Set this to true if you would like owned lists to be returned first Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/list Twitter Developers getUserListStatuses ResponseList&lt;Status&gt;\u00a0getUserListStatuses(long\u00a0listId, Paging\u00a0paging) throws TwitterException Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Parameters: listId - The id of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of statuses for members of the specified list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: GET lists/statuses Twitter Developers getUserListStatuses ResponseList&lt;Status&gt;\u00a0getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) throws TwitterException Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of statuses for members of the specified list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET lists/statuses Twitter Developers getUserListStatuses ResponseList&lt;Status&gt;\u00a0getUserListStatuses(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, Paging\u00a0paging) throws TwitterException Show tweet timeline for members of the specified list. https://api.twitter.com/1.1/lists/statuses.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of statuses for members of the specified list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET lists/statuses Twitter Developers destroyUserListMember UserList\u00a0destroyUserListMember(long\u00a0listId, long\u00a0userId) throws TwitterException Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Parameters: listId - The id of the list. userId - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST lists/members/destroy Twitter Developers destroyUserListMember UserList\u00a0destroyUserListMember(long\u00a0listId, java.lang.String\u00a0screenName) throws TwitterException Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Parameters: listId - The id of the list. screenName - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: POST lists/members/destroy Twitter Developers destroyUserListMembers UserList\u00a0destroyUserListMembers(long\u00a0listId, java.lang.String[]\u00a0screenNames) throws TwitterException Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy_all.json Parameters: listId - The id of the list. screenNames - The screen names of the members you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: POST lists/members/destroy_all Twitter Developers destroyUserListMembers UserList\u00a0destroyUserListMembers(long\u00a0listId, long[]\u00a0userIds) throws TwitterException Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy_all.json Parameters: listId - The id of the list. userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: POST lists/members/destroy_all Twitter Developers destroyUserListMembers UserList\u00a0destroyUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String[]\u00a0screenNames) throws TwitterException Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy_all.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The screen names of the members you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.6 See Also: POST lists/members/destroy_all Twitter Developers destroyUserListMember UserList\u00a0destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/members/destroy Twitter Developers destroyUserListMember UserList\u00a0destroyUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userId - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/members/destroy Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0cursor) throws TwitterException List the lists the authenticating user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - when authorization is not enabled Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(int\u00a0count, long\u00a0cursor) throws TwitterException List the lists the authenticating user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - when authorization is not enabled Since: Twitter4J 4.0.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberId - The id of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberScreenName - The screen name of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - when filerToOwnedLists is true but authorization is not enabled Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberScreenName - The screen name of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - when filerToOwnedLists is true but authorization is not enabled Since: Twitter4J 4.0.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberId is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - when filerToOwnedLists is true but authorization is not enabled Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberId - The id of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberId is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - when filerToOwnedLists is true but authorization is not enabled Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0listId, long\u00a0cursor) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscribers Twitter Developers createUserListSubscription UserList\u00a0createUserListSubscription(long\u00a0listId) throws TwitterException Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Parameters: listId - The id of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: POST lists/subscribers/create Twitter Developers createUserListSubscription UserList\u00a0createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/subscribers/create Twitter Developers createUserListSubscription UserList\u00a0createUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/subscribers/create Twitter Developers showUserListSubscription User\u00a0showUserListSubscription(long\u00a0listId, long\u00a0userId) throws TwitterException Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 2.2.3 See Also: GET lists/subscribers/show Twitter Developers showUserListSubscription User\u00a0showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 3.0.0 See Also: GET lists/subscribers/show Twitter Developers showUserListSubscription User\u00a0showUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 3.0.2 See Also: GET lists/subscribers/show Twitter Developers destroyUserListSubscription UserList\u00a0destroyUserListSubscription(long\u00a0listId) throws TwitterException Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Parameters: listId - The id of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: POST lists/subscribers/destroy Twitter Developers destroyUserListSubscription UserList\u00a0destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/subscribers/destroy Twitter Developers destroyUserListSubscription UserList\u00a0destroyUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/subscribers/destroy Twitter Developers createUserListMembers UserList\u00a0createUserListMembers(long\u00a0listId, long...\u00a0userIds) throws TwitterException Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: listId - The id of the list. userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/members/create_all Twitter Developers createUserListMembers UserList\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) throws TwitterException Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/members/create_all Twitter Developers createUserListMembers UserList\u00a0createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long...\u00a0userIds) throws TwitterException Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/members/create_all Twitter Developers createUserListMembers UserList\u00a0createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) throws TwitterException Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: listId - The id of the list. screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.7 See Also: POST lists/members/create_all Twitter Developers createUserListMembers UserList\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) throws TwitterException Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/members/create_all Twitter Developers createUserListMembers UserList\u00a0createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) throws TwitterException Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/members/create_all Twitter Developers showUserListMembership User\u00a0showUserListMembership(long\u00a0listId, long\u00a0userId) throws TwitterException Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 2.2.3 See Also: GET lists/members/show Twitter Developers showUserListMembership User\u00a0showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 3.0.0 See Also: GET lists/members/show Twitter Developers showUserListMembership User\u00a0showUserListMembership(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Parameters: ownerScreenName - Id The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 3.0.2 See Also: GET lists/members/show Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0listId, long\u00a0cursor) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/members Twitter Developers getUserListMembers PagableResponseList&lt;User&gt;\u00a0getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/members Twitter Developers createUserListMember UserList\u00a0createUserListMember(long\u00a0listId, long\u00a0userId) throws TwitterException Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Parameters: listId - The id of the list. userId - The id of the user to add as a member of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST lists/members/create Twitter Developers createUserListMember UserList\u00a0createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user to add as a member of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/members/create Twitter Developers createUserListMember UserList\u00a0createUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user to add as a member of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/members/create Twitter Developers destroyUserList UserList\u00a0destroyUserList(long\u00a0listId) throws TwitterException Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Parameters: listId - The id of the list to delete Returns: the deleted list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST lists/destroy Twitter Developers destroyUserList UserList\u00a0destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the deleted list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/destroy Twitter Developers destroyUserList UserList\u00a0destroyUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the deleted list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/destroy Twitter Developers updateUserList UserList\u00a0updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) throws TwitterException Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Parameters: listId - The id of the list to update. newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST lists/update Twitter Developers updateUserList UserList\u00a0updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) throws TwitterException Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST lists/update Twitter Developers updateUserList UserList\u00a0updateUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) throws TwitterException Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: POST lists/update Twitter Developers createUserList UserList\u00a0createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) throws TwitterException Creates a new list for the authenticated user. Accounts are limited to 20 lists. This method calls https://api.twitter.com/1.1/lists/create.json Parameters: listName - The name of the list you are creating. Required. isPublicList - set true if you wish to make a public list description - The description of the list you are creating. Optional. Returns: the list that was created Throws: TwitterException - when Twitter service or network is unavailable, or the authenticated user already has 20 lists(TwitterException.getStatusCode() == 403). Since: Twitter4J 2.1.0 See Also: POST lists/create Twitter Developers showUserList UserList\u00a0showUserList(long\u00a0listId) throws TwitterException Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Parameters: listId - The id of the list to show Returns: the specified list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.3 See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers showUserList UserList\u00a0showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the specified list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers showUserList UserList\u00a0showUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the specified list Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers getUserListSubscriptions PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, long\u00a0cursor) throws TwitterException List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Parameters: listSubscriberScreenName - The screen name of the list subscriber cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET lists/subscriptions Twitter Developers getUserListSubscriptions PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, int\u00a0count, long\u00a0cursor) throws TwitterException List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Parameters: listSubscriberScreenName - The screen name of the list subscriber count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscriptions Twitter Developers getUserListSubscriptions PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(long\u00a0listSubscriberId, long\u00a0cursor) throws TwitterException List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Parameters: listSubscriberId - The ID of the list subscriber cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscriptions Twitter Developers getUserListSubscriptions PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(long\u00a0listSubscriberId, int\u00a0count, long\u00a0cursor) throws TwitterException List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Parameters: listSubscriberId - The ID of the list subscriber count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 See Also: GET lists/subscriptions Twitter Developers getUserListsOwnerships PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) throws TwitterException Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Parameters: listOwnerScreenName - The screen name of the list owner cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 getUserListsOwnerships PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Parameters: listOwnerScreenName - The screen name of the list owner count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.1 getUserListsOwnerships PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(long\u00a0listOwnerId, long\u00a0cursor) throws TwitterException Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Parameters: listOwnerId - The id of the list owner cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.4 getUserListsOwnerships PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(long\u00a0listOwnerId, int\u00a0count, long\u00a0cursor) throws TwitterException Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Parameters: listOwnerId - The id of the list owner count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.1 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ListsResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ListsResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6,&quot;i35&quot;:6,&quot;i36&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface ListsResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface ListsResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) Creates a new list for the authenticated user. void createUserListMember(long\u00a0listId, long\u00a0userId) Adds a member to a list. void createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. void createUserListMembers(long\u00a0listId, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. void createUserListSubscription(long\u00a0listId) Make the authenticated user follow the specified list. void createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. void destroyUserList(long\u00a0listId) Deletes the specified list. void destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Deletes the specified list. void destroyUserListMember(long\u00a0listId, long\u00a0userId) Removes the specified member from the list. void destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. void destroyUserListSubscription(long\u00a0listId) Unsubscribes the authenticated user form the specified list. void destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. void getUserListMembers(long\u00a0listId, long\u00a0cursor) Returns the members of the specified list. void getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. void getUserListMemberships(long\u00a0cursor) List the lists the authenticating user has been added to. void getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) List the lists the specified user has been added to. void getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. void getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) List the lists the specified user has been added to. void getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. void getUserLists(long\u00a0listOwnerUserId) List the lists of the specified user. void getUserLists(java.lang.String\u00a0listOwnerScreenName) List the lists of the specified user. void getUserListStatuses(long\u00a0listId, Paging\u00a0paging) Show tweet timeline for members of the specified list. void getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. void getUserListSubscribers(long\u00a0listId, long\u00a0cursor) Returns the subscribers of the specified list. void getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. void getUserListSubscriptions(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) List the lists the specified user follows. void showUserList(long\u00a0listId) Show the specified list. void showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Show the specified list. void showUserListMembership(long\u00a0listId, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json void showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json void showUserListSubscription(long\u00a0listId, long\u00a0userId) Check if the specified user is a subscriber of the specified list. void showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. void updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. void updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. Method Detail getUserLists void\u00a0getUserLists(java.lang.String\u00a0listOwnerScreenName) List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Parameters: listOwnerScreenName - The screen name of the list owner as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.1.1 See Also: GET lists Twitter Developers getUserLists void\u00a0getUserLists(long\u00a0listOwnerUserId) List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Parameters: listOwnerUserId - The id of the list owner returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.2.3 See Also: GET lists Twitter Developers getUserListStatuses void\u00a0getUserListStatuses(long\u00a0listId, Paging\u00a0paging) Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Parameters: listId - The id of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Since: Twitter4J 2.2.3 See Also: GET lists/statuses Twitter Developers getUserListStatuses void\u00a0getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Since: Twitter4J 3.0.0 See Also: GET lists/statuses Twitter Developers destroyUserListMember void\u00a0destroyUserListMember(long\u00a0listId, long\u00a0userId) Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Parameters: listId - The id of the list. userId - The screen name of the member you wish to remove from the list. Since: Twitter4J 2.1.0 See Also: POST lists/members/destroy Twitter Developers destroyUserListMember void\u00a0destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The screen name of the member you wish to remove from the list. Since: Twitter4J 3.0.0 See Also: POST lists/members/destroy Twitter Developers getUserListMemberships void\u00a0getUserListMemberships(long\u00a0cursor) List the lists the authenticating user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships void\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships void\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.1.1 See Also: GET lists/memberships Twitter Developers getUserListMemberships void\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListMemberships void\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. Since: Twitter4J 2.2.4 See Also: GET lists/memberships Twitter Developers getUserListSubscribers void\u00a0getUserListSubscribers(long\u00a0listId, long\u00a0cursor) Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.1.1 See Also: GET lists/subscribers Twitter Developers getUserListSubscribers void\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 3.0.0 See Also: GET lists/subscribers Twitter Developers createUserListSubscription void\u00a0createUserListSubscription(long\u00a0listId) Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Parameters: listId - The id of the list. Since: Twitter4J 2.2.3 See Also: POST lists/subscribers/create Twitter Developers createUserListSubscription void\u00a0createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Since: Twitter4J 3.0.0 See Also: POST lists/subscribers/create Twitter Developers showUserListSubscription void\u00a0showUserListSubscription(long\u00a0listId, long\u00a0userId) Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 2.2.3 See Also: GET lists/subscribers/show Twitter Developers showUserListSubscription void\u00a0showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) Since: Twitter4J 3.0.0 See Also: GET lists/subscribers/show Twitter Developers destroyUserListSubscription void\u00a0destroyUserListSubscription(long\u00a0listId) Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Parameters: listId - The id of the list. Since: Twitter4J 2.2.3 See Also: POST lists/subscribers/destroy Twitter Developers destroyUserListSubscription void\u00a0destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Since: Twitter4J 3.0.0 See Also: POST lists/subscribers/destroy Twitter Developers createUserListMembers void\u00a0createUserListMembers(long\u00a0listId, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: listId - The id of the list. userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Since: Twitter4J 2.1.7 See Also: POST lists/members/create_all Twitter Developers createUserListMembers void\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Since: Twitter4J 3.0.0 See Also: POST lists/members/create_all Twitter Developers createUserListMembers void\u00a0createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: listId - The id of the list. screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Since: Twitter4J 2.1.7 See Also: POST lists/members/create_all Twitter Developers createUserListMembers void\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Since: Twitter4J 3.0.0 See Also: POST lists/members/create_all Twitter Developers showUserListMembership void\u00a0showUserListMembership(long\u00a0listId, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. Since: Twitter4J 2.2.3 See Also: GET lists/members/show Twitter Developers showUserListMembership void\u00a0showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. .getStatusCode() returns 404 in that case.) Since: Twitter4J 3.0.0 See Also: GET lists/members/show Twitter Developers getUserListMembers void\u00a0getUserListMembers(long\u00a0listId, long\u00a0cursor) Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.2.3 See Also: GET lists/members Twitter Developers getUserListMembers void\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 3.0.0 See Also: GET lists/members Twitter Developers createUserListMember void\u00a0createUserListMember(long\u00a0listId, long\u00a0userId) Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Parameters: listId - The id of the list. userId - The id of the user to add as a member of the list. Since: Twitter4J 2.1.1 See Also: POST lists/members/create Twitter Developers createUserListMember void\u00a0createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user to add as a member of the list. Since: Twitter4J 3.0.0 See Also: POST lists/members/create Twitter Developers destroyUserList void\u00a0destroyUserList(long\u00a0listId) Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Parameters: listId - The id of the list to delete Since: Twitter4J 2.1.1 See Also: POST lists/destroy Twitter Developers destroyUserList void\u00a0destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Since: Twitter4J 3.0.0 See Also: POST lists/destroy Twitter Developers updateUserList void\u00a0updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Parameters: listId - The id of the list to update. newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Since: Twitter4J 2.1.1 See Also: POST lists/update Twitter Developers updateUserList void\u00a0updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Since: Twitter4J 3.0.0 See Also: POST lists/update Twitter Developers createUserList void\u00a0createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) Creates a new list for the authenticated user. Accounts are limited to 20 lists. This method calls https://api.twitter.com/1.1/lists/create.json Parameters: listName - The name of the list you are creating. Required. isPublicList - set true if you wish to make a public list description - The description of the list you are creating. Optional. Since: Twitter4J 2.1.1 See Also: POST lists/create Twitter Developers showUserList void\u00a0showUserList(long\u00a0listId) Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Parameters: listId - The id of the list to show Since: Twitter4J 2.2.3 See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers showUserList void\u00a0showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Since: Twitter4J 3.0.0 See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers getUserListSubscriptions void\u00a0getUserListSubscriptions(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Parameters: listOwnerScreenName - The screen name of the list owner cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Since: Twitter4J 2.1.1 See Also: GET lists/subscriptions Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Location &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Location&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Location All Superinterfaces: java.io.Serializable public interface Location extends java.io.Serializable Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getCountryCode()\u00a0 java.lang.String getCountryName()\u00a0 java.lang.String getName()\u00a0 int getPlaceCode()\u00a0 java.lang.String getPlaceName()\u00a0 java.lang.String getURL()\u00a0 int getWoeid()\u00a0 Method Detail getWoeid int\u00a0getWoeid() getCountryName java.lang.String\u00a0getCountryName() getCountryCode java.lang.String\u00a0getCountryCode() getPlaceName java.lang.String\u00a0getPlaceName() getPlaceCode int\u00a0getPlaceCode() getName java.lang.String\u00a0getName() getURL java.lang.String\u00a0getURL() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method MediaEntity.Size &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;MediaEntity.Size&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface MediaEntity.Size All Superinterfaces: java.io.Serializable Enclosing interface: MediaEntity public static interface MediaEntity.Size extends java.io.Serializable Field Summary Fields\u00a0 Modifier and Type Field and Description static int CROP\u00a0 static int FIT\u00a0 static java.lang.Integer LARGE\u00a0 static java.lang.Integer MEDIUM\u00a0 static java.lang.Integer SMALL\u00a0 static java.lang.Integer THUMB\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getHeight()\u00a0 int getResize()\u00a0 int getWidth()\u00a0 Field Detail THUMB static final\u00a0java.lang.Integer THUMB SMALL static final\u00a0java.lang.Integer SMALL MEDIUM static final\u00a0java.lang.Integer MEDIUM LARGE static final\u00a0java.lang.Integer LARGE FIT static final\u00a0int FIT See Also: Constant Field Values CROP static final\u00a0int CROP See Also: Constant Field Values Method Detail getWidth int\u00a0getWidth() getHeight int\u00a0getHeight() getResize int\u00a0getResize() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method MediaEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;MediaEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface MediaEntity All Superinterfaces: java.io.Serializable, TweetEntity, URLEntity All Known Subinterfaces: ExtendedMediaEntity public interface MediaEntity extends URLEntity Since: Twitter4J 2.2.3 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Interface and Description static interface\u00a0 MediaEntity.Size\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long getId() Returns the id of the media. java.lang.String getMediaURL() Returns the media URL. java.lang.String getMediaURLHttps() Returns the media secure URL. java.util.Map&lt;java.lang.Integer,MediaEntity.Size&gt; getSizes() Returns size variations of the media. java.lang.String getType() Returns the media type (&quot;photo&quot;, &quot;video&quot;, &quot;animated_gif&quot;). Methods inherited from interface\u00a0twitter4j.URLEntity getDisplayURL, getEnd, getExpandedURL, getStart, getText, getURL Method Detail getId long\u00a0getId() Returns the id of the media. Returns: the id of the media getMediaURL java.lang.String\u00a0getMediaURL() Returns the media URL. Returns: the media URL getMediaURLHttps java.lang.String\u00a0getMediaURLHttps() Returns the media secure URL. Returns: the media secure URL getSizes java.util.Map&lt;java.lang.Integer,MediaEntity.Size&gt;\u00a0getSizes() Returns size variations of the media. Returns: size variations of the media getType java.lang.String\u00a0getType() Returns the media type (&quot;photo&quot;, &quot;video&quot;, &quot;animated_gif&quot;). Returns: the media type (&quot;photo&quot;, &quot;video&quot;, &quot;animated_gif&quot;). Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method MediaProvider &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;MediaProvider&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j.media Enum MediaProvider java.lang.Object java.lang.Enum&lt;MediaProvider&gt; twitter4j.media.MediaProvider All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;MediaProvider&gt; public enum MediaProvider extends java.lang.Enum&lt;MediaProvider&gt; Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description IMG_LY\u00a0 MOBYPICTURE\u00a0 TWIPPLE\u00a0 TWITTER\u00a0 YFROG\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static MediaProvider valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static MediaProvider[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail TWITTER public static final\u00a0MediaProvider TWITTER IMG_LY public static final\u00a0MediaProvider IMG_LY TWIPPLE public static final\u00a0MediaProvider TWIPPLE YFROG public static final\u00a0MediaProvider YFROG MOBYPICTURE public static final\u00a0MediaProvider MOBYPICTURE Method Detail values public static\u00a0MediaProvider[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (MediaProvider c : MediaProvider.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0MediaProvider\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method MobypictureUpload &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;MobypictureUpload&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class MobypictureUpload java.lang.Object twitter4j.media.AbstractImageUploadImpl twitter4j.media.MobypictureUpload All Implemented Interfaces: ImageUpload class MobypictureUpload extends AbstractImageUploadImpl Since: Twitter4J 2.1.12 Author: withgod - noname at withgod.jp See Also: mobyapi documentation Field Summary Fields inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl apiKey, headers, httpResponse, image, message, oauth, postParameter, TWITTER_VERIFY_CREDENTIALS_JSON_V1_1, uploadUrl Constructor Summary Constructors\u00a0 Constructor and Description MobypictureUpload(Configuration\u00a0conf, java.lang.String\u00a0apiKey, OAuthAuthorization\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description protected java.lang.String postUpload()\u00a0 protected void preUpload()\u00a0 Methods inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl appendHttpParameters, equals, generateVerifyCredentialsAuthorizationHeader, generateVerifyCredentialsAuthorizationURL, hashCode, toString, upload, upload, upload, upload Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Constructor Detail MobypictureUpload public\u00a0MobypictureUpload(Configuration\u00a0conf, java.lang.String\u00a0apiKey, OAuthAuthorization\u00a0oauth) Method Detail postUpload protected\u00a0java.lang.String\u00a0postUpload() throws TwitterException Specified by: postUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException preUpload protected\u00a0void\u00a0preUpload() throws TwitterException Specified by: preUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method NullAuthorization &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;NullAuthorization&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:9,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class NullAuthorization java.lang.Object twitter4j.auth.NullAuthorization All Implemented Interfaces: java.io.Serializable, Authorization public class NullAuthorization extends java.lang.Object implements Authorization, java.io.Serializable An interface represents credentials. Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private static long serialVersionUID\u00a0 private static NullAuthorization SINGLETON\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description private NullAuthorization()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 java.lang.String getAuthorizationHeader(HttpRequest\u00a0req)\u00a0 static NullAuthorization getInstance()\u00a0 boolean isEnabled() Returns true if authorization credentials are set. private java.lang.Object readResolve()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values SINGLETON private static final\u00a0NullAuthorization SINGLETON Constructor Detail NullAuthorization private\u00a0NullAuthorization() Method Detail getInstance public static\u00a0NullAuthorization\u00a0getInstance() getAuthorizationHeader public\u00a0java.lang.String\u00a0getAuthorizationHeader(HttpRequest\u00a0req) Specified by: getAuthorizationHeader\u00a0in interface\u00a0Authorization isEnabled public\u00a0boolean\u00a0isEnabled() Description copied from interface:\u00a0Authorization Returns true if authorization credentials are set. Specified by: isEnabled\u00a0in interface\u00a0Authorization Returns: true if authorization credentials are set equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object readResolve private\u00a0java.lang.Object\u00a0readResolve() throws java.io.ObjectStreamException Throws: java.io.ObjectStreamException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OAuth2Authorization &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OAuth2Authorization&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class OAuth2Authorization java.lang.Object twitter4j.auth.OAuth2Authorization All Implemented Interfaces: java.io.Serializable, Authorization, OAuth2Support public class OAuth2Authorization extends java.lang.Object implements Authorization, java.io.Serializable, OAuth2Support Author: KOMIYA Atsushi - komiya.atsushi at gmail.com See Also: Application-only authentication, Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private Configuration conf\u00a0 private java.lang.String consumerKey\u00a0 private java.lang.String consumerSecret\u00a0 private HttpClient http\u00a0 private static long serialVersionUID\u00a0 private OAuth2Token token\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description OAuth2Authorization(Configuration\u00a0conf)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0obj)\u00a0 java.lang.String getAuthorizationHeader(HttpRequest\u00a0req)\u00a0 OAuth2Token getOAuth2Token() Obtains an OAuth 2 Bearer token. int hashCode()\u00a0 void invalidateOAuth2Token() Revokes an issued OAuth 2 Bearer Token. boolean isEnabled() Returns true if authorization credentials are set. void setOAuth2Token(OAuth2Token\u00a0oauth2Token) Sets the OAuth 2 Bearer token. void setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Sets the OAuth consumer key and consumer secret. java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf private final\u00a0Configuration conf http private final\u00a0HttpClient http consumerKey private\u00a0java.lang.String consumerKey consumerSecret private\u00a0java.lang.String consumerSecret token private\u00a0OAuth2Token token Constructor Detail OAuth2Authorization public\u00a0OAuth2Authorization(Configuration\u00a0conf) Method Detail setOAuthConsumer public\u00a0void\u00a0setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Description copied from interface:\u00a0OAuth2Support Sets the OAuth consumer key and consumer secret. Specified by: setOAuthConsumer\u00a0in interface\u00a0OAuth2Support Parameters: consumerKey - OAuth consumer key consumerSecret - OAuth consumer secret getOAuth2Token public\u00a0OAuth2Token\u00a0getOAuth2Token() throws TwitterException Description copied from interface:\u00a0OAuth2Support Obtains an OAuth 2 Bearer token. Specified by: getOAuth2Token\u00a0in interface\u00a0OAuth2Support Returns: OAuth 2 Bearer token Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. See Also: POST oauth2/token Twitter Developers setOAuth2Token public\u00a0void\u00a0setOAuth2Token(OAuth2Token\u00a0oauth2Token) Description copied from interface:\u00a0OAuth2Support Sets the OAuth 2 Bearer token. Specified by: setOAuth2Token\u00a0in interface\u00a0OAuth2Support Parameters: oauth2Token - OAuth 2 Bearer token invalidateOAuth2Token public\u00a0void\u00a0invalidateOAuth2Token() throws TwitterException Description copied from interface:\u00a0OAuth2Support Revokes an issued OAuth 2 Bearer Token. Specified by: invalidateOAuth2Token\u00a0in interface\u00a0OAuth2Support Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. getAuthorizationHeader public\u00a0java.lang.String\u00a0getAuthorizationHeader(HttpRequest\u00a0req) Specified by: getAuthorizationHeader\u00a0in interface\u00a0Authorization isEnabled public\u00a0boolean\u00a0isEnabled() Description copied from interface:\u00a0Authorization Returns true if authorization credentials are set. Specified by: isEnabled\u00a0in interface\u00a0Authorization Returns: true if authorization credentials are set equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0obj) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OAuth2Support &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OAuth2Support&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Interface OAuth2Support All Known Subinterfaces: AsyncTwitter, Twitter All Known Implementing Classes: AsyncTwitterImpl, OAuth2Authorization, TwitterBaseImpl, TwitterImpl, TwitterStreamImpl public interface OAuth2Support Author: KOMIYA Atsushi - komiya.atsushi at gmail.com See Also: Application-only authentication Twitter Developers Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description OAuth2Token getOAuth2Token() Obtains an OAuth 2 Bearer token. void invalidateOAuth2Token() Revokes an issued OAuth 2 Bearer Token. void setOAuth2Token(OAuth2Token\u00a0oauth2Token) Sets the OAuth 2 Bearer token. void setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Sets the OAuth consumer key and consumer secret. Method Detail setOAuthConsumer void\u00a0setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Sets the OAuth consumer key and consumer secret. Parameters: consumerKey - OAuth consumer key consumerSecret - OAuth consumer secret Throws: java.lang.IllegalStateException - when OAuth consumer has already been set, or the instance is using basic authorization. getOAuth2Token OAuth2Token\u00a0getOAuth2Token() throws TwitterException Obtains an OAuth 2 Bearer token. Returns: OAuth 2 Bearer token Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. java.lang.IllegalStateException - when Bearer token is already available, or OAuth consumer is not available. See Also: POST oauth2/token Twitter Developers setOAuth2Token void\u00a0setOAuth2Token(OAuth2Token\u00a0oauth2Token) Sets the OAuth 2 Bearer token. Parameters: oauth2Token - OAuth 2 Bearer token invalidateOAuth2Token void\u00a0invalidateOAuth2Token() throws TwitterException Revokes an issued OAuth 2 Bearer Token. Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. java.lang.IllegalStateException - when Bearer token is not available. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OAuth2Token &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OAuth2Token&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:9,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class OAuth2Token java.lang.Object twitter4j.auth.OAuth2Token All Implemented Interfaces: java.io.Serializable public class OAuth2Token extends java.lang.Object implements java.io.Serializable See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String accessToken\u00a0 private static long serialVersionUID\u00a0 private java.lang.String tokenType\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description OAuth2Token(HttpResponse\u00a0res)\u00a0 OAuth2Token(java.lang.String\u00a0tokenType, java.lang.String\u00a0accessToken)\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0obj)\u00a0 (package private) java.lang.String generateAuthorizationHeader()\u00a0 java.lang.String getAccessToken()\u00a0 private static java.lang.String getRawString(java.lang.String\u00a0name, JSONObject\u00a0json)\u00a0 java.lang.String getTokenType()\u00a0 int hashCode()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values tokenType private\u00a0java.lang.String tokenType accessToken private\u00a0java.lang.String accessToken Constructor Detail OAuth2Token OAuth2Token(HttpResponse\u00a0res) throws TwitterException Throws: TwitterException OAuth2Token public\u00a0OAuth2Token(java.lang.String\u00a0tokenType, java.lang.String\u00a0accessToken) Method Detail getTokenType public\u00a0java.lang.String\u00a0getTokenType() getAccessToken public\u00a0java.lang.String\u00a0getAccessToken() generateAuthorizationHeader java.lang.String\u00a0generateAuthorizationHeader() equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0obj) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object getRawString private static\u00a0java.lang.String\u00a0getRawString(java.lang.String\u00a0name, JSONObject\u00a0json) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OAuthAuthorization &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OAuthAuthorization&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9,&quot;i2&quot;:9,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:9,&quot;i23&quot;:9,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:9,&quot;i29&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class OAuthAuthorization java.lang.Object twitter4j.auth.OAuthAuthorization All Implemented Interfaces: java.io.Serializable, Authorization, OAuthSupport public class OAuthAuthorization extends java.lang.Object implements Authorization, java.io.Serializable, OAuthSupport Author: Yusuke Yamamoto - yusuke at mac.com See Also: OAuth Core 1.0a, Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private Configuration conf\u00a0 private java.lang.String consumerKey\u00a0 private java.lang.String consumerSecret\u00a0 private static java.lang.String HMAC_SHA1\u00a0 private static HttpClient http\u00a0 private static Logger logger\u00a0 private static HttpParameter OAUTH_SIGNATURE_METHOD\u00a0 private OAuthToken oauthToken\u00a0 private static java.util.Random RAND\u00a0 private java.lang.String realm\u00a0 private static long serialVersionUID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description OAuthAuthorization(Configuration\u00a0conf)\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) static java.lang.String constructRequestURL(java.lang.String\u00a0url) The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint. static java.lang.String encodeParameters(java.util.List&lt;HttpParameter&gt;\u00a0httpParams)\u00a0 static java.lang.String encodeParameters(java.util.List&lt;HttpParameter&gt;\u00a0httpParams, java.lang.String\u00a0splitter, boolean\u00a0quot)\u00a0 private void ensureTokenIsAvailable()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 (package private) java.lang.String generateAuthorizationHeader(java.lang.String\u00a0method, java.lang.String\u00a0url, HttpParameter[]\u00a0params, OAuthToken\u00a0token)\u00a0 (package private) java.lang.String generateAuthorizationHeader(java.lang.String\u00a0method, java.lang.String\u00a0url, HttpParameter[]\u00a0params, java.lang.String\u00a0nonce, java.lang.String\u00a0timestamp, OAuthToken\u00a0otoken)\u00a0 java.util.List&lt;HttpParameter&gt; generateOAuthSignatureHttpParams(java.lang.String\u00a0method, java.lang.String\u00a0url)\u00a0 (package private) java.lang.String generateSignature(java.lang.String\u00a0data)\u00a0 (package private) java.lang.String generateSignature(java.lang.String\u00a0data, OAuthToken\u00a0token) Computes RFC 2104-compliant HMAC signature. java.lang.String getAuthorizationHeader(HttpRequest\u00a0req)\u00a0 AccessToken getOAuthAccessToken() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) Retrieves an access token. AccessToken getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. RequestToken getOAuthRequestToken() Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackURL) Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Retrieves a request token int hashCode()\u00a0 boolean isEnabled() Returns true if authorization credentials are set. (package private) static java.lang.String normalizeRequestParameters(HttpParameter[]\u00a0params) The request parameters are collected, sorted and concatenated into a normalized string: \u2022 Parameters in the OAuth HTTP Authorization header excluding the realm parameter. \u2022 Parameters in the HTTP POST request body (with a content-type of application/x-www-form-urlencoded). \u2022 HTTP GET parameters added to the URLs in the query part (as defined by [RFC3986] section 3). The oauth_signature parameter MUST be excluded. The parameters are normalized into a single string as follows: 1. private static java.lang.String normalizeRequestParameters(java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void parseGetParameters(java.lang.String\u00a0url, java.util.List&lt;HttpParameter&gt;\u00a0signatureBaseParams)\u00a0 void setOAuthAccessToken(AccessToken\u00a0accessToken) Sets the access token void setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) sets the OAuth consumer key and consumer secret void setOAuthRealm(java.lang.String\u00a0realm) Sets the OAuth realm private static java.util.List&lt;HttpParameter&gt; toParamList(HttpParameter[]\u00a0params)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf private final\u00a0Configuration conf http private static transient\u00a0HttpClient http HMAC_SHA1 private static final\u00a0java.lang.String HMAC_SHA1 See Also: Constant Field Values OAUTH_SIGNATURE_METHOD private static final\u00a0HttpParameter OAUTH_SIGNATURE_METHOD logger private static final\u00a0Logger logger consumerKey private\u00a0java.lang.String consumerKey consumerSecret private\u00a0java.lang.String consumerSecret realm private\u00a0java.lang.String realm oauthToken private\u00a0OAuthToken oauthToken RAND private static final\u00a0java.util.Random RAND Constructor Detail OAuthAuthorization public\u00a0OAuthAuthorization(Configuration\u00a0conf) Parameters: conf - configuration Method Detail getAuthorizationHeader public\u00a0java.lang.String\u00a0getAuthorizationHeader(HttpRequest\u00a0req) Specified by: getAuthorizationHeader\u00a0in interface\u00a0Authorization ensureTokenIsAvailable private\u00a0void\u00a0ensureTokenIsAvailable() isEnabled public\u00a0boolean\u00a0isEnabled() Returns true if authorization credentials are set. Specified by: isEnabled\u00a0in interface\u00a0Authorization Returns: true if authorization credentials are set getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken() throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Returns: generated request token. Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackURL) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Parameters: callbackURL - callback URL Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. xAuthMode - Set to reverse_auth to obtain a special request token to be used in the reverse auth process. Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken() throws TwitterException Description copied from interface:\u00a0OAuthSupport Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Returns: access token Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: oauthVerifier - OAuth verifier. AKA pin. Returns: access token Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: requestToken - the request token Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: requestToken - the request token oauthVerifier - OAuth verifier. AKA pin. Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: screenName - the screen name password - the password Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, xAuth Twitter Developers, POST oauth/access_token Twitter Developers setOAuthAccessToken public\u00a0void\u00a0setOAuthAccessToken(AccessToken\u00a0accessToken) Description copied from interface:\u00a0OAuthSupport Sets the access token Specified by: setOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: accessToken - accessToken setOAuthRealm public\u00a0void\u00a0setOAuthRealm(java.lang.String\u00a0realm) Sets the OAuth realm Parameters: realm - OAuth realm Since: Twitter 2.1.4 generateAuthorizationHeader java.lang.String\u00a0generateAuthorizationHeader(java.lang.String\u00a0method, java.lang.String\u00a0url, HttpParameter[]\u00a0params, java.lang.String\u00a0nonce, java.lang.String\u00a0timestamp, OAuthToken\u00a0otoken) parseGetParameters private\u00a0void\u00a0parseGetParameters(java.lang.String\u00a0url, java.util.List&lt;HttpParameter&gt;\u00a0signatureBaseParams) generateAuthorizationHeader java.lang.String\u00a0generateAuthorizationHeader(java.lang.String\u00a0method, java.lang.String\u00a0url, HttpParameter[]\u00a0params, OAuthToken\u00a0token) Returns: generated authorization header See Also: OAuth Core - 5.4.1. Authorization Header generateOAuthSignatureHttpParams public\u00a0java.util.List&lt;HttpParameter&gt;\u00a0generateOAuthSignatureHttpParams(java.lang.String\u00a0method, java.lang.String\u00a0url) generateSignature java.lang.String\u00a0generateSignature(java.lang.String\u00a0data, OAuthToken\u00a0token) Computes RFC 2104-compliant HMAC signature. Parameters: data - the data to be signed token - the token Returns: signature See Also: OAuth Core - 9.2.1. Generating Signature generateSignature java.lang.String\u00a0generateSignature(java.lang.String\u00a0data) normalizeRequestParameters static\u00a0java.lang.String\u00a0normalizeRequestParameters(HttpParameter[]\u00a0params) The request parameters are collected, sorted and concatenated into a normalized string: \u2022 Parameters in the OAuth HTTP Authorization header excluding the realm parameter. \u2022 Parameters in the HTTP POST request body (with a content-type of application/x-www-form-urlencoded). \u2022 HTTP GET parameters added to the URLs in the query part (as defined by [RFC3986] section 3). The oauth_signature parameter MUST be excluded. The parameters are normalized into a single string as follows: 1. Parameters are sorted by name, using lexicographical byte value ordering. If two or more parameters share the same name, they are sorted by their value. For example: 2. a=1, c=hi%20there, f=25, f=50, f=a, z=p, z=t 3. 4. Parameters are concatenated in their sorted order into a single string. For each parameter, the name is separated from the corresponding value by an `=' character (ASCII code 61), even if the value is empty. Each name-value pair is separated by an `&amp;' character (ASCII code 38). For example: 5. a=1&amp;c=hi%20there&amp;f=25&amp;f=50&amp;f=a&amp;z=p&amp;z=t 6. Parameters: params - parameters to be normalized and concatenated Returns: normalized and concatenated parameters See Also: OAuth Core - 9.1.1. Normalize Request Parameters normalizeRequestParameters private static\u00a0java.lang.String\u00a0normalizeRequestParameters(java.util.List&lt;HttpParameter&gt;\u00a0params) toParamList private static\u00a0java.util.List&lt;HttpParameter&gt;\u00a0toParamList(HttpParameter[]\u00a0params) encodeParameters public static\u00a0java.lang.String\u00a0encodeParameters(java.util.List&lt;HttpParameter&gt;\u00a0httpParams) Parameters: httpParams - parameters to be encoded and concatenated Returns: encoded string See Also: OAuth / TestCases, Space encoding - OAuth Google Groups encodeParameters public static\u00a0java.lang.String\u00a0encodeParameters(java.util.List&lt;HttpParameter&gt;\u00a0httpParams, java.lang.String\u00a0splitter, boolean\u00a0quot) constructRequestURL static\u00a0java.lang.String\u00a0constructRequestURL(java.lang.String\u00a0url) The Signature Base String includes the request absolute URL, tying the signature to a specific endpoint. The URL used in the Signature Base String MUST include the scheme, authority, and path, and MUST exclude the query and fragment as defined by [RFC3986] section 3. If the absolute request URL is not available to the Service Provider (it is always available to the Consumer), it can be constructed by combining the scheme being used, the HTTP Host header, and the relative HTTP request URL. If the Host header is not available, the Service Provider SHOULD use the host name communicated to the Consumer in the documentation or other means. The Service Provider SHOULD document the form of URL used in the Signature Base String to avoid ambiguity due to URL normalization. Unless specified, URL scheme and authority MUST be lowercase and include the port number; http default port 80 and https default port 443 MUST be excluded. For example, the request: HTTP://Example.com:80/resource?id=123 Is included in the Signature Base String as: http://example.com/resource Parameters: url - the url to be normalized Returns: the Signature Base String See Also: OAuth Core - 9.1.2. Construct Request URL setOAuthConsumer public\u00a0void\u00a0setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Description copied from interface:\u00a0OAuthSupport sets the OAuth consumer key and consumer secret Specified by: setOAuthConsumer\u00a0in interface\u00a0OAuthSupport Parameters: consumerKey - OAuth consumer key consumerSecret - OAuth consumer secret equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OAuthSupport &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OAuthSupport&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Interface OAuthSupport All Known Subinterfaces: AsyncTwitter, Twitter, TwitterStream All Known Implementing Classes: AsyncTwitterImpl, OAuthAuthorization, TwitterBaseImpl, TwitterImpl, TwitterStreamImpl public interface OAuthSupport Since: Twitter4J 2.1.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description AccessToken getOAuthAccessToken() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) Retrieves an access token. AccessToken getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. RequestToken getOAuthRequestToken() Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackURL) Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Retrieves a request token void setOAuthAccessToken(AccessToken\u00a0accessToken) Sets the access token void setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) sets the OAuth consumer key and consumer secret Method Detail setOAuthConsumer void\u00a0setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) sets the OAuth consumer key and consumer secret Parameters: consumerKey - OAuth consumer key consumerSecret - OAuth consumer secret Throws: java.lang.IllegalStateException - when OAuth consumer has already been set, or the instance is using basic authorization Since: Twitter 2.0.0 getOAuthRequestToken RequestToken\u00a0getOAuthRequestToken() throws TwitterException Retrieves a request token Returns: generated request token. Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - access token is already available Since: Twitter4J 2.0.0 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackURL) throws TwitterException Retrieves a request token Parameters: callbackURL - callback URL Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - access token is already available Since: Twitter4J 2.0.0 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType) throws TwitterException Retrieves a request token Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - access token is already available Since: Twitter4J 2.2.3 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackURL, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) throws TwitterException Retrieves a request token Parameters: callbackURL - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. xAuthMode - Set to reverse_auth to obtain a special request token to be used in the reverse auth process. Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable java.lang.IllegalStateException - access token is already available Since: Twitter4J 2.2.3 See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthAccessToken AccessToken\u00a0getOAuthAccessToken() throws TwitterException Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. Returns: access token Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized java.lang.IllegalStateException - when RequestToken has never been acquired Since: Twitter4J 2.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) throws TwitterException Retrieves an access token. Parameters: oauthVerifier - OAuth verifier. AKA pin. Returns: access token Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized Since: Twitter4J 2.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken) throws TwitterException Retrieves an access token associated with the supplied request token and sets userId. Parameters: requestToken - the request token Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized Since: Twitter4J 2.0.0 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) throws TwitterException Retrieves an access token associated with the supplied request token and sets userId. Parameters: requestToken - the request token oauthVerifier - OAuth verifier. AKA pin. Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized Since: Twitter 2.1.1 See Also: OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) throws TwitterException Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Parameters: screenName - the screen name password - the password Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized Since: Twitter 2.1.1 See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, xAuth Twitter Developers, POST oauth/access_token Twitter Developers setOAuthAccessToken void\u00a0setOAuthAccessToken(AccessToken\u00a0accessToken) Sets the access token Parameters: accessToken - accessToken Since: Twitter4J 2.0.0 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OAuthToken &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OAuthToken&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class OAuthToken java.lang.Object twitter4j.auth.OAuthToken All Implemented Interfaces: java.io.Serializable Direct Known Subclasses: AccessToken, RequestToken abstract class OAuthToken extends java.lang.Object implements java.io.Serializable Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String[] responseStr\u00a0 private javax.crypto.spec.SecretKeySpec secretKeySpec\u00a0 private static long serialVersionUID\u00a0 private java.lang.String token\u00a0 private java.lang.String tokenSecret\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description OAuthToken(HttpResponse\u00a0response)\u00a0 OAuthToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 java.lang.String getParameter(java.lang.String\u00a0parameter)\u00a0 (package private) javax.crypto.spec.SecretKeySpec getSecretKeySpec()\u00a0 java.lang.String getToken()\u00a0 java.lang.String getTokenSecret()\u00a0 int hashCode()\u00a0 (package private) void setSecretKeySpec(javax.crypto.spec.SecretKeySpec\u00a0secretKeySpec)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values token private final\u00a0java.lang.String token tokenSecret private final\u00a0java.lang.String tokenSecret secretKeySpec private transient\u00a0javax.crypto.spec.SecretKeySpec secretKeySpec responseStr private\u00a0java.lang.String[] responseStr Constructor Detail OAuthToken public\u00a0OAuthToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret) OAuthToken OAuthToken(HttpResponse\u00a0response) throws TwitterException Throws: TwitterException Method Detail getToken public\u00a0java.lang.String\u00a0getToken() getTokenSecret public\u00a0java.lang.String\u00a0getTokenSecret() setSecretKeySpec void\u00a0setSecretKeySpec(javax.crypto.spec.SecretKeySpec\u00a0secretKeySpec) getSecretKeySpec javax.crypto.spec.SecretKeySpec\u00a0getSecretKeySpec() getParameter public\u00a0java.lang.String\u00a0getParameter(java.lang.String\u00a0parameter) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OEmbed &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OEmbed&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface OEmbed All Superinterfaces: java.io.Serializable, TwitterResponse public interface OEmbed extends TwitterResponse, java.io.Serializable Since: Twitter4J 3.0.2 Author: Yusuke Yamamoto - yusuke at mac.com See Also: oEmded Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getAuthorName() The name of the author/owner of the resource. java.lang.String getAuthorURL() A URL for the author/owner of the resource. long getCacheAge() The suggested cache lifetime for this resource, in seconds. java.lang.String getHtml() The HTML required to display the resource. java.lang.String getURL() The url of the resource provider. The source URL of the image. java.lang.String getVersion() The oEmbed version number. int getWidth() The width in pixels of the image specified in the url parameter. Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getHtml java.lang.String\u00a0getHtml() The HTML required to display the resource. The HTML should have no padding or margins. Consumers may wish to load the HTML in an off-domain iframe to avoid XSS vulnerabilities. The markup should be valid XHTML 1.0 Basic. Returns: The HTML required to display the resource. getAuthorName java.lang.String\u00a0getAuthorName() The name of the author/owner of the resource. Returns: The name of the author/owner of the resource. getURL java.lang.String\u00a0getURL() The url of the resource provider. The source URL of the image. Consumers should be able to insert this URL into an &lt;img&gt; element. Only HTTP and HTTPS URLs are valid. Returns: The url of the resource provider. getVersion java.lang.String\u00a0getVersion() The oEmbed version number. Returns: The oEmbed version number. getCacheAge long\u00a0getCacheAge() The suggested cache lifetime for this resource, in seconds. Consumers may choose to use this value or not. Returns: The suggested cache lifetime for this resource, in seconds. Consumers may choose to use this value or not. getAuthorURL java.lang.String\u00a0getAuthorURL() A URL for the author/owner of the resource. Returns: A URL for the author/owner of the resource. getWidth int\u00a0getWidth() The width in pixels of the image specified in the url parameter. Returns: The width in pixels of the image specified in the url parameter. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method OEmbedRequest.Align &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OEmbedRequest.Align&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j Enum OEmbedRequest.Align java.lang.Object java.lang.Enum&lt;OEmbedRequest.Align&gt; twitter4j.OEmbedRequest.Align All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;OEmbedRequest.Align&gt; Enclosing class: OEmbedRequest public static enum OEmbedRequest.Align extends java.lang.Enum&lt;OEmbedRequest.Align&gt; Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description CENTER\u00a0 LEFT\u00a0 NONE\u00a0 RIGHT\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static OEmbedRequest.Align valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static OEmbedRequest.Align[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail LEFT public static final\u00a0OEmbedRequest.Align LEFT CENTER public static final\u00a0OEmbedRequest.Align CENTER RIGHT public static final\u00a0OEmbedRequest.Align RIGHT NONE public static final\u00a0OEmbedRequest.Align NONE Method Detail values public static\u00a0OEmbedRequest.Align[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (OEmbedRequest.Align c : OEmbedRequest.Align.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0OEmbedRequest.Align\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method OEmbedRequest &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;OEmbedRequest&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class OEmbedRequest java.lang.Object twitter4j.OEmbedRequest All Implemented Interfaces: java.io.Serializable public final class OEmbedRequest extends java.lang.Object implements java.io.Serializable Since: Twitter4J 3.0.2 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description static class\u00a0 OEmbedRequest.Align\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private OEmbedRequest.Align align\u00a0 private boolean hideMedia\u00a0 private boolean hideThread\u00a0 private java.lang.String lang\u00a0 private int maxWidth\u00a0 private boolean omitScript\u00a0 private java.lang.String[] related\u00a0 private static long serialVersionUID\u00a0 private long statusId\u00a0 private java.lang.String url\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description OEmbedRequest(long\u00a0statusId, java.lang.String\u00a0url)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description OEmbedRequest align(OEmbedRequest.Align\u00a0align)\u00a0 private void appendParameter(java.lang.String\u00a0name, long\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 (package private) HttpParameter[] asHttpParameterArray()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 int hashCode()\u00a0 OEmbedRequest HideMedia(boolean\u00a0hideMedia)\u00a0 OEmbedRequest HideThread(boolean\u00a0hideThread)\u00a0 OEmbedRequest lang(java.lang.String\u00a0lang)\u00a0 OEmbedRequest MaxWidth(int\u00a0maxWidth)\u00a0 OEmbedRequest omitScript(boolean\u00a0omitScript)\u00a0 OEmbedRequest related(java.lang.String[]\u00a0related)\u00a0 void setAlign(OEmbedRequest.Align\u00a0align)\u00a0 void setHideMedia(boolean\u00a0hideMedia)\u00a0 void setHideThread(boolean\u00a0hideThread)\u00a0 void setLang(java.lang.String\u00a0lang)\u00a0 void setMaxWidth(int\u00a0maxWidth)\u00a0 void setOmitScript(boolean\u00a0omitScript)\u00a0 void setRelated(java.lang.String[]\u00a0related)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values statusId private final\u00a0long statusId url private final\u00a0java.lang.String url maxWidth private\u00a0int maxWidth hideMedia private\u00a0boolean hideMedia hideThread private\u00a0boolean hideThread omitScript private\u00a0boolean omitScript align private\u00a0OEmbedRequest.Align align related private\u00a0java.lang.String[] related lang private\u00a0java.lang.String lang Constructor Detail OEmbedRequest public\u00a0OEmbedRequest(long\u00a0statusId, java.lang.String\u00a0url) Method Detail setMaxWidth public\u00a0void\u00a0setMaxWidth(int\u00a0maxWidth) MaxWidth public\u00a0OEmbedRequest\u00a0MaxWidth(int\u00a0maxWidth) setHideMedia public\u00a0void\u00a0setHideMedia(boolean\u00a0hideMedia) HideMedia public\u00a0OEmbedRequest\u00a0HideMedia(boolean\u00a0hideMedia) setHideThread public\u00a0void\u00a0setHideThread(boolean\u00a0hideThread) HideThread public\u00a0OEmbedRequest\u00a0HideThread(boolean\u00a0hideThread) setOmitScript public\u00a0void\u00a0setOmitScript(boolean\u00a0omitScript) omitScript public\u00a0OEmbedRequest\u00a0omitScript(boolean\u00a0omitScript) setAlign public\u00a0void\u00a0setAlign(OEmbedRequest.Align\u00a0align) align public\u00a0OEmbedRequest\u00a0align(OEmbedRequest.Align\u00a0align) setRelated public\u00a0void\u00a0setRelated(java.lang.String[]\u00a0related) related public\u00a0OEmbedRequest\u00a0related(java.lang.String[]\u00a0related) setLang public\u00a0void\u00a0setLang(java.lang.String\u00a0lang) lang public\u00a0OEmbedRequest\u00a0lang(java.lang.String\u00a0lang) asHttpParameterArray HttpParameter[]\u00a0asHttpParameterArray() appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, long\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method PagableResponseList &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;PagableResponseList&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface PagableResponseList&lt;T extends TwitterResponse&gt; All Superinterfaces: java.util.Collection&lt;T&gt;, CursorSupport, java.lang.Iterable&lt;T&gt;, java.util.List&lt;T&gt;, ResponseList&lt;T&gt;, java.io.Serializable, TwitterResponse public interface PagableResponseList&lt;T extends TwitterResponse&gt; extends ResponseList&lt;T&gt;, CursorSupport ResponseList with cursor support. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Fields inherited from interface\u00a0twitter4j.CursorSupport START Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long getNextCursor()\u00a0 long getPreviousCursor()\u00a0 boolean hasNext()\u00a0 boolean hasPrevious()\u00a0 Methods inherited from interface\u00a0twitter4j.ResponseList getRateLimitStatus Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel Methods inherited from interface\u00a0java.util.List add, add, addAll, addAll, clear, contains, containsAll, equals, get, hashCode, indexOf, isEmpty, iterator, lastIndexOf, listIterator, listIterator, remove, remove, removeAll, replaceAll, retainAll, set, size, sort, spliterator, subList, toArray, toArray Methods inherited from interface\u00a0java.util.Collection parallelStream, removeIf, stream Methods inherited from interface\u00a0java.lang.Iterable forEach Method Detail hasPrevious boolean\u00a0hasPrevious() Specified by: hasPrevious\u00a0in interface\u00a0CursorSupport Returns: has previous page getPreviousCursor long\u00a0getPreviousCursor() Specified by: getPreviousCursor\u00a0in interface\u00a0CursorSupport Returns: previous cursor hasNext boolean\u00a0hasNext() Specified by: hasNext\u00a0in interface\u00a0CursorSupport Returns: has next getNextCursor long\u00a0getNextCursor() Specified by: getNextCursor\u00a0in interface\u00a0CursorSupport Returns: next cursor Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Paging &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Paging&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class Paging java.lang.Object twitter4j.Paging All Implemented Interfaces: java.io.Serializable public final class Paging extends java.lang.Object implements java.io.Serializable Controls pagination. It is possible to use the same Paging instance in a multi-threaded context only if the instance is treated immutably. But basically instance of this class is NOT thread safe. A client should instantiate Paging class per thread. Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private int count\u00a0 (package private) static java.lang.String COUNT\u00a0 private long maxId\u00a0 private static HttpParameter[] NULL_PARAMETER_ARRAY\u00a0 private static java.util.List&lt;HttpParameter&gt; NULL_PARAMETER_LIST\u00a0 private int page\u00a0 (package private) static java.lang.String PER_PAGE\u00a0 (package private) static char[] S\u00a0 private static long serialVersionUID\u00a0 private long sinceId\u00a0 (package private) static char[] SMCP\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description Paging()\u00a0 Paging(int\u00a0page)\u00a0 Paging(int\u00a0page, int\u00a0count)\u00a0 Paging(int\u00a0page, int\u00a0count, long\u00a0sinceId)\u00a0 Paging(int\u00a0page, int\u00a0count, long\u00a0sinceId, long\u00a0maxId)\u00a0 Paging(int\u00a0page, long\u00a0sinceId)\u00a0 Paging(long\u00a0sinceId)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description private void addPostParameter(char[]\u00a0supportedParams, char\u00a0paramKey, java.util.List&lt;HttpParameter&gt;\u00a0pagingParams, java.lang.String\u00a0paramName, long\u00a0paramValue)\u00a0 (package private) HttpParameter[] asPostParameterArray()\u00a0 (package private) HttpParameter[] asPostParameterArray(char[]\u00a0supportedParams, java.lang.String\u00a0perPageParamName) Converts the pagination parameters into a List of PostParameter. This method also Validates the preset parameters, and throws IllegalStateException if any unsupported parameter is set. (package private) java.util.List&lt;HttpParameter&gt; asPostParameterList()\u00a0 (package private) java.util.List&lt;HttpParameter&gt; asPostParameterList(char[]\u00a0supportedParams)\u00a0 (package private) java.util.List&lt;HttpParameter&gt; asPostParameterList(char[]\u00a0supportedParams, java.lang.String\u00a0perPageParamName) Converts the pagination parameters into a List of PostParameter. This method also Validates the preset parameters, and throws IllegalStateException if any unsupported parameter is set. Paging count(int\u00a0count)\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 int getCount()\u00a0 long getMaxId()\u00a0 int getPage()\u00a0 long getSinceId()\u00a0 int hashCode()\u00a0 Paging maxId(long\u00a0maxId)\u00a0 void setCount(int\u00a0count)\u00a0 void setMaxId(long\u00a0maxId)\u00a0 void setPage(int\u00a0page)\u00a0 void setSinceId(long\u00a0sinceId)\u00a0 Paging sinceId(long\u00a0sinceId)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values page private\u00a0int page count private\u00a0int count sinceId private\u00a0long sinceId maxId private\u00a0long maxId S static final\u00a0char[] S SMCP static final\u00a0char[] SMCP COUNT static final\u00a0java.lang.String COUNT See Also: Constant Field Values PER_PAGE static final\u00a0java.lang.String PER_PAGE See Also: Constant Field Values NULL_PARAMETER_ARRAY private static final\u00a0HttpParameter[] NULL_PARAMETER_ARRAY NULL_PARAMETER_LIST private static final\u00a0java.util.List&lt;HttpParameter&gt; NULL_PARAMETER_LIST Constructor Detail Paging public\u00a0Paging() Paging public\u00a0Paging(int\u00a0page) Paging public\u00a0Paging(long\u00a0sinceId) Paging public\u00a0Paging(int\u00a0page, int\u00a0count) Paging public\u00a0Paging(int\u00a0page, long\u00a0sinceId) Paging public\u00a0Paging(int\u00a0page, int\u00a0count, long\u00a0sinceId) Paging public\u00a0Paging(int\u00a0page, int\u00a0count, long\u00a0sinceId, long\u00a0maxId) Method Detail asPostParameterList java.util.List&lt;HttpParameter&gt;\u00a0asPostParameterList() asPostParameterArray HttpParameter[]\u00a0asPostParameterArray() asPostParameterList java.util.List&lt;HttpParameter&gt;\u00a0asPostParameterList(char[]\u00a0supportedParams) asPostParameterList java.util.List&lt;HttpParameter&gt;\u00a0asPostParameterList(char[]\u00a0supportedParams, java.lang.String\u00a0perPageParamName) Converts the pagination parameters into a List of PostParameter. This method also Validates the preset parameters, and throws IllegalStateException if any unsupported parameter is set. Parameters: supportedParams - char array representation of supported parameters perPageParamName - name used for per-page parameter. getUserListStatuses() requires &quot;per_page&quot; instead of &quot;count&quot;. Returns: list of PostParameter asPostParameterArray HttpParameter[]\u00a0asPostParameterArray(char[]\u00a0supportedParams, java.lang.String\u00a0perPageParamName) Converts the pagination parameters into a List of PostParameter. This method also Validates the preset parameters, and throws IllegalStateException if any unsupported parameter is set. Parameters: supportedParams - char array representation of supported parameters perPageParamName - name used for per-page parameter. getUserListStatuses() requires &quot;per_page&quot; instead of &quot;count&quot;. Returns: list of PostParameter addPostParameter private\u00a0void\u00a0addPostParameter(char[]\u00a0supportedParams, char\u00a0paramKey, java.util.List&lt;HttpParameter&gt;\u00a0pagingParams, java.lang.String\u00a0paramName, long\u00a0paramValue) getPage public\u00a0int\u00a0getPage() setPage public\u00a0void\u00a0setPage(int\u00a0page) getCount public\u00a0int\u00a0getCount() setCount public\u00a0void\u00a0setCount(int\u00a0count) count public\u00a0Paging\u00a0count(int\u00a0count) getSinceId public\u00a0long\u00a0getSinceId() setSinceId public\u00a0void\u00a0setSinceId(long\u00a0sinceId) sinceId public\u00a0Paging\u00a0sinceId(long\u00a0sinceId) getMaxId public\u00a0long\u00a0getMaxId() setMaxId public\u00a0void\u00a0setMaxId(long\u00a0maxId) maxId public\u00a0Paging\u00a0maxId(long\u00a0maxId) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Place &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Place&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Place All Superinterfaces: java.lang.Comparable&lt;Place&gt;, java.io.Serializable, TwitterResponse public interface Place extends TwitterResponse, java.lang.Comparable&lt;Place&gt;, java.io.Serializable Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description GeoLocation[][] getBoundingBoxCoordinates()\u00a0 java.lang.String getBoundingBoxType()\u00a0 Place[] getContainedWithIn()\u00a0 java.lang.String getCountry()\u00a0 java.lang.String getCountryCode()\u00a0 java.lang.String getFullName()\u00a0 GeoLocation[][] getGeometryCoordinates()\u00a0 java.lang.String getGeometryType()\u00a0 java.lang.String getId()\u00a0 java.lang.String getName()\u00a0 java.lang.String getPlaceType()\u00a0 java.lang.String getStreetAddress()\u00a0 java.lang.String getURL()\u00a0 Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Methods inherited from interface\u00a0java.lang.Comparable compareTo Method Detail getName java.lang.String\u00a0getName() getStreetAddress java.lang.String\u00a0getStreetAddress() getCountryCode java.lang.String\u00a0getCountryCode() getId java.lang.String\u00a0getId() getCountry java.lang.String\u00a0getCountry() getPlaceType java.lang.String\u00a0getPlaceType() getURL java.lang.String\u00a0getURL() getFullName java.lang.String\u00a0getFullName() getBoundingBoxType java.lang.String\u00a0getBoundingBoxType() getBoundingBoxCoordinates GeoLocation[][]\u00a0getBoundingBoxCoordinates() getGeometryType java.lang.String\u00a0getGeometryType() getGeometryCoordinates GeoLocation[][]\u00a0getGeometryCoordinates() getContainedWithIn Place[]\u00a0getContainedWithIn() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method PlacesGeoResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;PlacesGeoResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface PlacesGeoResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface PlacesGeoResources Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description Place getGeoDetails(java.lang.String\u00a0placeId) Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method. ResponseList&lt;Place&gt; getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) Locates places near the given coordinates which are similar in name. ResponseList&lt;Place&gt; reverseGeoCode(GeoQuery\u00a0query) Search for places (cities and neighborhoods) that can be attached to a statuses/update. ResponseList&lt;Place&gt; searchPlaces(GeoQuery\u00a0query) Search for places that can be attached to a statuses/update. Method Detail getGeoDetails Place\u00a0getGeoDetails(java.lang.String\u00a0placeId) throws TwitterException Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method. This method calls https://api.twitter.com/1.1/geo/id/:id.json Parameters: placeId - The ID of the location to query about. Returns: details of the specified place Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET geo/id/:place_id Twitter Developers reverseGeoCode ResponseList&lt;Place&gt;\u00a0reverseGeoCode(GeoQuery\u00a0query) throws TwitterException Search for places (cities and neighborhoods) that can be attached to a statuses/update. Given a latitude and a longitude, return a list of all the valid places that can be used as a place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location up with a call to statuses/update. There are multiple granularities of places that can be returned -- &quot;neighborhoods&quot;, &quot;cities&quot;, etc. At this time, only United States data is available through this method. This API call is meant to be an informative call and will deliver generalized results about geography. This method calls https://api.twitter.com/1.1/geo/reverse_geocode.json Parameters: query - search query Returns: places (cities and neighborhoods) that can be attached to a statuses/update Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET geo/reverse_geocode Twitter Developers searchPlaces ResponseList&lt;Place&gt;\u00a0searchPlaces(GeoQuery\u00a0query) throws TwitterException Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location with a call to statuses/update. This is the recommended method to use find places that can be attached to statuses/update. Unlike geo/reverse_geocode which provides raw data access, this endpoint can potentially re-order places with regards to the user who is authenticated. This approach is also preferred for interactive place matching with the user. This method calls https://api.twitter.com/1.1/geo/search.json Parameters: query - search query Returns: places (cities and neighborhoods) that can be attached to a statuses/update Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.7 See Also: GET geo/search Twitter Developers getSimilarPlaces ResponseList&lt;Place&gt;\u00a0getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) throws TwitterException Locates places near the given coordinates which are similar in name. Conceptually you would use this method to get a list of known places to choose from first. Then, if the desired place doesn't exist, make a request to post/geo/place to create a new one. The token contained in the response is the token needed to be able to create a new place. This method calls https://api.twitter.com/1.1/geo/similar_places.json Parameters: location - The latitude and longitude to search around. name - The name a place is known as. containedWithin - optional: the place_id which you would like to restrict the search results to. Setting this value means only places within the given place_id will be found. streetAddress - optional: This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about Place Attributes. Returns: places (cities and neighborhoods) that can be attached to a statuses/update Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.7 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method PlacesGeoResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;PlacesGeoResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface PlacesGeoResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface PlacesGeoResourcesAsync Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getGeoDetails(java.lang.String\u00a0id) Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method. void getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) Locates places near the given coordinates which are similar in name. void reverseGeoCode(GeoQuery\u00a0query) Search for places (cities and neighborhoods) that can be attached to a statuses/update. void searchPlaces(GeoQuery\u00a0query) Search for places that can be attached to a statuses/update. Method Detail getGeoDetails void\u00a0getGeoDetails(java.lang.String\u00a0id) Find out more details of a place that was returned from the reverseGeoCode(twitter4j.GeoQuery) method. This method calls https://api.twitter.com/1.1/geo/id/:id.json Parameters: id - The ID of the location to query about. Since: Twitter4J 2.1.1 See Also: GET geo/id/:place_id Twitter Developers getSimilarPlaces void\u00a0getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) Locates places near the given coordinates which are similar in name. Conceptually you would use this method to get a list of known places to choose from first. Then, if the desired place doesn't exist, make a request to post/geo/place to create a new one. The token contained in the response is the token needed to be able to create a new place. This method calls https://api.twitter.com/1.1/geo/similar_places.json Parameters: location - The latitude and longitude to search around. name - The name a place is known as. containedWithin - optional: the place_id which you would like to restrict the search results to. Setting this value means only places within the given place_id will be found. streetAddress - optional: This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about Place Attributes. Since: Twitter4J 2.1.7 reverseGeoCode void\u00a0reverseGeoCode(GeoQuery\u00a0query) Search for places (cities and neighborhoods) that can be attached to a statuses/update. Given a latitude and a longitude, return a list of all the valid places that can be used as a place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location up with a call to statuses/update. There are multiple granularities of places that can be returned -- &quot;neighborhoods&quot;, &quot;cities&quot;, etc. At this time, only United States data is available through this method. This API call is meant to be an informative call and will deliver generalized results about geography. This method calls https://api.twitter.com/1.1/geo/reverse_geocode.json Parameters: query - search query Since: Twitter4J 2.1.1 See Also: GET geo/reverse_geocode Twitter Developers searchPlaces void\u00a0searchPlaces(GeoQuery\u00a0query) Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location with a call to statuses/update. This is the recommended method to use find places that can be attached to statuses/update. Unlike geo/reverse_geocode which provides raw data access, this endpoint can potentially re-order places with regards to the user who is authenticated. This approach is also preferred for interactive place matching with the user. This method calls https://api.twitter.com/1.1/geo/search.json Parameters: query - search query Since: Twitter4J 2.1.7 See Also: GET geo/search Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method PropertyConfiguration &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;PropertyConfiguration&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Class PropertyConfiguration java.lang.Object twitter4j.conf.ConfigurationBase twitter4j.conf.PropertyConfiguration All Implemented Interfaces: java.io.Serializable, AuthorizationConfiguration, Configuration public final class PropertyConfiguration extends ConfigurationBase implements java.io.Serializable Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Nested Class Summary Nested classes/interfaces inherited from class\u00a0twitter4j.conf.ConfigurationBase ConfigurationBase.MyHttpClientConfiguration Field Summary Fields\u00a0 Modifier and Type Field and Description private static java.lang.String APPLICATION_ONLY_AUTH_ENABLED\u00a0 private static java.lang.String ASYNC_DAEMON_ENABLED\u00a0 private static java.lang.String ASYNC_DISPATCHER_IMPL\u00a0 private static java.lang.String ASYNC_NUM_THREADS\u00a0 private static java.lang.String CONTRIBUTING_TO\u00a0 private static java.lang.String DEBUG\u00a0 private static java.lang.String HTTP_CONNECTION_TIMEOUT\u00a0 private static java.lang.String HTTP_GZIP\u00a0 private static java.lang.String HTTP_PRETTY_DEBUG\u00a0 private static java.lang.String HTTP_PROXY_HOST\u00a0 private static java.lang.String HTTP_PROXY_HOST_FALLBACK\u00a0 private static java.lang.String HTTP_PROXY_PASSWORD\u00a0 private static java.lang.String HTTP_PROXY_PORT\u00a0 private static java.lang.String HTTP_PROXY_PORT_FALLBACK\u00a0 private static java.lang.String HTTP_PROXY_USER\u00a0 private static java.lang.String HTTP_READ_TIMEOUT\u00a0 private static java.lang.String HTTP_RETRY_COUNT\u00a0 private static java.lang.String HTTP_RETRY_INTERVAL_SECS\u00a0 private static java.lang.String HTTP_STREAMING_READ_TIMEOUT\u00a0 private static java.lang.String INCLUDE_ENTITIES\u00a0 private static java.lang.String INCLUDE_MY_RETWEET\u00a0 private static java.lang.String JSON_STORE_ENABLED\u00a0 private static java.lang.String LOGGER_FACTORY\u00a0 private static java.lang.String MBEAN_ENABLED\u00a0 private static java.lang.String MEDIA_PROVIDER\u00a0 private static java.lang.String MEDIA_PROVIDER_API_KEY\u00a0 private static java.lang.String MEDIA_PROVIDER_PARAMETERS\u00a0 private static java.lang.String OAUTH_ACCESS_TOKEN\u00a0 private static java.lang.String OAUTH_ACCESS_TOKEN_SECRET\u00a0 private static java.lang.String OAUTH_ACCESS_TOKEN_URL\u00a0 private static java.lang.String OAUTH_AUTHENTICATION_URL\u00a0 private static java.lang.String OAUTH_AUTHORIZATION_URL\u00a0 private static java.lang.String OAUTH_CONSUMER_KEY\u00a0 private static java.lang.String OAUTH_CONSUMER_SECRET\u00a0 private static java.lang.String OAUTH_REQUEST_TOKEN_URL\u00a0 private static java.lang.String OAUTH2_ACCESS_TOKEN\u00a0 private static java.lang.String OAUTH2_INVALIDATE_TOKEN_URL\u00a0 private static java.lang.String OAUTH2_SCOPE\u00a0 private static java.lang.String OAUTH2_TOKEN_TYPE\u00a0 private static java.lang.String OAUTH2_TOKEN_URL\u00a0 private java.lang.String OAuth2Scope\u00a0 private static java.lang.String PASSWORD\u00a0 private static java.lang.String REST_BASE_URL\u00a0 private static long serialVersionUID\u00a0 private static java.lang.String SITE_STREAM_BASE_URL\u00a0 private static java.lang.String STREAM_BASE_URL\u00a0 private static java.lang.String STREAM_STALL_WARNINGS_ENABLED\u00a0 private static java.lang.String STREAM_USER_REPLIES_ALL\u00a0 private static java.lang.String STREAM_USER_WITH_FOLLOWINGS\u00a0 private static java.lang.String USER\u00a0 private static java.lang.String USER_STREAM_BASE_URL\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description PropertyConfiguration() Creates a root PropertyConfiguration. PropertyConfiguration(java.io.InputStream\u00a0is)\u00a0 PropertyConfiguration(java.util.Properties\u00a0props)\u00a0 PropertyConfiguration(java.util.Properties\u00a0props, java.lang.String\u00a0treePath)\u00a0 PropertyConfiguration(java.lang.String\u00a0treePath)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) boolean getBoolean(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name)\u00a0 (package private) int getIntProperty(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name)\u00a0 (package private) long getLongProperty(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name)\u00a0 (package private) java.lang.String getString(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name)\u00a0 private boolean loadProperties(java.util.Properties\u00a0props, java.io.InputStream\u00a0is)\u00a0 private boolean loadProperties(java.util.Properties\u00a0props, java.lang.String\u00a0path)\u00a0 private void normalize(java.util.Properties\u00a0props)\u00a0 private boolean notNull(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name)\u00a0 protected java.lang.Object readResolve()\u00a0 private void setFieldsWithPrefix(java.util.Properties\u00a0props, java.lang.String\u00a0prefix)\u00a0 private void setFieldsWithTreePath(java.util.Properties\u00a0props, java.lang.String\u00a0treePath) passing &quot;/foo/bar&quot; as treePath will result: 1. Methods inherited from class\u00a0twitter4j.conf.ConfigurationBase cacheInstance, dumpConfiguration, equals, fixURL, getAsyncNumThreads, getContributingTo, getDispatcherImpl, getHttpClientConfiguration, getHttpStreamingReadTimeout, getLoggerFactory, getMediaProvider, getMediaProviderAPIKey, getMediaProviderParameters, getOAuth2AccessToken, getOAuth2InvalidateTokenURL, getOAuth2Scope, getOAuth2TokenType, getOAuth2TokenURL, getOAuthAccessToken, getOAuthAccessTokenSecret, getOAuthAccessTokenURL, getOAuthAuthenticationURL, getOAuthAuthorizationURL, getOAuthConsumerKey, getOAuthConsumerSecret, getOAuthRequestTokenURL, getPassword, getRestBaseURL, getSiteStreamBaseURL, getStreamBaseURL, getUploadBaseURL, getUser, getUserStreamBaseURL, hashCode, isApplicationOnlyAuthEnabled, isDaemonEnabled, isDebugEnabled, isIncludeEntitiesEnabled, isIncludeMyRetweetEnabled, isJSONStoreEnabled, isMBeanEnabled, isStallWarningsEnabled, isTrimUserEnabled, isUserStreamRepliesAllEnabled, isUserStreamWithFollowingsEnabled, setApplicationOnlyAuthEnabled, setAsyncNumThreads, setContributingTo, setDaemonEnabled, setDebug, setDispatcherImpl, setGZIPEnabled, setHttpConnectionTimeout, setHttpProxyHost, setHttpProxyPassword, setHttpProxyPort, setHttpProxyUser, setHttpReadTimeout, setHttpRetryCount, setHttpRetryIntervalSeconds, setHttpStreamingReadTimeout, setIncludeEntitiesEnabled, setIncludeMyRetweetEnabled, setJSONStoreEnabled, setLoggerFactory, setMBeanEnabled, setMediaProvider, setMediaProviderAPIKey, setMediaProviderParameters, setOAuth2AccessToken, setOAuth2InvalidateTokenURL, setOAuth2Scope, setOAuth2TokenType, setOAuth2TokenURL, setOAuthAccessToken, setOAuthAccessTokenSecret, setOAuthAccessTokenURL, setOAuthAuthenticationURL, setOAuthAuthorizationURL, setOAuthConsumerKey, setOAuthConsumerSecret, setOAuthRequestTokenURL, setPassword, setPrettyDebugEnabled, setRestBaseURL, setSiteStreamBaseURL, setStallWarningsEnabled, setStreamBaseURL, setTrimUserEnabled, setUploadBaseURL, setUser, setUserStreamBaseURL, setUserStreamRepliesAllEnabled, setUserStreamWithFollowingsEnabled, toString Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail DEBUG private static final\u00a0java.lang.String DEBUG See Also: Constant Field Values USER private static final\u00a0java.lang.String USER See Also: Constant Field Values PASSWORD private static final\u00a0java.lang.String PASSWORD See Also: Constant Field Values HTTP_PRETTY_DEBUG private static final\u00a0java.lang.String HTTP_PRETTY_DEBUG See Also: Constant Field Values HTTP_GZIP private static final\u00a0java.lang.String HTTP_GZIP See Also: Constant Field Values HTTP_PROXY_HOST private static final\u00a0java.lang.String HTTP_PROXY_HOST See Also: Constant Field Values HTTP_PROXY_HOST_FALLBACK private static final\u00a0java.lang.String HTTP_PROXY_HOST_FALLBACK See Also: Constant Field Values HTTP_PROXY_USER private static final\u00a0java.lang.String HTTP_PROXY_USER See Also: Constant Field Values HTTP_PROXY_PASSWORD private static final\u00a0java.lang.String HTTP_PROXY_PASSWORD See Also: Constant Field Values HTTP_PROXY_PORT private static final\u00a0java.lang.String HTTP_PROXY_PORT See Also: Constant Field Values HTTP_PROXY_PORT_FALLBACK private static final\u00a0java.lang.String HTTP_PROXY_PORT_FALLBACK See Also: Constant Field Values HTTP_CONNECTION_TIMEOUT private static final\u00a0java.lang.String HTTP_CONNECTION_TIMEOUT See Also: Constant Field Values HTTP_READ_TIMEOUT private static final\u00a0java.lang.String HTTP_READ_TIMEOUT See Also: Constant Field Values HTTP_STREAMING_READ_TIMEOUT private static final\u00a0java.lang.String HTTP_STREAMING_READ_TIMEOUT See Also: Constant Field Values HTTP_RETRY_COUNT private static final\u00a0java.lang.String HTTP_RETRY_COUNT See Also: Constant Field Values HTTP_RETRY_INTERVAL_SECS private static final\u00a0java.lang.String HTTP_RETRY_INTERVAL_SECS See Also: Constant Field Values OAUTH_CONSUMER_KEY private static final\u00a0java.lang.String OAUTH_CONSUMER_KEY See Also: Constant Field Values OAUTH_CONSUMER_SECRET private static final\u00a0java.lang.String OAUTH_CONSUMER_SECRET See Also: Constant Field Values OAUTH_ACCESS_TOKEN private static final\u00a0java.lang.String OAUTH_ACCESS_TOKEN See Also: Constant Field Values OAUTH_ACCESS_TOKEN_SECRET private static final\u00a0java.lang.String OAUTH_ACCESS_TOKEN_SECRET See Also: Constant Field Values OAUTH2_TOKEN_TYPE private static final\u00a0java.lang.String OAUTH2_TOKEN_TYPE See Also: Constant Field Values OAUTH2_ACCESS_TOKEN private static final\u00a0java.lang.String OAUTH2_ACCESS_TOKEN See Also: Constant Field Values OAUTH2_SCOPE private static final\u00a0java.lang.String OAUTH2_SCOPE See Also: Constant Field Values OAUTH_REQUEST_TOKEN_URL private static final\u00a0java.lang.String OAUTH_REQUEST_TOKEN_URL See Also: Constant Field Values OAUTH_AUTHORIZATION_URL private static final\u00a0java.lang.String OAUTH_AUTHORIZATION_URL See Also: Constant Field Values OAUTH_ACCESS_TOKEN_URL private static final\u00a0java.lang.String OAUTH_ACCESS_TOKEN_URL See Also: Constant Field Values OAUTH_AUTHENTICATION_URL private static final\u00a0java.lang.String OAUTH_AUTHENTICATION_URL See Also: Constant Field Values OAUTH2_TOKEN_URL private static final\u00a0java.lang.String OAUTH2_TOKEN_URL See Also: Constant Field Values OAUTH2_INVALIDATE_TOKEN_URL private static final\u00a0java.lang.String OAUTH2_INVALIDATE_TOKEN_URL See Also: Constant Field Values REST_BASE_URL private static final\u00a0java.lang.String REST_BASE_URL See Also: Constant Field Values STREAM_BASE_URL private static final\u00a0java.lang.String STREAM_BASE_URL See Also: Constant Field Values USER_STREAM_BASE_URL private static final\u00a0java.lang.String USER_STREAM_BASE_URL See Also: Constant Field Values SITE_STREAM_BASE_URL private static final\u00a0java.lang.String SITE_STREAM_BASE_URL See Also: Constant Field Values ASYNC_NUM_THREADS private static final\u00a0java.lang.String ASYNC_NUM_THREADS See Also: Constant Field Values ASYNC_DAEMON_ENABLED private static final\u00a0java.lang.String ASYNC_DAEMON_ENABLED See Also: Constant Field Values CONTRIBUTING_TO private static final\u00a0java.lang.String CONTRIBUTING_TO See Also: Constant Field Values ASYNC_DISPATCHER_IMPL private static final\u00a0java.lang.String ASYNC_DISPATCHER_IMPL See Also: Constant Field Values INCLUDE_MY_RETWEET private static final\u00a0java.lang.String INCLUDE_MY_RETWEET See Also: Constant Field Values INCLUDE_ENTITIES private static final\u00a0java.lang.String INCLUDE_ENTITIES See Also: Constant Field Values LOGGER_FACTORY private static final\u00a0java.lang.String LOGGER_FACTORY See Also: Constant Field Values JSON_STORE_ENABLED private static final\u00a0java.lang.String JSON_STORE_ENABLED See Also: Constant Field Values MBEAN_ENABLED private static final\u00a0java.lang.String MBEAN_ENABLED See Also: Constant Field Values STREAM_USER_REPLIES_ALL private static final\u00a0java.lang.String STREAM_USER_REPLIES_ALL See Also: Constant Field Values STREAM_USER_WITH_FOLLOWINGS private static final\u00a0java.lang.String STREAM_USER_WITH_FOLLOWINGS See Also: Constant Field Values STREAM_STALL_WARNINGS_ENABLED private static final\u00a0java.lang.String STREAM_STALL_WARNINGS_ENABLED See Also: Constant Field Values APPLICATION_ONLY_AUTH_ENABLED private static final\u00a0java.lang.String APPLICATION_ONLY_AUTH_ENABLED See Also: Constant Field Values MEDIA_PROVIDER private static final\u00a0java.lang.String MEDIA_PROVIDER See Also: Constant Field Values MEDIA_PROVIDER_API_KEY private static final\u00a0java.lang.String MEDIA_PROVIDER_API_KEY See Also: Constant Field Values MEDIA_PROVIDER_PARAMETERS private static final\u00a0java.lang.String MEDIA_PROVIDER_PARAMETERS See Also: Constant Field Values serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values OAuth2Scope private\u00a0java.lang.String OAuth2Scope Constructor Detail PropertyConfiguration public\u00a0PropertyConfiguration(java.io.InputStream\u00a0is) PropertyConfiguration public\u00a0PropertyConfiguration(java.util.Properties\u00a0props) PropertyConfiguration public\u00a0PropertyConfiguration(java.util.Properties\u00a0props, java.lang.String\u00a0treePath) PropertyConfiguration PropertyConfiguration(java.lang.String\u00a0treePath) PropertyConfiguration PropertyConfiguration() Creates a root PropertyConfiguration. This constructor is equivalent to new PropertyConfiguration(&quot;/&quot;). Method Detail notNull private\u00a0boolean\u00a0notNull(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name) loadProperties private\u00a0boolean\u00a0loadProperties(java.util.Properties\u00a0props, java.lang.String\u00a0path) loadProperties private\u00a0boolean\u00a0loadProperties(java.util.Properties\u00a0props, java.io.InputStream\u00a0is) normalize private\u00a0void\u00a0normalize(java.util.Properties\u00a0props) setFieldsWithTreePath private\u00a0void\u00a0setFieldsWithTreePath(java.util.Properties\u00a0props, java.lang.String\u00a0treePath) passing &quot;/foo/bar&quot; as treePath will result: 1. load [twitter4j.]restBaseURL 2. override the value with foo.[twitter4j.]restBaseURL 3. override the value with foo.bar.[twitter4j.]restBaseURL Parameters: props - properties to be loaded treePath - the path setFieldsWithPrefix private\u00a0void\u00a0setFieldsWithPrefix(java.util.Properties\u00a0props, java.lang.String\u00a0prefix) getBoolean boolean\u00a0getBoolean(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name) getIntProperty int\u00a0getIntProperty(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name) getLongProperty long\u00a0getLongProperty(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name) getString java.lang.String\u00a0getString(java.util.Properties\u00a0props, java.lang.String\u00a0prefix, java.lang.String\u00a0name) readResolve protected\u00a0java.lang.Object\u00a0readResolve() throws java.io.ObjectStreamException Overrides: readResolve\u00a0in class\u00a0ConfigurationBase Throws: java.io.ObjectStreamException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method PropertyConfigurationFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;PropertyConfigurationFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.conf Class PropertyConfigurationFactory java.lang.Object twitter4j.conf.PropertyConfigurationFactory All Implemented Interfaces: ConfigurationFactory class PropertyConfigurationFactory extends java.lang.Object implements ConfigurationFactory ConfigurationFactory implementation for PropertyConfiguration. Currently getInstance calls concrete constructor each time. No caching at all. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static PropertyConfiguration ROOT_CONFIGURATION\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description PropertyConfigurationFactory()\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void dispose() clean up resources acquired by this factory. Configuration getInstance() returns the root configuration Configuration getInstance(java.lang.String\u00a0configTreePath) returns the configuration specified by the path Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail ROOT_CONFIGURATION private static final\u00a0PropertyConfiguration ROOT_CONFIGURATION Constructor Detail PropertyConfigurationFactory PropertyConfigurationFactory() Method Detail getInstance public\u00a0Configuration\u00a0getInstance() Description copied from interface:\u00a0ConfigurationFactory returns the root configuration Specified by: getInstance\u00a0in interface\u00a0ConfigurationFactory Returns: root configuration getInstance public\u00a0Configuration\u00a0getInstance(java.lang.String\u00a0configTreePath) Description copied from interface:\u00a0ConfigurationFactory returns the configuration specified by the path Specified by: getInstance\u00a0in interface\u00a0ConfigurationFactory Parameters: configTreePath - the path Returns: the configuratoin dispose public\u00a0void\u00a0dispose() Description copied from interface:\u00a0ConfigurationFactory clean up resources acquired by this factory. Specified by: dispose\u00a0in interface\u00a0ConfigurationFactory Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Query.ResultType &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Query.ResultType&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j Enum Query.ResultType java.lang.Object java.lang.Enum&lt;Query.ResultType&gt; twitter4j.Query.ResultType All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;Query.ResultType&gt; Enclosing class: Query public static enum Query.ResultType extends java.lang.Enum&lt;Query.ResultType&gt; Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description mixed\u00a0 popular\u00a0 recent\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static Query.ResultType valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static Query.ResultType[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail popular public static final\u00a0Query.ResultType popular mixed public static final\u00a0Query.ResultType mixed recent public static final\u00a0Query.ResultType recent Method Detail values public static\u00a0Query.ResultType[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (Query.ResultType c : Query.ResultType.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0Query.ResultType\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Query.Unit &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Query.Unit&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j Enum Query.Unit java.lang.Object java.lang.Enum&lt;Query.Unit&gt; twitter4j.Query.Unit All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;Query.Unit&gt; Enclosing class: Query public static enum Query.Unit extends java.lang.Enum&lt;Query.Unit&gt; Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description km\u00a0 mi\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static Query.Unit valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static Query.Unit[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail mi public static final\u00a0Query.Unit mi km public static final\u00a0Query.Unit km Method Detail values public static\u00a0Query.Unit[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (Query.Unit c : Query.Unit.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0Query.Unit\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Query &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Query&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:9,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:42,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;],32:[&quot;t6&quot;,&quot;Deprecated Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class Query java.lang.Object twitter4j.Query All Implemented Interfaces: java.io.Serializable public final class Query extends java.lang.Object implements java.io.Serializable A data class represents search query. An instance of this class is NOT thread safe. Instances can be shared across threads, but should not be mutated while a search is ongoing. Author: Yusuke Yamamoto - yusuke at mac.com See Also: GET search Twitter Developers, Twitter API / Search Operators, Serialized Form Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description static class\u00a0 Query.ResultType\u00a0 static class\u00a0 Query.Unit\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private int count\u00a0 private java.lang.String geocode\u00a0 static Query.Unit KILOMETERS\u00a0 private java.lang.String lang\u00a0 private java.lang.String locale\u00a0 private long maxId\u00a0 static Query.Unit MILES\u00a0 static Query.ResultType MIXED mixed: Include both popular and real time results in the response. private java.lang.String nextPageQuery\u00a0 static Query.ResultType POPULAR popular: return only the most popular results in the response. private java.lang.String query\u00a0 static Query.ResultType RECENT recent: return only the most recent results in the response private Query.ResultType resultType\u00a0 private static long serialVersionUID\u00a0 private java.lang.String since\u00a0 private long sinceId\u00a0 private java.lang.String until\u00a0 private static HttpParameter WITH_TWITTER_USER_ID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description Query()\u00a0 Query(java.lang.String\u00a0query)\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0Deprecated Methods\u00a0 Modifier and Type Method and Description private void appendParameter(java.lang.String\u00a0name, long\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 (package private) HttpParameter[] asHttpParameterArray()\u00a0 Query count(int\u00a0count) sets the number of tweets to return per page, up to a max of 100 (package private) static Query createWithNextPageQuery(java.lang.String\u00a0nextPageQuery)\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 Query geoCode(GeoLocation\u00a0location, double\u00a0radius, java.lang.String\u00a0unit) returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile int getCount() Returns the number of tweets to return per page, up to a max of 100 java.lang.String getGeocode() Returns the specified geocode java.lang.String getLang() Returns the lang java.lang.String getLocale() Returns the language of the query you are sending (only ja is currently effective). long getMaxId() Returns tweets with status ids less than the given id. java.lang.String getQuery() Returns the specified query Query.ResultType getResultType() Returns resultType java.lang.String getSince() Returns tweets with since the given date. long getSinceId() returns sinceId java.lang.String getUntil() Returns until int hashCode()\u00a0 Query lang(java.lang.String\u00a0lang) restricts tweets to the given language, given by an ISO 639-1 code Query locale(java.lang.String\u00a0locale) Specify the language of the query you are sending (only ja is currently effective). Query maxId(long\u00a0maxId) If specified, returns tweets with status ids less than the given id. (package private) java.lang.String nextPage()\u00a0 Query query(java.lang.String\u00a0query) Sets the query string Query resultType(Query.ResultType\u00a0resultType) If specified, returns tweets included popular or real time or both in the response void setCount(int\u00a0count) sets the number of tweets to return per page, up to a max of 100 void setGeoCode(GeoLocation\u00a0location, double\u00a0radius, Query.Unit\u00a0unit) returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile void setGeoCode(GeoLocation\u00a0location, double\u00a0radius, java.lang.String\u00a0unit) Deprecated.\u00a0 use setGeoCode(GeoLocation, double, twitter4j.Query.Unit) instead void setLang(java.lang.String\u00a0lang) restricts tweets to the given language, given by an ISO 639-1 code void setLocale(java.lang.String\u00a0locale) Specify the language of the query you are sending (only ja is currently effective). void setMaxId(long\u00a0maxId) If specified, returns tweets with status ids less than the given id. void setQuery(java.lang.String\u00a0query) Sets the query string void setResultType(Query.ResultType\u00a0resultType) Default value is Query.MIXED if parameter not specified void setSince(java.lang.String\u00a0since) If specified, returns tweets with since the given date. void setSinceId(long\u00a0sinceId) returns tweets with status ids greater than the given id. void setUntil(java.lang.String\u00a0until) If specified, returns tweets with generated before the given date. Query since(java.lang.String\u00a0since) If specified, returns tweets with since the given date. Query sinceId(long\u00a0sinceId) returns tweets with status ids greater than the given id. java.lang.String toString()\u00a0 Query until(java.lang.String\u00a0until) If specified, returns tweets with generated before the given date. Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values query private\u00a0java.lang.String query lang private\u00a0java.lang.String lang locale private\u00a0java.lang.String locale maxId private\u00a0long maxId count private\u00a0int count since private\u00a0java.lang.String since sinceId private\u00a0long sinceId geocode private\u00a0java.lang.String geocode until private\u00a0java.lang.String until resultType private\u00a0Query.ResultType resultType nextPageQuery private\u00a0java.lang.String nextPageQuery MILES public static final\u00a0Query.Unit MILES KILOMETERS public static final\u00a0Query.Unit KILOMETERS MIXED public static final\u00a0Query.ResultType MIXED mixed: Include both popular and real time results in the response. POPULAR public static final\u00a0Query.ResultType POPULAR popular: return only the most popular results in the response. RECENT public static final\u00a0Query.ResultType RECENT recent: return only the most recent results in the response WITH_TWITTER_USER_ID private static final\u00a0HttpParameter WITH_TWITTER_USER_ID Constructor Detail Query public\u00a0Query() Query public\u00a0Query(java.lang.String\u00a0query) Method Detail createWithNextPageQuery static\u00a0Query\u00a0createWithNextPageQuery(java.lang.String\u00a0nextPageQuery) getQuery public\u00a0java.lang.String\u00a0getQuery() Returns the specified query Returns: query setQuery public\u00a0void\u00a0setQuery(java.lang.String\u00a0query) Sets the query string Parameters: query - the query string See Also: GET search Twitter Developers, Twitter API / Search Operators query public\u00a0Query\u00a0query(java.lang.String\u00a0query) Sets the query string Parameters: query - the query string Returns: the instance Since: Twitter4J 2.1.0 See Also: GET search Twitter Developers, Twitter API / Search Operators getLang public\u00a0java.lang.String\u00a0getLang() Returns the lang Returns: lang setLang public\u00a0void\u00a0setLang(java.lang.String\u00a0lang) restricts tweets to the given language, given by an ISO 639-1 code Parameters: lang - an ISO 639-1 code lang public\u00a0Query\u00a0lang(java.lang.String\u00a0lang) restricts tweets to the given language, given by an ISO 639-1 code Parameters: lang - an ISO 639-1 code Returns: the instance Since: Twitter4J 2.1.0 getLocale public\u00a0java.lang.String\u00a0getLocale() Returns the language of the query you are sending (only ja is currently effective). This is intended for language-specific clients and the default should work in the majority of cases. Returns: locale Since: Twitter4J 2.1.1 setLocale public\u00a0void\u00a0setLocale(java.lang.String\u00a0locale) Specify the language of the query you are sending (only ja is currently effective). This is intended for language-specific clients and the default should work in the majority of cases. Parameters: locale - the locale Since: Twitter4J 2.1.1 locale public\u00a0Query\u00a0locale(java.lang.String\u00a0locale) Specify the language of the query you are sending (only ja is currently effective). This is intended for language-specific clients and the default should work in the majority of cases. Parameters: locale - the locale Returns: the instance Since: Twitter4J 2.1.1 getMaxId public\u00a0long\u00a0getMaxId() Returns tweets with status ids less than the given id. Returns: maxId Since: Twitter4J 2.1.1 setMaxId public\u00a0void\u00a0setMaxId(long\u00a0maxId) If specified, returns tweets with status ids less than the given id. Parameters: maxId - maxId Since: Twitter4J 2.1.1 maxId public\u00a0Query\u00a0maxId(long\u00a0maxId) If specified, returns tweets with status ids less than the given id. Parameters: maxId - maxId Returns: this instance Since: Twitter4J 2.1.1 getCount public\u00a0int\u00a0getCount() Returns the number of tweets to return per page, up to a max of 100 Returns: count setCount public\u00a0void\u00a0setCount(int\u00a0count) sets the number of tweets to return per page, up to a max of 100 Parameters: count - the number of tweets to return per page count public\u00a0Query\u00a0count(int\u00a0count) sets the number of tweets to return per page, up to a max of 100 Parameters: count - the number of tweets to return per page Returns: the instance Since: Twitter4J 2.1.0 getSince public\u00a0java.lang.String\u00a0getSince() Returns tweets with since the given date. Date should be formatted as YYYY-MM-DD Returns: since Since: Twitter4J 2.1.1 setSince public\u00a0void\u00a0setSince(java.lang.String\u00a0since) If specified, returns tweets with since the given date. Date should be formatted as YYYY-MM-DD Parameters: since - since Since: Twitter4J 2.1.1 since public\u00a0Query\u00a0since(java.lang.String\u00a0since) If specified, returns tweets with since the given date. Date should be formatted as YYYY-MM-DD Parameters: since - since Returns: since Since: Twitter4J 2.1.1 getSinceId public\u00a0long\u00a0getSinceId() returns sinceId Returns: sinceId setSinceId public\u00a0void\u00a0setSinceId(long\u00a0sinceId) returns tweets with status ids greater than the given id. Parameters: sinceId - returns tweets with status ids greater than the given id sinceId public\u00a0Query\u00a0sinceId(long\u00a0sinceId) returns tweets with status ids greater than the given id. Parameters: sinceId - returns tweets with status ids greater than the given id Returns: the instance Since: Twitter4J 2.1.0 getGeocode public\u00a0java.lang.String\u00a0getGeocode() Returns the specified geocode Returns: geocode setGeoCode public\u00a0void\u00a0setGeoCode(GeoLocation\u00a0location, double\u00a0radius, Query.Unit\u00a0unit) returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile Parameters: location - geo location radius - radius unit - Query.MILES or Query.KILOMETERS Since: Twitter4J 4.0.1 setGeoCode public\u00a0void\u00a0setGeoCode(GeoLocation\u00a0location, double\u00a0radius, java.lang.String\u00a0unit) Deprecated.\u00a0use setGeoCode(GeoLocation, double, twitter4j.Query.Unit) instead returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile Parameters: location - geo location radius - radius unit - Query.MILES or Query.KILOMETERS geoCode public\u00a0Query\u00a0geoCode(GeoLocation\u00a0location, double\u00a0radius, java.lang.String\u00a0unit) returns tweets by users located within a given radius of the given latitude/longitude, where the user's location is taken from their Twitter profile Parameters: location - geo location radius - radius unit - Query.MILES or Query.KILOMETERS Returns: the instance Since: Twitter4J 2.1.0 getUntil public\u00a0java.lang.String\u00a0getUntil() Returns until Returns: until Since: Twitter4J 2.1.1 setUntil public\u00a0void\u00a0setUntil(java.lang.String\u00a0until) If specified, returns tweets with generated before the given date. Date should be formatted as YYYY-MM-DD Parameters: until - until Since: Twitter4J 2.1.1 until public\u00a0Query\u00a0until(java.lang.String\u00a0until) If specified, returns tweets with generated before the given date. Date should be formatted as YYYY-MM-DD Parameters: until - until Returns: the instance Since: Twitter4J 2.1.1 getResultType public\u00a0Query.ResultType\u00a0getResultType() Returns resultType Returns: the resultType Since: Twitter4J 2.1.3 setResultType public\u00a0void\u00a0setResultType(Query.ResultType\u00a0resultType) Default value is Query.MIXED if parameter not specified Parameters: resultType - Query.MIXED or Query.POPULAR or Query.RECENT Since: Twitter4J 2.1.3 resultType public\u00a0Query\u00a0resultType(Query.ResultType\u00a0resultType) If specified, returns tweets included popular or real time or both in the response Parameters: resultType - resultType Returns: the instance Since: Twitter4J 2.1.3 asHttpParameterArray HttpParameter[]\u00a0asHttpParameterArray() appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, long\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) nextPage java.lang.String\u00a0nextPage() equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method QueryResult &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;QueryResult&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface QueryResult All Superinterfaces: java.io.Serializable, TwitterResponse public interface QueryResult extends TwitterResponse, java.io.Serializable A data interface representing search API response Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description double getCompletedIn()\u00a0 int getCount()\u00a0 long getMaxId()\u00a0 java.lang.String getQuery()\u00a0 java.lang.String getRefreshURL()\u00a0 long getSinceId()\u00a0 java.util.List&lt;Status&gt; getTweets()\u00a0 boolean hasNext() test if there is next page Query nextQuery() Returns a Query instance to fetch next page or null if there is no next page. Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getSinceId long\u00a0getSinceId() getMaxId long\u00a0getMaxId() getRefreshURL java.lang.String\u00a0getRefreshURL() getCount int\u00a0getCount() getCompletedIn double\u00a0getCompletedIn() getQuery java.lang.String\u00a0getQuery() getTweets java.util.List&lt;Status&gt;\u00a0getTweets() nextQuery Query\u00a0nextQuery() Returns a Query instance to fetch next page or null if there is no next page. Returns: Query instance to fetch next page Since: Twitter4J 3.0.0 hasNext boolean\u00a0hasNext() test if there is next page Returns: if there is next page Since: Twitter4J 3.0.0 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method RateLimitStatus &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;RateLimitStatus&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface RateLimitStatus All Superinterfaces: java.io.Serializable public interface RateLimitStatus extends java.io.Serializable A data interface representing Twitter REST API's rate limit status Author: Yusuke Yamamoto - yusuke at mac.com See Also: Rate Limiting Twitter Developers Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getLimit() Returns the current limit in effect This value is identical to the &quot;X-Rate-Limit-Limit&quot; response header. int getRemaining() Returns the remaining number of API requests available. This value is identical to the &quot;X-Rate-Limit-Remaining&quot; response header. int getResetTimeInSeconds() Returns the seconds the current rate limiting period ends. This should be a same as getResetTime().getTime()/1000. int getSecondsUntilReset() Returns the amount of seconds until the current rate limiting period ends. This is a value provided/calculated only by Twitter4J for handiness and not a part of the twitter API spec. Method Detail getRemaining int\u00a0getRemaining() Returns the remaining number of API requests available. This value is identical to the &quot;X-Rate-Limit-Remaining&quot; response header. Returns: the remaining number of API requests available Since: Twitter4J 3.0.0 getLimit int\u00a0getLimit() Returns the current limit in effect This value is identical to the &quot;X-Rate-Limit-Limit&quot; response header. Returns: the current limit in effect getResetTimeInSeconds int\u00a0getResetTimeInSeconds() Returns the seconds the current rate limiting period ends. This should be a same as getResetTime().getTime()/1000. Returns: the seconds the current rate limiting period ends Since: Twitter4J 2.0.9 getSecondsUntilReset int\u00a0getSecondsUntilReset() Returns the amount of seconds until the current rate limiting period ends. This is a value provided/calculated only by Twitter4J for handiness and not a part of the twitter API spec. Returns: the amount of seconds until next rate limiting period Since: Twitter4J 2.1.0 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method RateLimitStatusEvent &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;RateLimitStatusEvent&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class RateLimitStatusEvent java.lang.Object java.util.EventObject twitter4j.RateLimitStatusEvent All Implemented Interfaces: java.io.Serializable public final class RateLimitStatusEvent extends java.util.EventObject A data interface representing Twitter REST API's rate limit status Author: Yusuke Yamamoto - yusuke at mac.com See Also: Rate Limiting Twitter Developers, Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private boolean isAccountRateLimitStatus\u00a0 private RateLimitStatus rateLimitStatus\u00a0 private static long serialVersionUID\u00a0 Fields inherited from class\u00a0java.util.EventObject source Constructor Summary Constructors\u00a0 Constructor and Description RateLimitStatusEvent(java.lang.Object\u00a0source, RateLimitStatus\u00a0rateLimitStatus, boolean\u00a0isAccountRateLimitStatus)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description RateLimitStatus getRateLimitStatus()\u00a0 boolean isAccountRateLimitStatus()\u00a0 boolean isIPRateLimitStatus()\u00a0 Methods inherited from class\u00a0java.util.EventObject getSource, toString Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values rateLimitStatus private final\u00a0RateLimitStatus rateLimitStatus isAccountRateLimitStatus private final\u00a0boolean isAccountRateLimitStatus Constructor Detail RateLimitStatusEvent RateLimitStatusEvent(java.lang.Object\u00a0source, RateLimitStatus\u00a0rateLimitStatus, boolean\u00a0isAccountRateLimitStatus) Method Detail getRateLimitStatus public\u00a0RateLimitStatus\u00a0getRateLimitStatus() isAccountRateLimitStatus public\u00a0boolean\u00a0isAccountRateLimitStatus() isIPRateLimitStatus public\u00a0boolean\u00a0isIPRateLimitStatus() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method RateLimitStatusListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;RateLimitStatusListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface RateLimitStatusListener public interface RateLimitStatusListener Author: Andrew Hedges - andrew.hedges at gmail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onRateLimitReached(RateLimitStatusEvent\u00a0event) Called when the account or IP address is hitting the rate limit. onRateLimitStatus will be also called before this event. void onRateLimitStatus(RateLimitStatusEvent\u00a0event) Called when the response contains rate limit status. Method Detail onRateLimitStatus void\u00a0onRateLimitStatus(RateLimitStatusEvent\u00a0event) Called when the response contains rate limit status. Parameters: event - rate limit status event. onRateLimitReached void\u00a0onRateLimitReached(RateLimitStatusEvent\u00a0event) Called when the account or IP address is hitting the rate limit. onRateLimitStatus will be also called before this event. Parameters: event - rate limit status event. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method RawStreamListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;RawStreamListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface RawStreamListener All Superinterfaces: StreamListener public interface RawStreamListener extends StreamListener Since: Twitter4J 3.0.2 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onMessage(java.lang.String\u00a0rawString)\u00a0 Methods inherited from interface\u00a0twitter4j.StreamListener onException Method Detail onMessage void\u00a0onMessage(java.lang.String\u00a0rawString) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Relationship &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Relationship&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Relationship All Superinterfaces: java.io.Serializable, TwitterResponse public interface Relationship extends TwitterResponse, java.io.Serializable A data interface that has detailed information about a relationship between two users Since: Twitter4J 2.1.0 Author: Perry Sakkaris - psakkaris at gmail.com See Also: GET friendships/show Twitter Developers Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description boolean canSourceDm() Checks if source user can send dm to target user long getSourceUserId() Returns the source user id java.lang.String getSourceUserScreenName() Returns the source user screen name long getTargetUserId() Returns the target user id java.lang.String getTargetUserScreenName() Returns the target user screen name boolean isSourceBlockingTarget() Returns if the source user is blocking the target user boolean isSourceFollowedByTarget() Checks if source user is being followed by target user boolean isSourceFollowingTarget() Checks if source user is following target user boolean isSourceMutingTarget() Returns id the source user is muting the target user boolean isSourceNotificationsEnabled() Checks if the source user has enabled notifications for updates of the target user boolean isSourceWantRetweets() Checks if the retweets from the target user enabled boolean isTargetFollowedBySource() Checks if target user is being followed by source user. This method is equivalent to isSourceFollowingTarget(). boolean isTargetFollowingSource() Checks if target user is following source user. This method is equivalent to isSourceFollowedByTarget(). Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getSourceUserId long\u00a0getSourceUserId() Returns the source user id Returns: the source user id getTargetUserId long\u00a0getTargetUserId() Returns the target user id Returns: target user id isSourceBlockingTarget boolean\u00a0isSourceBlockingTarget() Returns if the source user is blocking the target user Returns: if the source is blocking the target isSourceMutingTarget boolean\u00a0isSourceMutingTarget() Returns id the source user is muting the target user Returns: if the source is muting the target getSourceUserScreenName java.lang.String\u00a0getSourceUserScreenName() Returns the source user screen name Returns: returns the source user screen name getTargetUserScreenName java.lang.String\u00a0getTargetUserScreenName() Returns the target user screen name Returns: the target user screen name isSourceFollowingTarget boolean\u00a0isSourceFollowingTarget() Checks if source user is following target user Returns: true if source user is following target user isTargetFollowingSource boolean\u00a0isTargetFollowingSource() Checks if target user is following source user. This method is equivalent to isSourceFollowedByTarget(). Returns: true if target user is following source user isSourceFollowedByTarget boolean\u00a0isSourceFollowedByTarget() Checks if source user is being followed by target user Returns: true if source user is being followed by target user isTargetFollowedBySource boolean\u00a0isTargetFollowedBySource() Checks if target user is being followed by source user. This method is equivalent to isSourceFollowingTarget(). Returns: true if target user is being followed by source user canSourceDm boolean\u00a0canSourceDm() Checks if source user can send dm to target user Returns: true if source user can send dm to target user Since: Twitter4J 3.0.5 isSourceNotificationsEnabled boolean\u00a0isSourceNotificationsEnabled() Checks if the source user has enabled notifications for updates of the target user Returns: true if source user enabled notifications for target user isSourceWantRetweets boolean\u00a0isSourceWantRetweets() Checks if the retweets from the target user enabled Returns: true if the retweets from the target user enabled Since: Twitter4J 3.0.3 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method RequestToken &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;RequestToken&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.auth Class RequestToken java.lang.Object twitter4j.auth.OAuthToken twitter4j.auth.RequestToken All Implemented Interfaces: java.io.Serializable public final class RequestToken extends OAuthToken implements java.io.Serializable Author: Yusuke Yamamoto - yusuke at mac.com representing unauthorized Request Token which is passed to the service provider when acquiring the authorized Access Token See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private Configuration conf\u00a0 private OAuthSupport oauth\u00a0 private static long serialVersionUID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description RequestToken(HttpResponse\u00a0res, OAuthSupport\u00a0oauth)\u00a0 RequestToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret)\u00a0 RequestToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret, OAuthSupport\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description java.lang.String getAuthenticationURL()\u00a0 java.lang.String getAuthorizationURL()\u00a0 Methods inherited from class\u00a0twitter4j.auth.OAuthToken equals, getParameter, getSecretKeySpec, getToken, getTokenSecret, hashCode, setSecretKeySpec, toString Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf private final\u00a0Configuration conf oauth private\u00a0OAuthSupport oauth Constructor Detail RequestToken RequestToken(HttpResponse\u00a0res, OAuthSupport\u00a0oauth) throws TwitterException Throws: TwitterException RequestToken public\u00a0RequestToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret) RequestToken RequestToken(java.lang.String\u00a0token, java.lang.String\u00a0tokenSecret, OAuthSupport\u00a0oauth) Method Detail getAuthorizationURL public\u00a0java.lang.String\u00a0getAuthorizationURL() Returns: authorization URL since Twitter4J 2.0.0 getAuthenticationURL public\u00a0java.lang.String\u00a0getAuthenticationURL() Returns: authentication URL since Twitter4J 2.0.10 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method ResponseList &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;ResponseList&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface ResponseList&lt;T&gt; All Superinterfaces: java.util.Collection&lt;T&gt;, java.lang.Iterable&lt;T&gt;, java.util.List&lt;T&gt;, java.io.Serializable, TwitterResponse All Known Subinterfaces: PagableResponseList&lt;T&gt; public interface ResponseList&lt;T&gt; extends TwitterResponse, java.util.List&lt;T&gt; List of TwitterResponse. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description RateLimitStatus getRateLimitStatus() Returns the current rate limit status if available. Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel Methods inherited from interface\u00a0java.util.List add, add, addAll, addAll, clear, contains, containsAll, equals, get, hashCode, indexOf, isEmpty, iterator, lastIndexOf, listIterator, listIterator, remove, remove, removeAll, replaceAll, retainAll, set, size, sort, spliterator, subList, toArray, toArray Methods inherited from interface\u00a0java.util.Collection parallelStream, removeIf, stream Methods inherited from interface\u00a0java.lang.Iterable forEach Method Detail getRateLimitStatus RateLimitStatus\u00a0getRateLimitStatus() Description copied from interface:\u00a0TwitterResponse Returns the current rate limit status if available. Specified by: getRateLimitStatus\u00a0in interface\u00a0TwitterResponse Returns: current rate limit status Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SavedSearch &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SavedSearch&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface SavedSearch All Superinterfaces: java.lang.Comparable&lt;SavedSearch&gt;, java.io.Serializable, TwitterResponse public interface SavedSearch extends java.lang.Comparable&lt;SavedSearch&gt;, TwitterResponse, java.io.Serializable A data interface representing a Saved Search Since: Twitter4J 2.0.8 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.util.Date getCreatedAt()\u00a0 long getId()\u00a0 java.lang.String getName()\u00a0 int getPosition()\u00a0 java.lang.String getQuery()\u00a0 Methods inherited from interface\u00a0java.lang.Comparable compareTo Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getCreatedAt java.util.Date\u00a0getCreatedAt() getQuery java.lang.String\u00a0getQuery() getPosition int\u00a0getPosition() getName java.lang.String\u00a0getName() getId long\u00a0getId() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SavedSearchesResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SavedSearchesResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SavedSearchesResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface SavedSearchesResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description SavedSearch createSavedSearch(java.lang.String\u00a0query) Creates a saved search for the authenticated user. SavedSearch destroySavedSearch(long\u00a0id) Destroys a saved search for the authenticated user. ResponseList&lt;SavedSearch&gt; getSavedSearches() Returns the authenticated user's saved search queries. SavedSearch showSavedSearch(long\u00a0id) Retrieve the data for a saved search owned by the authenticating user specified by the given id. Method Detail getSavedSearches ResponseList&lt;SavedSearch&gt;\u00a0getSavedSearches() throws TwitterException Returns the authenticated user's saved search queries. This method calls https://api.twitter.com/1.1/saved_searches.json Returns: Returns an array of numeric user ids the authenticating user is blocking. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.8 See Also: GET saved_searches Twitter Developers showSavedSearch SavedSearch\u00a0showSavedSearch(long\u00a0id) throws TwitterException Retrieve the data for a saved search owned by the authenticating user specified by the given id. This method calls https://api.twitter.com/1.1/saved_searches/show/:id.json Parameters: id - The id of the saved search to be retrieved. Returns: the data for a saved search Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.8 See Also: GET saved_searches/show/:id Twitter Developers createSavedSearch SavedSearch\u00a0createSavedSearch(java.lang.String\u00a0query) throws TwitterException Creates a saved search for the authenticated user. This method calls https://api.twitter.com/1.1/saved_searches/saved_searches/create.json Parameters: query - the query string Returns: the data for a created saved search Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.8 See Also: POST saved_searches/create Twitter Developers destroySavedSearch SavedSearch\u00a0destroySavedSearch(long\u00a0id) throws TwitterException Destroys a saved search for the authenticated user. The search specified by id must be owned by the authenticating user. This method calls https://api.twitter.com/1.1/saved_searches/destroy/id.json Parameters: id - The id of the saved search to be deleted. Returns: the data for a destroyed saved search Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.8 See Also: POST saved_searches/destroy/:id Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SavedSearchesResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SavedSearchesResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SavedSearchesResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface SavedSearchesResourcesAsync Since: Twitter4J 3.0.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void createSavedSearch(java.lang.String\u00a0query) Creates a saved search for the authenticated user. void destroySavedSearch(int\u00a0id) Destroys a saved search for the authenticated user. void getSavedSearches() Returns the authenticated user's saved search queries. void showSavedSearch(int\u00a0id) Retrieve the data for a saved search owned by the authenticating user specified by the given id. Method Detail getSavedSearches void\u00a0getSavedSearches() Returns the authenticated user's saved search queries. This method calls https://api.twitter.com/1.1/saved_searches.json blocking. Since: Twitter4J 3.0.0 See Also: GET saved_searches Twitter Developers showSavedSearch void\u00a0showSavedSearch(int\u00a0id) Retrieve the data for a saved search owned by the authenticating user specified by the given id. This method calls https://api.twitter.com/1.1/saved_searches/show/:id.json Parameters: id - The id of the saved search to be retrieved. Since: Twitter4J 3.0.0 See Also: GET saved_searches/show/:id Twitter Developers createSavedSearch void\u00a0createSavedSearch(java.lang.String\u00a0query) Creates a saved search for the authenticated user. This method calls https://api.twitter.com/1.1/saved_searches/saved_searches/create.json Parameters: query - the query string Since: Twitter4J 3.0.0 See Also: POST saved_searches/create Twitter Developers destroySavedSearch void\u00a0destroySavedSearch(int\u00a0id) Destroys a saved search for the authenticated user. The search specified by id must be owned by the authenticating user. This method calls https://api.twitter.com/1.1/saved_searches/destroy/id.json Parameters: id - The id of the saved search to be deleted. Since: Twitter4J 3.0.0 See Also: POST saved_searches/destroy/:id Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Scopes &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Scopes&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Scopes All Superinterfaces: java.io.Serializable public interface Scopes extends java.io.Serializable A data interface representing targeting scopes applied to a status. Since: Twitter4J 3.0.6 Author: Aaron Rankin - aaron at sproutsocial.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String[] getPlaceIds() Returns the place_ids that identify the scope of the status. Method Detail getPlaceIds java.lang.String[]\u00a0getPlaceIds() Returns the place_ids that identify the scope of the status. Returns: the place_ids that identify the scope of the status. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SearchResource &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SearchResource&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SearchResource All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface SearchResource Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description QueryResult search(Query\u00a0query) Returns tweets that match a specified query. Method Detail search QueryResult\u00a0search(Query\u00a0query) throws TwitterException Returns tweets that match a specified query. This method calls http://search.twitter.com/search.json Parameters: query - - the search condition Returns: the result Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 1.1.7 See Also: GET search Twitter Developers, Twitter API / Search Operators Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SearchResourceAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SearchResourceAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SearchResourceAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface SearchResourceAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void search(Query\u00a0query) Returns tweets that match a specified query. Method Detail search void\u00a0search(Query\u00a0query) Returns tweets that match a specified query. This method calls http://search.twitter.com/search.json Parameters: query - - the search condition Since: Twitter4J 1.1.7 See Also: GET search Twitter Developers, Twitter API / Search Operators Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SiteStreamsAdapter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SiteStreamsAdapter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class SiteStreamsAdapter java.lang.Object twitter4j.SiteStreamsAdapter All Implemented Interfaces: SiteStreamsListener, StreamListener public class SiteStreamsAdapter extends java.lang.Object implements SiteStreamsListener Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Constructor Summary Constructors\u00a0 Constructor and Description SiteStreamsAdapter()\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void onBlock(long\u00a0forUser, User\u00a0source, User\u00a0blockedUser)\u00a0 void onDeletionNotice(long\u00a0forUser, long\u00a0directMessageId, long\u00a0userId)\u00a0 void onDeletionNotice(long\u00a0forUser, StatusDeletionNotice\u00a0statusDeletionNotice)\u00a0 void onDirectMessage(long\u00a0forUser, DirectMessage\u00a0directMessage)\u00a0 void onDisconnectionNotice(java.lang.String\u00a0screenName) callback method for StreamController.removeUsers(long[]) void onException(java.lang.Exception\u00a0ex)\u00a0 void onFavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFollow(long\u00a0forUser, User\u00a0source, User\u00a0followedUser)\u00a0 void onFriendList(long\u00a0forUser, long[]\u00a0friendIds)\u00a0 void onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus)\u00a0 void onStatus(long\u00a0forUser, Status\u00a0status)\u00a0 void onUnblock(long\u00a0forUser, User\u00a0source, User\u00a0unblockedUser)\u00a0 void onUnfavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus)\u00a0 void onUnfollow(long\u00a0forUser, User\u00a0source, User\u00a0followedUser)\u00a0 void onUserDeletion(long\u00a0forUser, long\u00a0deletedUser)\u00a0 void onUserListCreation(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListDeletion(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberAddition(long\u00a0forUser, User\u00a0addedUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberDeletion(long\u00a0forUser, User\u00a0deletedUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListSubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUnsubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUpdate(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserProfileUpdate(long\u00a0forUser, User\u00a0updatedUser)\u00a0 void onUserSuspension(long\u00a0forUser, long\u00a0suspendedUser)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Constructor Detail SiteStreamsAdapter public\u00a0SiteStreamsAdapter() Method Detail onStatus public\u00a0void\u00a0onStatus(long\u00a0forUser, Status\u00a0status) Specified by: onStatus\u00a0in interface\u00a0SiteStreamsListener onDeletionNotice public\u00a0void\u00a0onDeletionNotice(long\u00a0forUser, StatusDeletionNotice\u00a0statusDeletionNotice) Specified by: onDeletionNotice\u00a0in interface\u00a0SiteStreamsListener onFriendList public\u00a0void\u00a0onFriendList(long\u00a0forUser, long[]\u00a0friendIds) Specified by: onFriendList\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event friendIds - friend ids onFavorite public\u00a0void\u00a0onFavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Specified by: onFavorite\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event source - source user of the event target - target user of the event favoritedStatus - the status favorited onUnfavorite public\u00a0void\u00a0onUnfavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus) Specified by: onUnfavorite\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event source - source user of the event target - target user of the event unfavoritedStatus - the status unfavorited onFollow public\u00a0void\u00a0onFollow(long\u00a0forUser, User\u00a0source, User\u00a0followedUser) Specified by: onFollow\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event source - source user of the event followedUser - user followed onUnfollow public\u00a0void\u00a0onUnfollow(long\u00a0forUser, User\u00a0source, User\u00a0followedUser) Specified by: onUnfollow\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event source - source user of the event followedUser - user unfollowed onDirectMessage public\u00a0void\u00a0onDirectMessage(long\u00a0forUser, DirectMessage\u00a0directMessage) Specified by: onDirectMessage\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event directMessage - direct message received onDeletionNotice public\u00a0void\u00a0onDeletionNotice(long\u00a0forUser, long\u00a0directMessageId, long\u00a0userId) Specified by: onDeletionNotice\u00a0in interface\u00a0SiteStreamsListener onUserListMemberAddition public\u00a0void\u00a0onUserListMemberAddition(long\u00a0forUser, User\u00a0addedUser, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListMemberAddition\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event addedUser - member added listOwner - owner of the list list - the list onUserListMemberDeletion public\u00a0void\u00a0onUserListMemberDeletion(long\u00a0forUser, User\u00a0deletedUser, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListMemberDeletion\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event deletedUser - member deleted listOwner - owner of the list list - the list onUserListSubscription public\u00a0void\u00a0onUserListSubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListSubscription\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event subscriber - member subscribed listOwner - owner of the list list - the list onUserListUnsubscription public\u00a0void\u00a0onUserListUnsubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListUnsubscription\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event subscriber - user subscribed listOwner - owner of the list list - the list onUserListCreation public\u00a0void\u00a0onUserListCreation(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListCreation\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event listOwner - owner of the list list - the list onUserListUpdate public\u00a0void\u00a0onUserListUpdate(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListUpdate\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event listOwner - owner of the list list - the list onUserListDeletion public\u00a0void\u00a0onUserListDeletion(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListDeletion\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event listOwner - owner of the list list - the list onUserProfileUpdate public\u00a0void\u00a0onUserProfileUpdate(long\u00a0forUser, User\u00a0updatedUser) Specified by: onUserProfileUpdate\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event updatedUser - updated user onUserSuspension public\u00a0void\u00a0onUserSuspension(long\u00a0forUser, long\u00a0suspendedUser) Specified by: onUserSuspension\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event suspendedUser - suspended user id onUserDeletion public\u00a0void\u00a0onUserDeletion(long\u00a0forUser, long\u00a0deletedUser) Specified by: onUserDeletion\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event deletedUser - deleted user id onBlock public\u00a0void\u00a0onBlock(long\u00a0forUser, User\u00a0source, User\u00a0blockedUser) Specified by: onBlock\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event source - the user user blocked blockedUser - the user got blocked onUnblock public\u00a0void\u00a0onUnblock(long\u00a0forUser, User\u00a0source, User\u00a0unblockedUser) Specified by: onUnblock\u00a0in interface\u00a0SiteStreamsListener Parameters: forUser - the user id to whom sent the event source - the user unblocked unblockedUser - the user got unblocked onRetweetedRetweet public\u00a0void\u00a0onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus) Specified by: onRetweetedRetweet\u00a0in interface\u00a0SiteStreamsListener Parameters: source - source user of the event target - target user of the event retweetedStatus - status retweeted retweet onFavoritedRetweet public\u00a0void\u00a0onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Specified by: onFavoritedRetweet\u00a0in interface\u00a0SiteStreamsListener Parameters: source - source user of the event target - target user of the event favoritedStatus - status favorited retweet onDisconnectionNotice public\u00a0void\u00a0onDisconnectionNotice(java.lang.String\u00a0screenName) Description copied from interface:\u00a0SiteStreamsListener callback method for StreamController.removeUsers(long[]) Specified by: onDisconnectionNotice\u00a0in interface\u00a0SiteStreamsListener Parameters: screenName - notice onException public\u00a0void\u00a0onException(java.lang.Exception\u00a0ex) Specified by: onException\u00a0in interface\u00a0SiteStreamsListener Specified by: onException\u00a0in interface\u00a0StreamListener Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SiteStreamsImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SiteStreamsImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class SiteStreamsImpl java.lang.Object twitter4j.StatusStreamBase twitter4j.SiteStreamsImpl All Implemented Interfaces: StatusStream final class SiteStreamsImpl extends StatusStreamBase Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested classes/interfaces inherited from class\u00a0twitter4j.StatusStreamBase StatusStreamBase.StreamEvent Field Summary Fields\u00a0 Modifier and Type Field and Description private StreamController cs\u00a0 protected static RawStreamListener[] EMPTY\u00a0 private static java.lang.ThreadLocal&lt;java.lang.Long&gt; forUser\u00a0 Fields inherited from class\u00a0twitter4j.StatusStreamBase CONF, logger Constructor Summary Constructors\u00a0 Constructor and Description SiteStreamsImpl(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf, StreamController\u00a0cs)\u00a0 SiteStreamsImpl(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf, StreamController\u00a0cs)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void next(StatusListener\u00a0listener) Reads next status from this stream. void next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 protected void onBlock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onClose()\u00a0 protected void onDelete(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onDirectMessage(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 void onDisconnectionNotice(java.lang.String\u00a0line, StreamListener[]\u00a0listeners)\u00a0 void onException(java.lang.Exception\u00a0ex, StreamListener[]\u00a0listeners)\u00a0 protected void onFavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onFavoritedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 protected void onFollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onFriends(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onMessage(java.lang.String\u00a0rawString, RawStreamListener[]\u00a0listeners)\u00a0 (package private) void onRetweetedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 protected void onStatus(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onUnblock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUnfavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 protected void onUnfollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserDeletion(long\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListCreation(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListDestroyed(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListMemberAddition(JSONObject\u00a0addedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListMemberDeletion(JSONObject\u00a0deletedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListSubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListUnsubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListUpdated(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 protected void onUserSuspension(long\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserUpdate(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected java.lang.String parseLine(java.lang.String\u00a0line)\u00a0 Methods inherited from class\u00a0twitter4j.StatusStreamBase asDirectMessage, asFriendList, asStatus, asUser, asUserList, close, handleNextElement, onException, onLimit, onQuotedTweet, onScrubGeo, onSender, onStallWarning Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail cs private final\u00a0StreamController cs forUser private static final\u00a0java.lang.ThreadLocal&lt;java.lang.Long&gt; forUser EMPTY protected static final\u00a0RawStreamListener[] EMPTY Constructor Detail SiteStreamsImpl SiteStreamsImpl(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf, StreamController\u00a0cs) throws java.io.IOException Throws: java.io.IOException SiteStreamsImpl SiteStreamsImpl(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf, StreamController\u00a0cs) throws java.io.IOException Throws: java.io.IOException Method Detail parseLine protected\u00a0java.lang.String\u00a0parseLine(java.lang.String\u00a0line) Overrides: parseLine\u00a0in class\u00a0StatusStreamBase onClose protected\u00a0void\u00a0onClose() Specified by: onClose\u00a0in class\u00a0StatusStreamBase onMessage protected\u00a0void\u00a0onMessage(java.lang.String\u00a0rawString, RawStreamListener[]\u00a0listeners) throws TwitterException Overrides: onMessage\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onStatus protected\u00a0void\u00a0onStatus(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onStatus\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onDelete protected\u00a0void\u00a0onDelete(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws JSONException Overrides: onDelete\u00a0in class\u00a0StatusStreamBase Throws: JSONException onDirectMessage protected\u00a0void\u00a0onDirectMessage(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onDirectMessage\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onFriends protected\u00a0void\u00a0onFriends(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onFriends\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onFavorite protected\u00a0void\u00a0onFavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onFavorite\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUnfavorite protected\u00a0void\u00a0onUnfavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUnfavorite\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onFollow protected\u00a0void\u00a0onFollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onFollow\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUnfollow protected\u00a0void\u00a0onUnfollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUnfollow\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserListMemberAddition protected\u00a0void\u00a0onUserListMemberAddition(JSONObject\u00a0addedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListMemberAddition\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListMemberDeletion protected\u00a0void\u00a0onUserListMemberDeletion(JSONObject\u00a0deletedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListMemberDeletion\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListSubscription protected\u00a0void\u00a0onUserListSubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListSubscription\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListUnsubscription protected\u00a0void\u00a0onUserListUnsubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListUnsubscription\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListCreation protected\u00a0void\u00a0onUserListCreation(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListCreation\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListUpdated protected\u00a0void\u00a0onUserListUpdated(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListUpdated\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListDestroyed protected\u00a0void\u00a0onUserListDestroyed(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserListDestroyed\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserUpdate protected\u00a0void\u00a0onUserUpdate(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserUpdate\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserSuspension protected\u00a0void\u00a0onUserSuspension(long\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserSuspension\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserDeletion protected\u00a0void\u00a0onUserDeletion(long\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserDeletion\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onBlock protected\u00a0void\u00a0onBlock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onBlock\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUnblock protected\u00a0void\u00a0onUnblock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUnblock\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onRetweetedRetweet void\u00a0onRetweetedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onRetweetedRetweet\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onFavoritedRetweet void\u00a0onFavoritedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onFavoritedRetweet\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onException public\u00a0void\u00a0onException(java.lang.Exception\u00a0ex, StreamListener[]\u00a0listeners) Overrides: onException\u00a0in class\u00a0StatusStreamBase next public\u00a0void\u00a0next(StatusListener\u00a0listener) throws TwitterException Description copied from interface:\u00a0StatusStream Reads next status from this stream. Specified by: next\u00a0in interface\u00a0StatusStream Specified by: next\u00a0in class\u00a0StatusStreamBase Parameters: listener - a StatusListener implementation Throws: TwitterException - when the end of the stream has been reached. next public\u00a0void\u00a0next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) throws TwitterException Specified by: next\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onDisconnectionNotice public\u00a0void\u00a0onDisconnectionNotice(java.lang.String\u00a0line, StreamListener[]\u00a0listeners) Overrides: onDisconnectionNotice\u00a0in class\u00a0StatusStreamBase Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SiteStreamsListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SiteStreamsListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface SiteStreamsListener All Superinterfaces: StreamListener All Known Implementing Classes: SiteStreamsAdapter public interface SiteStreamsListener extends StreamListener Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onBlock(long\u00a0forUser, User\u00a0source, User\u00a0blockedUser)\u00a0 void onDeletionNotice(long\u00a0forUser, long\u00a0directMessageId, long\u00a0userId)\u00a0 void onDeletionNotice(long\u00a0forUser, StatusDeletionNotice\u00a0statusDeletionNotice)\u00a0 void onDirectMessage(long\u00a0forUser, DirectMessage\u00a0directMessage)\u00a0 void onDisconnectionNotice(java.lang.String\u00a0line) callback method for StreamController.removeUsers(long[]) void onException(java.lang.Exception\u00a0ex)\u00a0 void onFavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFollow(long\u00a0forUser, User\u00a0source, User\u00a0followedUser)\u00a0 void onFriendList(long\u00a0forUser, long[]\u00a0friendIds)\u00a0 void onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus)\u00a0 void onStatus(long\u00a0forUser, Status\u00a0status)\u00a0 void onUnblock(long\u00a0forUser, User\u00a0source, User\u00a0unblockedUser)\u00a0 void onUnfavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus)\u00a0 void onUnfollow(long\u00a0forUser, User\u00a0source, User\u00a0unfollowedUser)\u00a0 void onUserDeletion(long\u00a0forUser, long\u00a0deletedUser)\u00a0 void onUserListCreation(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListDeletion(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberAddition(long\u00a0forUser, User\u00a0addedMember, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberDeletion(long\u00a0forUser, User\u00a0deletedMember, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListSubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUnsubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUpdate(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserProfileUpdate(long\u00a0forUser, User\u00a0updatedUser)\u00a0 void onUserSuspension(long\u00a0forUser, long\u00a0suspendedUser)\u00a0 Method Detail onStatus void\u00a0onStatus(long\u00a0forUser, Status\u00a0status) onDeletionNotice void\u00a0onDeletionNotice(long\u00a0forUser, StatusDeletionNotice\u00a0statusDeletionNotice) onFriendList void\u00a0onFriendList(long\u00a0forUser, long[]\u00a0friendIds) Parameters: forUser - the user id to whom sent the event friendIds - friend ids onFavorite void\u00a0onFavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Parameters: forUser - the user id to whom sent the event source - source user of the event target - target user of the event favoritedStatus - the status favorited onUnfavorite void\u00a0onUnfavorite(long\u00a0forUser, User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus) Parameters: forUser - the user id to whom sent the event source - source user of the event target - target user of the event unfavoritedStatus - the status unfavorited onFollow void\u00a0onFollow(long\u00a0forUser, User\u00a0source, User\u00a0followedUser) Parameters: forUser - the user id to whom sent the event source - source user of the event followedUser - user followed onUnfollow void\u00a0onUnfollow(long\u00a0forUser, User\u00a0source, User\u00a0unfollowedUser) Parameters: forUser - the user id to whom sent the event source - source user of the event unfollowedUser - user unfollowed Since: Twitter4J 2.1.11 onDirectMessage void\u00a0onDirectMessage(long\u00a0forUser, DirectMessage\u00a0directMessage) Parameters: forUser - the user id to whom sent the event directMessage - direct message received onDeletionNotice void\u00a0onDeletionNotice(long\u00a0forUser, long\u00a0directMessageId, long\u00a0userId) onUserListMemberAddition void\u00a0onUserListMemberAddition(long\u00a0forUser, User\u00a0addedMember, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event addedMember - member added listOwner - owner of the list list - the list onUserListMemberDeletion void\u00a0onUserListMemberDeletion(long\u00a0forUser, User\u00a0deletedMember, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event deletedMember - member deleted listOwner - owner of the list list - the list onUserListSubscription void\u00a0onUserListSubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event subscriber - member subscribed listOwner - owner of the list list - the list onUserListUnsubscription void\u00a0onUserListUnsubscription(long\u00a0forUser, User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event subscriber - user subscribed listOwner - owner of the list list - the list onUserListCreation void\u00a0onUserListCreation(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event listOwner - owner of the list list - the list onUserListUpdate void\u00a0onUserListUpdate(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event listOwner - owner of the list list - the list onUserListDeletion void\u00a0onUserListDeletion(long\u00a0forUser, User\u00a0listOwner, UserList\u00a0list) Parameters: forUser - the user id to whom sent the event listOwner - owner of the list list - the list onUserProfileUpdate void\u00a0onUserProfileUpdate(long\u00a0forUser, User\u00a0updatedUser) Parameters: forUser - the user id to whom sent the event updatedUser - updated user Since: Twitter4J 2.1.9 onUserSuspension void\u00a0onUserSuspension(long\u00a0forUser, long\u00a0suspendedUser) Parameters: forUser - the user id to whom sent the event suspendedUser - suspended user id Since: Twitter4J 4.0.3 onUserDeletion void\u00a0onUserDeletion(long\u00a0forUser, long\u00a0deletedUser) Parameters: forUser - the user id to whom sent the event deletedUser - deleted user id Since: Twitter4J 4.0.3 onBlock void\u00a0onBlock(long\u00a0forUser, User\u00a0source, User\u00a0blockedUser) Parameters: forUser - the user id to whom sent the event source - the user user blocked blockedUser - the user got blocked onUnblock void\u00a0onUnblock(long\u00a0forUser, User\u00a0source, User\u00a0unblockedUser) Parameters: forUser - the user id to whom sent the event source - the user unblocked unblockedUser - the user got unblocked onRetweetedRetweet void\u00a0onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus) Parameters: source - source user of the event target - target user of the event retweetedStatus - status retweeted retweet Since: Twitter4J 4.0.x onFavoritedRetweet void\u00a0onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Parameters: source - source user of the event target - target user of the event favoritedStatus - status favorited retweet Since: Twitter4J 4.0.x onDisconnectionNotice void\u00a0onDisconnectionNotice(java.lang.String\u00a0line) callback method for StreamController.removeUsers(long[]) Parameters: line - notice onException void\u00a0onException(java.lang.Exception\u00a0ex) Specified by: onException\u00a0in interface\u00a0StreamListener Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SpamReportingResource &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SpamReportingResource&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SpamReportingResource All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface SpamReportingResource Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description User reportSpam(long\u00a0userId) The user specified in the id is blocked by the authenticated user and reported as a spammer. User reportSpam(java.lang.String\u00a0screenName) The user specified in the id is blocked by the authenticated user and reported as a spammer. Method Detail reportSpam User\u00a0reportSpam(long\u00a0userId) throws TwitterException The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Parameters: userId - The ID of the user you want to report as a spammer. Returns: The User reported as a spammer. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST report_spam Twitter Developers reportSpam User\u00a0reportSpam(java.lang.String\u00a0screenName) throws TwitterException The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Parameters: screenName - The screen name of the user you want to report as a spammer. Returns: The User reported as a spammer. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST report_spam Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SpamReportingResourceAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SpamReportingResourceAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SpamReportingResourceAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface SpamReportingResourceAsync Not yet supported. http://yusuke.homeip.net/jira/browse/TFJ-223 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void reportSpam(long\u00a0userId) The user specified in the id is blocked by the authenticated user and reported as a spammer. void reportSpam(java.lang.String\u00a0screenName) The user specified in the id is blocked by the authenticated user and reported as a spammer. Method Detail reportSpam void\u00a0reportSpam(long\u00a0userId) The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Parameters: userId - The ID of the user you want to report as a spammer. Since: Twitter4J 2.1.0 See Also: POST report_spam Twitter Developers reportSpam void\u00a0reportSpam(java.lang.String\u00a0screenName) The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Parameters: screenName - The screen name of the user you want to report as a spammer. Since: Twitter4J 2.1.0 See Also: POST report_spam Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StallWarning &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StallWarning&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StallWarning java.lang.Object twitter4j.StallWarning All Implemented Interfaces: java.io.Serializable public final class StallWarning extends java.lang.Object implements java.io.Serializable Since: Twitter4J 3.0.0 Author: Yusuke Yamamoto - yusuke at twitter.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private java.lang.String code\u00a0 private java.lang.String message\u00a0 private int percentFull\u00a0 private static long serialVersionUID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description StallWarning(JSONObject\u00a0json)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 java.lang.String getCode()\u00a0 java.lang.String getMessage()\u00a0 int getPercentFull()\u00a0 int hashCode()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values code private final\u00a0java.lang.String code message private final\u00a0java.lang.String message percentFull private final\u00a0int percentFull Constructor Detail StallWarning StallWarning(JSONObject\u00a0json) throws JSONException Throws: JSONException Method Detail getCode public\u00a0java.lang.String\u00a0getCode() getMessage public\u00a0java.lang.String\u00a0getMessage() getPercentFull public\u00a0int\u00a0getPercentFull() equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Status &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Status&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Status All Superinterfaces: java.lang.Comparable&lt;Status&gt;, EntitySupport, java.io.Serializable, TwitterResponse public interface Status extends java.lang.Comparable&lt;Status&gt;, TwitterResponse, EntitySupport, java.io.Serializable A data interface representing one single status of a user. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long[] getContributors() Returns an array of contributors, or null if no contributor is associated with this status. java.util.Date getCreatedAt() Return the created_at long getCurrentUserRetweetId() Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created before this feature was enabled. int getFavoriteCount() Indicates approximately how many times this Tweet has been &quot;favorited&quot; by Twitter users. GeoLocation getGeoLocation() Returns The location that this tweet refers to if available. long getId() Returns the id of the status java.lang.String getInReplyToScreenName() Returns the in_reply_to_screen_name long getInReplyToStatusId() Returns the in_reply_tostatus_id long getInReplyToUserId() Returns the in_reply_user_id java.lang.String getLang() Returns the lang of the status text if available. Place getPlace() Returns the place attached to this status Status getQuotedStatus() Returns the Tweet object of the original Tweet that was quoted. long getQuotedStatusId() Returns the Tweet ID of the quoted Tweet int getRetweetCount() Returns the number of times this tweet has been retweeted, or -1 when the tweet was created before this feature was enabled. Status getRetweetedStatus()\u00a0 Scopes getScopes() Returns the targeting scopes applied to a status. java.lang.String getSource() Returns the source java.lang.String getText() Returns the text of the status User getUser() Return the user associated with the status. This can be null if the instance is from User.getStatus(). java.lang.String[] getWithheldInCountries() Returns the list of country codes where the tweet is withheld boolean isFavorited() Test if the status is favorited boolean isPossiblySensitive() Returns true if the status contains a link that is identified as sensitive. boolean isRetweet()\u00a0 boolean isRetweeted() Test if the status is retweeted boolean isRetweetedByMe() Returns true if the authenticating user has retweeted this tweet, or false when the tweet was created before this feature was enabled. boolean isTruncated() Test if the status is truncated Methods inherited from interface\u00a0java.lang.Comparable compareTo Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Methods inherited from interface\u00a0twitter4j.EntitySupport getExtendedMediaEntities, getHashtagEntities, getMediaEntities, getSymbolEntities, getURLEntities, getUserMentionEntities Method Detail getCreatedAt java.util.Date\u00a0getCreatedAt() Return the created_at Returns: created_at Since: Twitter4J 1.1.0 getId long\u00a0getId() Returns the id of the status Returns: the id getText java.lang.String\u00a0getText() Returns the text of the status Returns: the text getSource java.lang.String\u00a0getSource() Returns the source Returns: the source Since: Twitter4J 1.0.4 isTruncated boolean\u00a0isTruncated() Test if the status is truncated Returns: true if truncated Since: Twitter4J 1.0.4 getInReplyToStatusId long\u00a0getInReplyToStatusId() Returns the in_reply_tostatus_id Returns: the in_reply_tostatus_id Since: Twitter4J 1.0.4 getInReplyToUserId long\u00a0getInReplyToUserId() Returns the in_reply_user_id Returns: the in_reply_tostatus_id Since: Twitter4J 1.0.4 getInReplyToScreenName java.lang.String\u00a0getInReplyToScreenName() Returns the in_reply_to_screen_name Returns: the in_in_reply_to_screen_name Since: Twitter4J 2.0.4 getGeoLocation GeoLocation\u00a0getGeoLocation() Returns The location that this tweet refers to if available. Returns: returns The location that this tweet refers to if available (can be null) Since: Twitter4J 2.1.0 getPlace Place\u00a0getPlace() Returns the place attached to this status Returns: The place attached to this status Since: Twitter4J 2.1.1 isFavorited boolean\u00a0isFavorited() Test if the status is favorited Returns: true if favorited Since: Twitter4J 1.0.4 isRetweeted boolean\u00a0isRetweeted() Test if the status is retweeted Returns: true if retweeted Since: Twitter4J 3.0.4 getFavoriteCount int\u00a0getFavoriteCount() Indicates approximately how many times this Tweet has been &quot;favorited&quot; by Twitter users. Returns: the favorite count Since: Twitter4J 3.0.4 getUser User\u00a0getUser() Return the user associated with the status. This can be null if the instance is from User.getStatus(). Returns: the user isRetweet boolean\u00a0isRetweet() Returns: if the status is retweet or not Since: Twitter4J 2.0.10 getRetweetedStatus Status\u00a0getRetweetedStatus() Returns: retweeted status Since: Twitter4J 2.1.0 getContributors long[]\u00a0getContributors() Returns an array of contributors, or null if no contributor is associated with this status. Returns: contributors Since: Twitter4J 2.2.3 getRetweetCount int\u00a0getRetweetCount() Returns the number of times this tweet has been retweeted, or -1 when the tweet was created before this feature was enabled. Returns: the retweet count. isRetweetedByMe boolean\u00a0isRetweetedByMe() Returns true if the authenticating user has retweeted this tweet, or false when the tweet was created before this feature was enabled. Returns: whether the authenticating user has retweeted this tweet. Since: Twitter4J 2.1.4 getCurrentUserRetweetId long\u00a0getCurrentUserRetweetId() Returns the authenticating user's retweet's id of this tweet, or -1L when the tweet was created before this feature was enabled. Returns: the authenticating user's retweet's id of this tweet Since: Twitter4J 3.0.1 isPossiblySensitive boolean\u00a0isPossiblySensitive() Returns true if the status contains a link that is identified as sensitive. Returns: whether the status contains sensitive links Since: Twitter4J 3.0.0 getLang java.lang.String\u00a0getLang() Returns the lang of the status text if available. Returns: two-letter iso language code Since: Twitter4J 3.0.6 getScopes Scopes\u00a0getScopes() Returns the targeting scopes applied to a status. Returns: the targeting scopes applied to a status. Since: Twitter4J 3.0.6 getWithheldInCountries java.lang.String[]\u00a0getWithheldInCountries() Returns the list of country codes where the tweet is withheld Returns: list of country codes where the tweet is withheld - null if not withheld Since: Twitter4j 4.0.3 getQuotedStatusId long\u00a0getQuotedStatusId() Returns the Tweet ID of the quoted Tweet Returns: the Tweet ID of the quoted Tweet Since: Twitter4J 4.0.4 getQuotedStatus Status\u00a0getQuotedStatus() Returns the Tweet object of the original Tweet that was quoted. Returns: the quoted Tweet object Since: Twitter4J 4.0.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusAdapter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusAdapter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StatusAdapter java.lang.Object twitter4j.StatusAdapter All Implemented Interfaces: StatusListener, StreamListener Direct Known Subclasses: UserStreamAdapter public class StatusAdapter extends java.lang.Object implements StatusListener Since: Twitter4J 2.1.3 Author: yusuke at mac.com Constructor Summary Constructors\u00a0 Constructor and Description StatusAdapter()\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void onDeletionNotice(StatusDeletionNotice\u00a0statusDeletionNotice) Called upon deletionNotice notices. void onException(java.lang.Exception\u00a0ex)\u00a0 void onScrubGeo(long\u00a0userId, long\u00a0upToStatusId) Called upon location deletion messages. void onStallWarning(StallWarning\u00a0warning) Called when receiving stall warnings. void onStatus(Status\u00a0status)\u00a0 void onTrackLimitationNotice(int\u00a0numberOfLimitedStatuses) This notice will be sent each time a limited stream becomes unlimited. If this number is high and or rapidly increasing, it is an indication that your predicate is too broad, and you should consider a predicate with higher selectivity. Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Constructor Detail StatusAdapter public\u00a0StatusAdapter() Method Detail onStatus public\u00a0void\u00a0onStatus(Status\u00a0status) Specified by: onStatus\u00a0in interface\u00a0StatusListener onDeletionNotice public\u00a0void\u00a0onDeletionNotice(StatusDeletionNotice\u00a0statusDeletionNotice) Description copied from interface:\u00a0StatusListener Called upon deletionNotice notices. Clients are urged to honor deletionNotice requests and discard deleted statuses immediately. At times, status deletionNotice messages may arrive before the status. Even in this case, the late arriving status should be deleted from your backing store. Specified by: onDeletionNotice\u00a0in interface\u00a0StatusListener Parameters: statusDeletionNotice - the deletionNotice notice See Also: Streaming API Concepts Twitter Developers onTrackLimitationNotice public\u00a0void\u00a0onTrackLimitationNotice(int\u00a0numberOfLimitedStatuses) Description copied from interface:\u00a0StatusListener This notice will be sent each time a limited stream becomes unlimited. If this number is high and or rapidly increasing, it is an indication that your predicate is too broad, and you should consider a predicate with higher selectivity. Specified by: onTrackLimitationNotice\u00a0in interface\u00a0StatusListener Parameters: numberOfLimitedStatuses - an enumeration of statuses that matched the track predicate but were administratively limited. See Also: Streaming API Concepts - Filter Limiting Twitter Developers, Streaming API Concepts - Parsing Responses Twitter Developers, Twitter Development Talk - Track API Limit message meaning onScrubGeo public\u00a0void\u00a0onScrubGeo(long\u00a0userId, long\u00a0upToStatusId) Description copied from interface:\u00a0StatusListener Called upon location deletion messages. Clients are urged to honor deletion requests and remove appropriate geolocation information from both the display and your backing store immediately. Note that in some cases the location deletion message may arrive before a tweet that lies within the deletion range arrives. You should still strip the location data. Specified by: onScrubGeo\u00a0in interface\u00a0StatusListener Parameters: userId - user id upToStatusId - up to status id onException public\u00a0void\u00a0onException(java.lang.Exception\u00a0ex) Specified by: onException\u00a0in interface\u00a0StreamListener onStallWarning public\u00a0void\u00a0onStallWarning(StallWarning\u00a0warning) Description copied from interface:\u00a0StatusListener Called when receiving stall warnings. Specified by: onStallWarning\u00a0in interface\u00a0StatusListener Parameters: warning - StallWaning See Also: Streaming API request parameters - stall_warnings Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusDeletionNotice &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusDeletionNotice&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface StatusDeletionNotice All Superinterfaces: java.lang.Comparable&lt;StatusDeletionNotice&gt;, java.io.Serializable All Known Implementing Classes: StatusDeletionNoticeImpl public interface StatusDeletionNotice extends java.lang.Comparable&lt;StatusDeletionNotice&gt;, java.io.Serializable A data class representing Status deletionNotice Clients are urged to honor deletionNotice requests and discard deleted statuses immediately. At times, status deletionNotice messages may arrive before the status. Even in this case, the late arriving status should be deleted from your backing store. Since: Twitter4J 2.1.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description long getStatusId()\u00a0 long getUserId()\u00a0 Methods inherited from interface\u00a0java.lang.Comparable compareTo Method Detail getStatusId long\u00a0getStatusId() getUserId long\u00a0getUserId() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusDeletionNoticeImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusDeletionNoticeImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StatusDeletionNoticeImpl java.lang.Object twitter4j.StatusDeletionNoticeImpl All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;StatusDeletionNotice&gt;, StatusDeletionNotice class StatusDeletionNoticeImpl extends java.lang.Object implements StatusDeletionNotice, java.io.Serializable StatusDeletionNotice implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing. Since: Twitter4J 2.1.2 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static long serialVersionUID\u00a0 private long statusId\u00a0 private long userId\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description StatusDeletionNoticeImpl(JSONObject\u00a0status)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description int compareTo(StatusDeletionNotice\u00a0that)\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 long getStatusId()\u00a0 long getUserId()\u00a0 int hashCode()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values statusId private final\u00a0long statusId userId private final\u00a0long userId Constructor Detail StatusDeletionNoticeImpl StatusDeletionNoticeImpl(JSONObject\u00a0status) Method Detail getStatusId public\u00a0long\u00a0getStatusId() Specified by: getStatusId\u00a0in interface\u00a0StatusDeletionNotice getUserId public\u00a0long\u00a0getUserId() Specified by: getUserId\u00a0in interface\u00a0StatusDeletionNotice compareTo public\u00a0int\u00a0compareTo(StatusDeletionNotice\u00a0that) Specified by: compareTo\u00a0in interface\u00a0java.lang.Comparable&lt;StatusDeletionNotice&gt; equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface StatusListener All Superinterfaces: StreamListener All Known Subinterfaces: UserStreamListener All Known Implementing Classes: StatusAdapter, UserStreamAdapter public interface StatusListener extends StreamListener Since: Twitter4J 2.0.4 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onDeletionNotice(StatusDeletionNotice\u00a0statusDeletionNotice) Called upon deletionNotice notices. void onScrubGeo(long\u00a0userId, long\u00a0upToStatusId) Called upon location deletion messages. void onStallWarning(StallWarning\u00a0warning) Called when receiving stall warnings. void onStatus(Status\u00a0status)\u00a0 void onTrackLimitationNotice(int\u00a0numberOfLimitedStatuses) This notice will be sent each time a limited stream becomes unlimited. If this number is high and or rapidly increasing, it is an indication that your predicate is too broad, and you should consider a predicate with higher selectivity. Methods inherited from interface\u00a0twitter4j.StreamListener onException Method Detail onStatus void\u00a0onStatus(Status\u00a0status) onDeletionNotice void\u00a0onDeletionNotice(StatusDeletionNotice\u00a0statusDeletionNotice) Called upon deletionNotice notices. Clients are urged to honor deletionNotice requests and discard deleted statuses immediately. At times, status deletionNotice messages may arrive before the status. Even in this case, the late arriving status should be deleted from your backing store. Parameters: statusDeletionNotice - the deletionNotice notice Since: Twitter4J 2.1.0 See Also: Streaming API Concepts Twitter Developers onTrackLimitationNotice void\u00a0onTrackLimitationNotice(int\u00a0numberOfLimitedStatuses) This notice will be sent each time a limited stream becomes unlimited. If this number is high and or rapidly increasing, it is an indication that your predicate is too broad, and you should consider a predicate with higher selectivity. Parameters: numberOfLimitedStatuses - an enumeration of statuses that matched the track predicate but were administratively limited. Since: Twitter4J 2.1.0 See Also: Streaming API Concepts - Filter Limiting Twitter Developers, Streaming API Concepts - Parsing Responses Twitter Developers, Twitter Development Talk - Track API Limit message meaning onScrubGeo void\u00a0onScrubGeo(long\u00a0userId, long\u00a0upToStatusId) Called upon location deletion messages. Clients are urged to honor deletion requests and remove appropriate geolocation information from both the display and your backing store immediately. Note that in some cases the location deletion message may arrive before a tweet that lies within the deletion range arrives. You should still strip the location data. Parameters: userId - user id upToStatusId - up to status id Since: Twitter4J 2.1.9 onStallWarning void\u00a0onStallWarning(StallWarning\u00a0warning) Called when receiving stall warnings. Parameters: warning - StallWaning Since: Twitter4J 3.0.0 See Also: Streaming API request parameters - stall_warnings Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusStream &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusStream&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface StatusStream All Known Subinterfaces: UserStream All Known Implementing Classes: SiteStreamsImpl, StatusStreamBase, StatusStreamImpl, UserStreamImpl interface StatusStream Since: Twitter4J 2.0.4 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void close()\u00a0 void next(StatusListener\u00a0listener) Reads next status from this stream. Method Detail next void\u00a0next(StatusListener\u00a0listener) throws TwitterException Reads next status from this stream. Parameters: listener - a StatusListener implementation Throws: TwitterException - when the end of the stream has been reached. java.lang.IllegalStateException - when the end of the stream had been reached. close void\u00a0close() throws java.io.IOException Throws: java.io.IOException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusStreamBase &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusStreamBase&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:10,&quot;i10&quot;:6,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10,&quot;i39&quot;:10,&quot;i40&quot;:10,&quot;i41&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StatusStreamBase java.lang.Object twitter4j.StatusStreamBase All Implemented Interfaces: StatusStream Direct Known Subclasses: SiteStreamsImpl, StatusStreamImpl abstract class StatusStreamBase extends java.lang.Object implements StatusStream Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description (package private) class\u00a0 StatusStreamBase.StreamEvent\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private java.io.BufferedReader br\u00a0 (package private) Configuration CONF\u00a0 private Dispatcher dispatcher\u00a0 private ObjectFactory factory\u00a0 private java.io.InputStream is\u00a0 (package private) static Logger logger\u00a0 private HttpResponse response\u00a0 private boolean streamAlive\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description StatusStreamBase(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf)\u00a0 StatusStreamBase(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) DirectMessage asDirectMessage(JSONObject\u00a0json)\u00a0 (package private) long[] asFriendList(JSONObject\u00a0json)\u00a0 (package private) Status asStatus(JSONObject\u00a0json)\u00a0 (package private) User asUser(JSONObject\u00a0json)\u00a0 (package private) UserList asUserList(JSONObject\u00a0json)\u00a0 void close()\u00a0 (package private) void handleNextElement(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 abstract void next(StatusListener\u00a0listener) Reads next status from this stream. abstract void next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 (package private) void onBlock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected abstract void onClose()\u00a0 (package private) void onDelete(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onDirectMessage(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onDisconnectionNotice(java.lang.String\u00a0line, StreamListener[]\u00a0listeners)\u00a0 (package private) void onException(java.lang.Exception\u00a0e, StreamListener[]\u00a0listeners)\u00a0 void onException(java.lang.Exception\u00a0e, StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 (package private) void onFavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onFavoritedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onFollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 (package private) void onFriends(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onLimit(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onMessage(java.lang.String\u00a0rawString, RawStreamListener[]\u00a0listeners)\u00a0 (package private) void onQuotedTweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onRetweetedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onScrubGeo(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onSender(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onStallWarning(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onStatus(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUnblock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUnfavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUnfollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserDeletion(long\u00a0target, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListCreation(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListDestroyed(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListMemberAddition(JSONObject\u00a0addedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListMemberDeletion(JSONObject\u00a0deletedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListSubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListUnsubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserListUpdated(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserSuspension(long\u00a0target, StreamListener[]\u00a0listeners)\u00a0 (package private) void onUserUpdate(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 (package private) java.lang.String parseLine(java.lang.String\u00a0line)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail logger static final\u00a0Logger logger streamAlive private\u00a0boolean streamAlive br private\u00a0java.io.BufferedReader br is private\u00a0java.io.InputStream is response private\u00a0HttpResponse response dispatcher private final\u00a0Dispatcher dispatcher CONF final\u00a0Configuration CONF factory private\u00a0ObjectFactory factory Constructor Detail StatusStreamBase StatusStreamBase(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf) throws java.io.IOException Throws: java.io.IOException StatusStreamBase StatusStreamBase(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf) throws java.io.IOException Throws: java.io.IOException Method Detail parseLine java.lang.String\u00a0parseLine(java.lang.String\u00a0line) handleNextElement void\u00a0handleNextElement(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) throws TwitterException Throws: TwitterException onMessage void\u00a0onMessage(java.lang.String\u00a0rawString, RawStreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onSender void\u00a0onSender(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onStatus void\u00a0onStatus(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onDirectMessage void\u00a0onDirectMessage(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onDelete void\u00a0onDelete(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onLimit void\u00a0onLimit(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onStallWarning void\u00a0onStallWarning(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onScrubGeo void\u00a0onScrubGeo(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onFriends void\u00a0onFriends(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onFavorite void\u00a0onFavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUnfavorite void\u00a0onUnfavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onFollow void\u00a0onFollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUnfollow void\u00a0onUnfollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUserListMemberAddition void\u00a0onUserListMemberAddition(JSONObject\u00a0addedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onUserListMemberDeletion void\u00a0onUserListMemberDeletion(JSONObject\u00a0deletedMember, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onUserListSubscription void\u00a0onUserListSubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onUserListUnsubscription void\u00a0onUserListUnsubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onUserListCreation void\u00a0onUserListCreation(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onUserListUpdated void\u00a0onUserListUpdated(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Throws: TwitterException JSONException onUserListDestroyed void\u00a0onUserListDestroyed(JSONObject\u00a0source, JSONObject\u00a0userList, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUserUpdate void\u00a0onUserUpdate(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUserDeletion void\u00a0onUserDeletion(long\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUserSuspension void\u00a0onUserSuspension(long\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onBlock void\u00a0onBlock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onUnblock void\u00a0onUnblock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onRetweetedRetweet void\u00a0onRetweetedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onFavoritedRetweet void\u00a0onFavoritedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onQuotedTweet void\u00a0onQuotedTweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Throws: TwitterException onDisconnectionNotice void\u00a0onDisconnectionNotice(java.lang.String\u00a0line, StreamListener[]\u00a0listeners) onException void\u00a0onException(java.lang.Exception\u00a0e, StreamListener[]\u00a0listeners) onClose protected abstract\u00a0void\u00a0onClose() close public\u00a0void\u00a0close() throws java.io.IOException Specified by: close\u00a0in interface\u00a0StatusStream Throws: java.io.IOException asStatus Status\u00a0asStatus(JSONObject\u00a0json) throws TwitterException Throws: TwitterException asDirectMessage DirectMessage\u00a0asDirectMessage(JSONObject\u00a0json) throws TwitterException Throws: TwitterException asFriendList long[]\u00a0asFriendList(JSONObject\u00a0json) throws TwitterException Throws: TwitterException asUser User\u00a0asUser(JSONObject\u00a0json) throws TwitterException Throws: TwitterException asUserList UserList\u00a0asUserList(JSONObject\u00a0json) throws TwitterException Throws: TwitterException next public abstract\u00a0void\u00a0next(StatusListener\u00a0listener) throws TwitterException Description copied from interface:\u00a0StatusStream Reads next status from this stream. Specified by: next\u00a0in interface\u00a0StatusStream Parameters: listener - a StatusListener implementation Throws: TwitterException - when the end of the stream has been reached. next public abstract\u00a0void\u00a0next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) throws TwitterException Throws: TwitterException onException public\u00a0void\u00a0onException(java.lang.Exception\u00a0e, StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusStreamImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusStreamImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StatusStreamImpl java.lang.Object twitter4j.StatusStreamBase twitter4j.StatusStreamImpl All Implemented Interfaces: StatusStream Direct Known Subclasses: UserStreamImpl class StatusStreamImpl extends StatusStreamBase StatusStream implementation. This class is NOT intended to be extended but left non-final for the ease of mock testing. Since: Twitter4J 2.1.2 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested classes/interfaces inherited from class\u00a0twitter4j.StatusStreamBase StatusStreamBase.StreamEvent Field Summary Fields\u00a0 Modifier and Type Field and Description (package private) static RawStreamListener[] EMPTY\u00a0 (package private) java.lang.String line\u00a0 Fields inherited from class\u00a0twitter4j.StatusStreamBase CONF, logger Constructor Summary Constructors\u00a0 Constructor and Description StatusStreamImpl(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf)\u00a0 StatusStreamImpl(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void next(StatusListener\u00a0listener) Reads next status from this stream. void next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 protected void onClose()\u00a0 protected void onDelete(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 void onException(java.lang.Exception\u00a0e, StreamListener[]\u00a0listeners)\u00a0 protected void onLimit(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onMessage(java.lang.String\u00a0rawString, RawStreamListener[]\u00a0listeners)\u00a0 protected void onScrubGeo(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onStallWarning(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onStatus(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected java.lang.String parseLine(java.lang.String\u00a0line)\u00a0 Methods inherited from class\u00a0twitter4j.StatusStreamBase asDirectMessage, asFriendList, asStatus, asUser, asUserList, close, handleNextElement, onBlock, onDirectMessage, onDisconnectionNotice, onException, onFavorite, onFavoritedRetweet, onFollow, onFriends, onQuotedTweet, onRetweetedRetweet, onSender, onUnblock, onUnfavorite, onUnfollow, onUserDeletion, onUserListCreation, onUserListDestroyed, onUserListMemberAddition, onUserListMemberDeletion, onUserListSubscription, onUserListUnsubscription, onUserListUpdated, onUserSuspension, onUserUpdate Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail line java.lang.String line EMPTY static final\u00a0RawStreamListener[] EMPTY Constructor Detail StatusStreamImpl StatusStreamImpl(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf) throws java.io.IOException Throws: java.io.IOException StatusStreamImpl StatusStreamImpl(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf) throws java.io.IOException Throws: java.io.IOException Method Detail onClose protected\u00a0void\u00a0onClose() Specified by: onClose\u00a0in class\u00a0StatusStreamBase next public\u00a0void\u00a0next(StatusListener\u00a0listener) throws TwitterException Description copied from interface:\u00a0StatusStream Reads next status from this stream. Specified by: next\u00a0in interface\u00a0StatusStream Specified by: next\u00a0in class\u00a0StatusStreamBase Parameters: listener - a StatusListener implementation Throws: TwitterException - when the end of the stream has been reached. next public\u00a0void\u00a0next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) throws TwitterException Specified by: next\u00a0in class\u00a0StatusStreamBase Throws: TwitterException parseLine protected\u00a0java.lang.String\u00a0parseLine(java.lang.String\u00a0line) Overrides: parseLine\u00a0in class\u00a0StatusStreamBase onMessage protected\u00a0void\u00a0onMessage(java.lang.String\u00a0rawString, RawStreamListener[]\u00a0listeners) throws TwitterException Overrides: onMessage\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onStatus protected\u00a0void\u00a0onStatus(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onStatus\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onDelete protected\u00a0void\u00a0onDelete(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onDelete\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onLimit protected\u00a0void\u00a0onLimit(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onLimit\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onStallWarning protected\u00a0void\u00a0onStallWarning(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onStallWarning\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onScrubGeo protected\u00a0void\u00a0onScrubGeo(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onScrubGeo\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onException public\u00a0void\u00a0onException(java.lang.Exception\u00a0e, StreamListener[]\u00a0listeners) Overrides: onException\u00a0in class\u00a0StatusStreamBase Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StatusUpdate &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StatusUpdate&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StatusUpdate java.lang.Object twitter4j.StatusUpdate All Implemented Interfaces: java.io.Serializable public final class StatusUpdate extends java.lang.Object implements java.io.Serializable Since: Twitter4J 2.1.1 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private boolean displayCoordinates\u00a0 private long inReplyToStatusId\u00a0 private GeoLocation location\u00a0 private java.io.InputStream mediaBody\u00a0 private java.io.File mediaFile\u00a0 private long[] mediaIds\u00a0 private java.lang.String mediaName\u00a0 private java.lang.String placeId\u00a0 private boolean possiblySensitive\u00a0 private static long serialVersionUID\u00a0 private java.lang.String status\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description StatusUpdate(java.lang.String\u00a0status)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description private void appendParameter(java.lang.String\u00a0name, double\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void appendParameter(java.lang.String\u00a0name, long\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 private void appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params)\u00a0 (package private) HttpParameter[] asHttpParameterArray()\u00a0 StatusUpdate displayCoordinates(boolean\u00a0displayCoordinates)\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 long getInReplyToStatusId()\u00a0 GeoLocation getLocation()\u00a0 java.lang.String getPlaceId()\u00a0 java.lang.String getStatus()\u00a0 int hashCode()\u00a0 StatusUpdate inReplyToStatusId(long\u00a0inReplyToStatusId)\u00a0 boolean isDisplayCoordinates()\u00a0 (package private) boolean isForUpdateWithMedia()\u00a0 boolean isPossiblySensitive()\u00a0 StatusUpdate location(GeoLocation\u00a0location)\u00a0 StatusUpdate media(java.io.File\u00a0file)\u00a0 StatusUpdate media(java.lang.String\u00a0name, java.io.InputStream\u00a0body)\u00a0 StatusUpdate placeId(java.lang.String\u00a0placeId)\u00a0 StatusUpdate possiblySensitive(boolean\u00a0possiblySensitive)\u00a0 void setDisplayCoordinates(boolean\u00a0displayCoordinates)\u00a0 void setInReplyToStatusId(long\u00a0inReplyToStatusId)\u00a0 void setLocation(GeoLocation\u00a0location)\u00a0 void setMedia(java.io.File\u00a0file)\u00a0 void setMedia(java.lang.String\u00a0name, java.io.InputStream\u00a0body)\u00a0 void setMediaIds(long[]\u00a0mediaIds)\u00a0 void setPlaceId(java.lang.String\u00a0placeId)\u00a0 void setPossiblySensitive(boolean\u00a0possiblySensitive)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values status private final\u00a0java.lang.String status inReplyToStatusId private\u00a0long inReplyToStatusId location private\u00a0GeoLocation location placeId private\u00a0java.lang.String placeId displayCoordinates private\u00a0boolean displayCoordinates possiblySensitive private\u00a0boolean possiblySensitive mediaName private\u00a0java.lang.String mediaName mediaBody private transient\u00a0java.io.InputStream mediaBody mediaFile private\u00a0java.io.File mediaFile mediaIds private\u00a0long[] mediaIds Constructor Detail StatusUpdate public\u00a0StatusUpdate(java.lang.String\u00a0status) Method Detail getStatus public\u00a0java.lang.String\u00a0getStatus() getInReplyToStatusId public\u00a0long\u00a0getInReplyToStatusId() setInReplyToStatusId public\u00a0void\u00a0setInReplyToStatusId(long\u00a0inReplyToStatusId) inReplyToStatusId public\u00a0StatusUpdate\u00a0inReplyToStatusId(long\u00a0inReplyToStatusId) getLocation public\u00a0GeoLocation\u00a0getLocation() setLocation public\u00a0void\u00a0setLocation(GeoLocation\u00a0location) location public\u00a0StatusUpdate\u00a0location(GeoLocation\u00a0location) getPlaceId public\u00a0java.lang.String\u00a0getPlaceId() setPlaceId public\u00a0void\u00a0setPlaceId(java.lang.String\u00a0placeId) placeId public\u00a0StatusUpdate\u00a0placeId(java.lang.String\u00a0placeId) isDisplayCoordinates public\u00a0boolean\u00a0isDisplayCoordinates() setDisplayCoordinates public\u00a0void\u00a0setDisplayCoordinates(boolean\u00a0displayCoordinates) displayCoordinates public\u00a0StatusUpdate\u00a0displayCoordinates(boolean\u00a0displayCoordinates) setMedia public\u00a0void\u00a0setMedia(java.io.File\u00a0file) Parameters: file - media file Since: Twitter4J 2.2.5 media public\u00a0StatusUpdate\u00a0media(java.io.File\u00a0file) Parameters: file - media file Returns: this instance Since: Twitter4J 2.2.5 setMedia public\u00a0void\u00a0setMedia(java.lang.String\u00a0name, java.io.InputStream\u00a0body) Parameters: name - name body - media body as stream Since: Twitter4J 2.2.5 setMediaIds public\u00a0void\u00a0setMediaIds(long[]\u00a0mediaIds) Parameters: mediaIds - media ids Since: Twitter4J 4.0.2 isForUpdateWithMedia boolean\u00a0isForUpdateWithMedia() media public\u00a0StatusUpdate\u00a0media(java.lang.String\u00a0name, java.io.InputStream\u00a0body) Parameters: name - media name body - media body Returns: this instance Since: Twitter4J 2.2.5 setPossiblySensitive public\u00a0void\u00a0setPossiblySensitive(boolean\u00a0possiblySensitive) Parameters: possiblySensitive - possibly sensitive Since: Twitter4J 2.2.5 possiblySensitive public\u00a0StatusUpdate\u00a0possiblySensitive(boolean\u00a0possiblySensitive) Parameters: possiblySensitive - possibly sensitive Returns: this instance Since: Twitter4J 2.2.5 isPossiblySensitive public\u00a0boolean\u00a0isPossiblySensitive() Returns: possibly sensitive Since: Twitter4J 2.2.5 asHttpParameterArray HttpParameter[]\u00a0asHttpParameterArray() appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, java.lang.String\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, double\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) appendParameter private\u00a0void\u00a0appendParameter(java.lang.String\u00a0name, long\u00a0value, java.util.List&lt;HttpParameter&gt;\u00a0params) equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StreamController &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StreamController&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StreamController java.lang.Object twitter4j.StreamController public class StreamController extends java.lang.Object Since: Twitter4J 2.2.6 Author: Yusuke Yamamoto - yusuke at twitter.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description class\u00a0 StreamController.FriendsIDs\u00a0 class\u00a0 StreamController.User\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private Authorization AUTH\u00a0 private java.lang.String controlURI\u00a0 private HttpClient http\u00a0 private java.lang.Object lock\u00a0 private static Logger logger\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description StreamController(Configuration\u00a0conf)\u00a0 StreamController(HttpClient\u00a0http, Authorization\u00a0auth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description java.lang.String addUsers(long...\u00a0userIds)\u00a0 (package private) StreamController.User createUser(JSONObject\u00a0json)\u00a0 (package private) void ensureControlURISet()\u00a0 (package private) java.lang.String getControlURI()\u00a0 StreamController.FriendsIDs getFriendsIDs(long\u00a0userId, long\u00a0cursor)\u00a0 ControlStreamInfo getInfo()\u00a0 java.lang.String removeUsers(long...\u00a0userIds)\u00a0 (package private) void setControlURI(java.lang.String\u00a0controlURI)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail controlURI private\u00a0java.lang.String controlURI http private final\u00a0HttpClient http AUTH private final\u00a0Authorization AUTH logger private static final\u00a0Logger logger lock private final\u00a0java.lang.Object lock Constructor Detail StreamController StreamController(HttpClient\u00a0http, Authorization\u00a0auth) StreamController StreamController(Configuration\u00a0conf) Method Detail setControlURI void\u00a0setControlURI(java.lang.String\u00a0controlURI) getControlURI java.lang.String\u00a0getControlURI() ensureControlURISet void\u00a0ensureControlURISet() throws TwitterException Throws: TwitterException getInfo public\u00a0ControlStreamInfo\u00a0getInfo() throws TwitterException Throws: TwitterException addUsers public\u00a0java.lang.String\u00a0addUsers(long...\u00a0userIds) throws TwitterException Throws: TwitterException removeUsers public\u00a0java.lang.String\u00a0removeUsers(long...\u00a0userIds) throws TwitterException Throws: TwitterException getFriendsIDs public\u00a0StreamController.FriendsIDs\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor) throws TwitterException Throws: TwitterException createUser StreamController.User\u00a0createUser(JSONObject\u00a0json) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StreamImplementation &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StreamImplementation&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface StreamImplementation interface StreamImplementation Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void close()\u00a0 void next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 void onException(java.lang.Exception\u00a0ex, StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners)\u00a0 Method Detail next void\u00a0next(StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) close void\u00a0close() onException void\u00a0onException(java.lang.Exception\u00a0ex, StreamListener[]\u00a0listeners, RawStreamListener[]\u00a0rawStreamListeners) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StreamListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StreamListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface StreamListener All Known Subinterfaces: RawStreamListener, SiteStreamsListener, StatusListener, UserStreamListener All Known Implementing Classes: SiteStreamsAdapter, StatusAdapter, UserStreamAdapter interface StreamListener Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onException(java.lang.Exception\u00a0ex)\u00a0 Method Detail onException void\u00a0onException(java.lang.Exception\u00a0ex) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method StreamingReadTimeoutConfiguration &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;StreamingReadTimeoutConfiguration&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class StreamingReadTimeoutConfiguration java.lang.Object twitter4j.StreamingReadTimeoutConfiguration class StreamingReadTimeoutConfiguration extends java.lang.Object Field Summary Fields\u00a0 Modifier and Type Field and Description (package private) Configuration nestedConf\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description StreamingReadTimeoutConfiguration(Configuration\u00a0httpConf)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description int getHttpConnectionTimeout()\u00a0 java.lang.String getHttpProxyHost()\u00a0 java.lang.String getHttpProxyPassword()\u00a0 int getHttpProxyPort()\u00a0 java.lang.String getHttpProxyUser()\u00a0 int getHttpReadTimeout()\u00a0 int getHttpRetryCount()\u00a0 int getHttpRetryIntervalSeconds()\u00a0 boolean isGZIPEnabled()\u00a0 boolean isPrettyDebugEnabled()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail nestedConf final\u00a0Configuration nestedConf Constructor Detail StreamingReadTimeoutConfiguration StreamingReadTimeoutConfiguration(Configuration\u00a0httpConf) Method Detail getHttpProxyHost public\u00a0java.lang.String\u00a0getHttpProxyHost() getHttpProxyPort public\u00a0int\u00a0getHttpProxyPort() getHttpProxyUser public\u00a0java.lang.String\u00a0getHttpProxyUser() getHttpProxyPassword public\u00a0java.lang.String\u00a0getHttpProxyPassword() getHttpConnectionTimeout public\u00a0int\u00a0getHttpConnectionTimeout() getHttpReadTimeout public\u00a0int\u00a0getHttpReadTimeout() getHttpRetryCount public\u00a0int\u00a0getHttpRetryCount() getHttpRetryIntervalSeconds public\u00a0int\u00a0getHttpRetryIntervalSeconds() isPrettyDebugEnabled public\u00a0boolean\u00a0isPrettyDebugEnabled() isGZIPEnabled public\u00a0boolean\u00a0isGZIPEnabled() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SuggestedUsersResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SuggestedUsersResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SuggestedUsersResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface SuggestedUsersResources Since: Twitter4J 3.0.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description ResponseList&lt;User&gt; getMemberSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. ResponseList&lt;Category&gt; getSuggestedUserCategories() Access to Twitter's suggested user list. ResponseList&lt;User&gt; getUserSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. Method Detail getUserSuggestions ResponseList&lt;User&gt;\u00a0getUserSuggestions(java.lang.String\u00a0categorySlug) throws TwitterException Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. This method calls https://api.twitter.com/1.1/users/suggestions/:slug.json Parameters: categorySlug - slug Returns: list of suggested users Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET users/suggestions/:slug Twitter Developers getSuggestedUserCategories ResponseList&lt;Category&gt;\u00a0getSuggestedUserCategories() throws TwitterException Access to Twitter's suggested user list. This returns the list of suggested user categories. The category can be used in the users/suggestions/category endpoint to get the users in that category. This method calls https://api.twitter.com/1.1/users/suggestions Returns: list of suggested user categories. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET users/suggestions Twitter Developers getMemberSuggestions ResponseList&lt;User&gt;\u00a0getMemberSuggestions(java.lang.String\u00a0categorySlug) throws TwitterException Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/users/suggestions/:slug/members.json Parameters: categorySlug - slug Returns: list of suggested users Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: GET users/suggestions/:slug/members Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SuggestedUsersResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SuggestedUsersResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface SuggestedUsersResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface SuggestedUsersResourcesAsync Since: Twitter4J 3.0.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getMemberSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. void getSuggestedUserCategories() Access to Twitter's suggested user list. void getUserSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. Method Detail getUserSuggestions void\u00a0getUserSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. This method calls https://api.twitter.com/1.1/users/suggestions/:slug.json Parameters: categorySlug - slug Since: Twitter4J 2.1.1 See Also: GET users/suggestions/:slug Twitter Developers getSuggestedUserCategories void\u00a0getSuggestedUserCategories() Access to Twitter's suggested user list. This returns the list of suggested user categories. The category can be used in the users/suggestions/category endpoint to get the users in that category. This method calls https://api.twitter.com/1.1/users/suggestions Since: Twitter4J 2.1.1 See Also: GET users/suggestions Twitter Developers getMemberSuggestions void\u00a0getMemberSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/users/suggestions/:slug/members.json Parameters: categorySlug - slug Since: Twitter4J 2.1.9 See Also: #newtwitter and the API - Twitter API Announcements Google Group Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method SymbolEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;SymbolEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface SymbolEntity All Superinterfaces: java.io.Serializable, TweetEntity public interface SymbolEntity extends TweetEntity, java.io.Serializable Since: Twitter4J 3.0.4 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getEnd() Returns the index of the end character of the symbol. int getStart() Returns the index of the start character of the symbol. Methods inherited from interface\u00a0twitter4j.TweetEntity getText Method Detail getStart int\u00a0getStart() Returns the index of the start character of the symbol. Specified by: getStart\u00a0in interface\u00a0TweetEntity Returns: the index of the start character of the symbol getEnd int\u00a0getEnd() Returns the index of the end character of the symbol. Specified by: getEnd\u00a0in interface\u00a0TweetEntity Returns: the index of the end character of the symbol Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TimeSpanConverter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TimeSpanConverter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.util Class TimeSpanConverter java.lang.Object twitter4j.util.TimeSpanConverter All Implemented Interfaces: java.io.Serializable public final class TimeSpanConverter extends java.lang.Object implements java.io.Serializable Since: Twitter4J 2.1.0 Author: Joern Huxhorn - jhuxhorn at googlemail.com, Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private static int A_MINUTE_AGO\u00a0 private static int AN_HOUR_AGO\u00a0 private java.text.SimpleDateFormat dateMonth\u00a0 private java.text.SimpleDateFormat dateMonthYear\u00a0 private java.text.MessageFormat[] formats\u00a0 private static int N_HOURS_AGO\u00a0 private static int N_MINUTES_AGO\u00a0 private static int N_SECONDS_AGO\u00a0 private static int NOW\u00a0 private static int ONE_DAY_IN_SECONDS\u00a0 private static int ONE_HOUR_IN_SECONDS\u00a0 private static int ONE_MONTH_IN_SECONDS\u00a0 private static long serialVersionUID\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description TimeSpanConverter() Constructs an instance with default locale TimeSpanConverter(java.util.Locale\u00a0locale) Constructs an instance with the specified locale Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description java.lang.String toTimeSpanString(java.util.Date\u00a0date)\u00a0 private java.lang.String toTimeSpanString(int\u00a0deltaInSeconds)\u00a0 java.lang.String toTimeSpanString(long\u00a0milliseconds)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail ONE_HOUR_IN_SECONDS private static final\u00a0int ONE_HOUR_IN_SECONDS See Also: Constant Field Values ONE_DAY_IN_SECONDS private static final\u00a0int ONE_DAY_IN_SECONDS See Also: Constant Field Values ONE_MONTH_IN_SECONDS private static final\u00a0int ONE_MONTH_IN_SECONDS See Also: Constant Field Values serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values formats private final\u00a0java.text.MessageFormat[] formats dateMonth private final\u00a0java.text.SimpleDateFormat dateMonth dateMonthYear private final\u00a0java.text.SimpleDateFormat dateMonthYear NOW private static final\u00a0int NOW See Also: Constant Field Values N_SECONDS_AGO private static final\u00a0int N_SECONDS_AGO See Also: Constant Field Values A_MINUTE_AGO private static final\u00a0int A_MINUTE_AGO See Also: Constant Field Values N_MINUTES_AGO private static final\u00a0int N_MINUTES_AGO See Also: Constant Field Values AN_HOUR_AGO private static final\u00a0int AN_HOUR_AGO See Also: Constant Field Values N_HOURS_AGO private static final\u00a0int N_HOURS_AGO See Also: Constant Field Values Constructor Detail TimeSpanConverter public\u00a0TimeSpanConverter() Constructs an instance with default locale TimeSpanConverter public\u00a0TimeSpanConverter(java.util.Locale\u00a0locale) Constructs an instance with the specified locale Parameters: locale - locale Method Detail toTimeSpanString public\u00a0java.lang.String\u00a0toTimeSpanString(java.util.Date\u00a0date) toTimeSpanString public\u00a0java.lang.String\u00a0toTimeSpanString(long\u00a0milliseconds) toTimeSpanString private\u00a0java.lang.String\u00a0toTimeSpanString(int\u00a0deltaInSeconds) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TimeZone &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TimeZone&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TimeZone All Superinterfaces: java.io.Serializable public interface TimeZone extends java.io.Serializable Author: Alessandro Bahgat - ale.bahgat at gmail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getName()\u00a0 java.lang.String tzinfoName()\u00a0 int utcOffset()\u00a0 Method Detail getName java.lang.String\u00a0getName() tzinfoName java.lang.String\u00a0tzinfoName() utcOffset int\u00a0utcOffset() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TimelinesResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TimelinesResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface TimelinesResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface TimelinesResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description ResponseList&lt;Status&gt; getHomeTimeline() Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. ResponseList&lt;Status&gt; getHomeTimeline(Paging\u00a0paging) Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. ResponseList&lt;Status&gt; getMentionsTimeline() Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. ResponseList&lt;Status&gt; getMentionsTimeline(Paging\u00a0paging) Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. ResponseList&lt;Status&gt; getRetweetsOfMe() Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. ResponseList&lt;Status&gt; getRetweetsOfMe(Paging\u00a0paging) Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. ResponseList&lt;Status&gt; getUserTimeline() Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(long\u00a0userId) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(java.lang.String\u00a0screenName) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. Method Detail getMentionsTimeline ResponseList&lt;Status&gt;\u00a0getMentionsTimeline() throws TwitterException Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. This method calls https://api.twitter.com/1.1/statuses/mentions_timeline Returns: the 20 most recent replies Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET statuses/mentions Twitter Developers getMentionsTimeline ResponseList&lt;Status&gt;\u00a0getMentionsTimeline(Paging\u00a0paging) throws TwitterException Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. This method calls https://api.twitter.com/1.1/statuses/mentions_timeline Parameters: paging - controls pagination. Supports since_id, max_id, zcount parameters. Returns: the 20 most recent replies Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET statuses/mentions Twitter Developers getUserTimeline ResponseList&lt;Status&gt;\u00a0getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) throws TwitterException Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline.json Parameters: screenName - specifies the screen name of the user for whom to return the user_timeline paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of the user Timeline Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline ResponseList&lt;Status&gt;\u00a0getUserTimeline(long\u00a0userId, Paging\u00a0paging) throws TwitterException Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline.json Parameters: userId - specifies the ID of the user for whom to return the user_timeline paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of the user Timeline Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline ResponseList&lt;Status&gt;\u00a0getUserTimeline(java.lang.String\u00a0screenName) throws TwitterException Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: screenName - specifies the screen name of the user for whom to return the user_timeline Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline ResponseList&lt;Status&gt;\u00a0getUserTimeline(long\u00a0userId) throws TwitterException Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: userId - specifies the ID of the user for whom to return the user_timeline Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline ResponseList&lt;Status&gt;\u00a0getUserTimeline() throws TwitterException Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline ResponseList&lt;Status&gt;\u00a0getUserTimeline(Paging\u00a0paging) throws TwitterException Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: GET statuses/user_timeline Twitter Developers getHomeTimeline ResponseList&lt;Status&gt;\u00a0getHomeTimeline() throws TwitterException Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Returns: list of the home Timeline Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET statuses/home_timeline Twitter Developers getHomeTimeline ResponseList&lt;Status&gt;\u00a0getHomeTimeline(Paging\u00a0paging) throws TwitterException Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of the home Timeline Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET statuses/home_timeline Twitter Developers getRetweetsOfMe ResponseList&lt;Status&gt;\u00a0getRetweetsOfMe() throws TwitterException Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Returns: the 20 most recent tweets of the authenticated user that have been retweeted by others. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET statuses/retweets_of_me Twitter Developers getRetweetsOfMe ResponseList&lt;Status&gt;\u00a0getRetweetsOfMe(Paging\u00a0paging) throws TwitterException Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: the 20 most recent tweets of the authenticated user that have been retweeted by others. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: GET statuses/retweets_of_me Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TimelinesResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TimelinesResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface TimelinesResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface TimelinesResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getHomeTimeline() Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. void getHomeTimeline(Paging\u00a0paging) Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. void getMentions() Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. void getMentions(Paging\u00a0paging) Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. void getRetweetsOfMe() Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. void getRetweetsOfMe(Paging\u00a0paging) Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. void getUserTimeline() Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(long\u00a0userId) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(java.lang.String\u00a0screenName) Returns the 20 most recent statuses posted from the authenticating user. void getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. Method Detail getMentions void\u00a0getMentions() Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. Replies are only available to the authenticating user; you can not request a list of replies to another user whether public or protected. This method calls https://api.twitter.com/1.1/statuses/mentions Since: Twitter4J 2.0.1 See Also: GET statuses/mentions Twitter Developers getMentions void\u00a0getMentions(Paging\u00a0paging) Returns the 20 most recent replies (status updates prefixed with @username) to the authenticating user. Replies are only available to the authenticating user; you can not request a list of replies to another user whether public or protected. This method calls https://api.twitter.com/1.1/statuses/mentions Parameters: paging - controls pagination Since: Twitter4J 2.0.1 See Also: GET statuses/mentions Twitter Developers getUserTimeline void\u00a0getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: screenName - Specifies the screen name of the user for whom to return the user_timeline. paging - controls pagination Since: Twitter4J 2.0.1 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline void\u00a0getUserTimeline(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: userId - Specifies the ID of the user for whom to return the user_timeline. paging - controls pagination Since: Twitter4J 2.1.0 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline void\u00a0getUserTimeline(Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: paging - controls pagination Since: Twitter4J 2.0.1 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline void\u00a0getUserTimeline(java.lang.String\u00a0screenName) Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: screenName - Specifies the screen name of the user for whom to return the user_timeline. See Also: GET statuses/user_timeline Twitter Developers getUserTimeline void\u00a0getUserTimeline(long\u00a0userId) Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Parameters: userId - Specifies the ID of the user for whom to return the user_timeline. Since: Twitter4J 2.1.0 See Also: GET statuses/user_timeline Twitter Developers getUserTimeline void\u00a0getUserTimeline() Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline See Also: GET statuses/user_timeline Twitter Developers getHomeTimeline void\u00a0getHomeTimeline() Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Since: Twitter4J 2.0.10 See Also: GET statuses/home_timeline Twitter Developers getHomeTimeline void\u00a0getHomeTimeline(Paging\u00a0paging) Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Parameters: paging - controls pagination Since: Twitter4J 2.0.10 See Also: GET statuses/home_timeline Twitter Developers getRetweetsOfMe void\u00a0getRetweetsOfMe() Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Since: Twitter4J 2.0.10 See Also: GET statuses/retweets_of_me Twitter Developers getRetweetsOfMe void\u00a0getRetweetsOfMe(Paging\u00a0paging) Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Since: Twitter4J 2.0.10 See Also: GET statuses/retweets_of_me Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Trend &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Trend&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Trend All Superinterfaces: java.io.Serializable public interface Trend extends java.io.Serializable A data interface representing Trend. Since: Twitter4J 2.0.2 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getName()\u00a0 java.lang.String getQuery()\u00a0 java.lang.String getURL()\u00a0 Method Detail getName java.lang.String\u00a0getName() getURL java.lang.String\u00a0getURL() getQuery java.lang.String\u00a0getQuery() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Trends &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Trends&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Trends All Superinterfaces: java.lang.Comparable&lt;Trends&gt;, java.io.Serializable, TwitterResponse public interface Trends extends TwitterResponse, java.lang.Comparable&lt;Trends&gt;, java.io.Serializable A data class representing Trends. Since: Twitter4J 2.0.2 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.util.Date getAsOf()\u00a0 Location getLocation() Returns the location associated with the trends. This method is effective only with getLocalTrends() method. i.e. java.util.Date getTrendAt()\u00a0 Trend[] getTrends()\u00a0 Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Methods inherited from interface\u00a0java.lang.Comparable compareTo Method Detail getTrends Trend[]\u00a0getTrends() getLocation Location\u00a0getLocation() Returns the location associated with the trends. This method is effective only with getLocalTrends() method. i.e. The return value of this method will be null with Search API Methods (getTrends(), getCurrentTrends(), getDailyTrends(), and getWeeklyTrends()). Returns: location Since: Twitter4J 2.1.1 getAsOf java.util.Date\u00a0getAsOf() getTrendAt java.util.Date\u00a0getTrendAt() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TrendsResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TrendsResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface TrendsResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface TrendsResources Since: Twitter4J 2.1.3 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description ResponseList&lt;Location&gt; getAvailableTrends() Returns the locations that Twitter has trending topic information for. ResponseList&lt;Location&gt; getClosestTrends(GeoLocation\u00a0location) Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. Trends getPlaceTrends(int\u00a0woeid) Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. Method Detail getPlaceTrends Trends\u00a0getPlaceTrends(int\u00a0woeid) throws TwitterException Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. Requesting more frequently than that will not return any more data, and will count against your rate limit usage. This method calls https://api.twitter.com/1.1/trends/place.json Parameters: woeid - The Yahoo! Where On Earth ID of the location to return trending information for. Global information is available by using 1 as the WOEID. Returns: trends Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET trends/place Twitter Developers getAvailableTrends ResponseList&lt;Location&gt;\u00a0getAvailableTrends() throws TwitterException Returns the locations that Twitter has trending topic information for. The response is an array of &quot;locations&quot; that encode the location's WOEID (a Yahoo! Where On Earth ID) and some other human-readable information such as a canonical name and country the location belongs in. This method calls https://api.twitter.com/1.1/trends/available.json Returns: the locations Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET trends/available Twitter Developers getClosestTrends ResponseList&lt;Location&gt;\u00a0getClosestTrends(GeoLocation\u00a0location) throws TwitterException Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. This method calls https://api.twitter.com/1.1/trends/closest.json Parameters: location - the available trend locations will be sorted by distance to the lat and long passed in. The sort is nearest to furthest. Returns: the locations Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET trends/closest Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TrendsResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TrendsResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface TrendsResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface TrendsResourcesAsync Since: Twitter4J 2.1.3 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void getAvailableTrends() Retrieves the locations that Twitter has trending topic information for. void getClosestTrends(GeoLocation\u00a0location) Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. void getPlaceTrends(int\u00a0woeid) Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. Method Detail getPlaceTrends void\u00a0getPlaceTrends(int\u00a0woeid) Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. Requesting more frequently than that will not return any more data, and will count against your rate limit usage. This method calls https://api.twitter.com/1.1/trends/place.json Parameters: woeid - The Yahoo! Where On Earth ID of the location to return trending information for. Global information is available by using 1 as the WOEID. Since: Twitter4J 3.0.2 See Also: GET trends/place Twitter Developers getAvailableTrends void\u00a0getAvailableTrends() Retrieves the locations that Twitter has trending topic information for. The response is an array of &quot;locations&quot; that encode the location's WOEID (a Yahoo! Where On Earth ID) and some other human-readable information such as a canonical name and country the location belongs in. This method calls https://api.twitter.com/1.1/trends/available.json Since: Twitter4J 2.1.1 See Also: GET trends/available Twitter Developers getClosestTrends void\u00a0getClosestTrends(GeoLocation\u00a0location) Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. This method calls https://api.twitter.com/1.1/trends/closest.json Parameters: location - the available trend locations will be sorted by distance to the lat and long passed in. The sort is nearest to furthest. Since: Twitter4J 3.0.2 See Also: GET trends/closest Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TweetEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TweetEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TweetEntity All Known Subinterfaces: ExtendedMediaEntity, HashtagEntity, MediaEntity, SymbolEntity, URLEntity, UserMentionEntity public interface TweetEntity super interface of UserMentionEntity, URLEntity and HashtagEntity Since: Twitter4J 3.0.4 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getEnd() Returns the index of the end character of the entity in the tweet. int getStart() Returns the index of the start character of the entity in the tweet. java.lang.String getText() Returns the text of the entity Method Detail getText java.lang.String\u00a0getText() Returns the text of the entity Returns: the text of the entity getStart int\u00a0getStart() Returns the index of the start character of the entity in the tweet. Returns: the index of the start character of the entity in the tweet getEnd int\u00a0getEnd() Returns the index of the end character of the entity in the tweet. Returns: the index of the end character of the entity in the tweet Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TweetsResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TweetsResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface TweetsResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface TweetsResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description Status destroyStatus(long\u00a0statusId) Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. OEmbed getOEmbed(OEmbedRequest\u00a0req) Returns information allowing the creation of an embedded representation of a Tweet on third party sites. IDs getRetweeterIds(long\u00a0statusId, int\u00a0count, long\u00a0cursor) Returns a collection of up to count user IDs belonging to users who have retweeted the tweet specified by the id parameter. IDs getRetweeterIds(long\u00a0statusId, long\u00a0cursor) Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter. ResponseList&lt;Status&gt; getRetweets(long\u00a0statusId) Returns up to 100 of the first retweets of a given tweet. ResponseList&lt;Status&gt; lookup(long...\u00a0ids) Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. Status retweetStatus(long\u00a0statusId) Retweets a tweet. Status showStatus(long\u00a0id) Returns a single status, specified by the id parameter below. Status updateStatus(StatusUpdate\u00a0latestStatus) Updates the authenticating user's status. Status updateStatus(java.lang.String\u00a0status) Updates the authenticating user's status. UploadedMedia uploadMedia(java.io.File\u00a0mediaFile) Uploads media image to be attached via updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json UploadedMedia uploadMedia(java.lang.String\u00a0fileName, java.io.InputStream\u00a0media) Uploads media image to be attached via updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json Method Detail getRetweets ResponseList&lt;Status&gt;\u00a0getRetweets(long\u00a0statusId) throws TwitterException Returns up to 100 of the first retweets of a given tweet. This method calls https://api.twitter.com/1.1/statuses/retweets Parameters: statusId - The numerical ID of the tweet you want the retweets of. Returns: the retweets of a given tweet Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: Tweets Resources \u203a statuses/retweets/:id getRetweeterIds IDs\u00a0getRetweeterIds(long\u00a0statusId, long\u00a0cursor) throws TwitterException Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter. This method calls https://api.twitter.com/1.1/get/statuses/retweeters/ids Parameters: statusId - The numerical ID of the tweet you want the retweeters of. cursor - The cursor of the page to fetch. Use -1 to start. Returns: the retweets of a given tweet Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.5 See Also: Tweets Resources \u203a statuses/retweeters/ids getRetweeterIds IDs\u00a0getRetweeterIds(long\u00a0statusId, int\u00a0count, long\u00a0cursor) throws TwitterException Returns a collection of up to count user IDs belonging to users who have retweeted the tweet specified by the id parameter. This method calls https://api.twitter.com/1.1/get/statuses/retweeters/ids Parameters: statusId - The numerical ID of the tweet you want the retweeters of. count - The maximum number of retweeter IDs to retrieve. Must be between 1 and 200, inclusive. cursor - The cursor of the page to fetch. Use -1 to start. Returns: the retweets of a given tweet Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.5 See Also: Tweets Resources \u203a statuses/retweeters/ids showStatus Status\u00a0showStatus(long\u00a0id) throws TwitterException Returns a single status, specified by the id parameter below. The status's author will be returned inline. This method calls https://api.twitter.com/1.1/statuses/show Parameters: id - the numerical ID of the status you're trying to retrieve Returns: a single status Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: GET statuses/show/:id Twitter Developers destroyStatus Status\u00a0destroyStatus(long\u00a0statusId) throws TwitterException Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. This method calls https://api.twitter.com/1.1/statuses/destroy Parameters: statusId - The ID of the status to destroy. Returns: the deleted status Throws: TwitterException - when Twitter service or network is unavailable Since: 1.0.5 See Also: POST statuses/destroy/:id Twitter Developers updateStatus Status\u00a0updateStatus(java.lang.String\u00a0status) throws TwitterException Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. This method calls https://api.twitter.com/1.1/statuses/update Parameters: status - the text of your status update Returns: the latest status Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST statuses/update Twitter Developers updateStatus Status\u00a0updateStatus(StatusUpdate\u00a0latestStatus) throws TwitterException Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. This method calls https://api.twitter.com/1.1/statuses/update or This method calls https://upload.twitter.com/1/statuses/update_with_media Parameters: latestStatus - the latest status to be updated. Returns: the latest status Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: POST statuses/update Twitter Developers retweetStatus Status\u00a0retweetStatus(long\u00a0statusId) throws TwitterException Retweets a tweet. Returns the original tweet with retweet details embedded. This method calls https://api.twitter.com/1.1/statuses/retweet Parameters: statusId - The ID of the status to retweet. Returns: the retweeted status Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: POST statuses/retweet/:id Twitter Developers getOEmbed OEmbed\u00a0getOEmbed(OEmbedRequest\u00a0req) throws TwitterException Returns information allowing the creation of an embedded representation of a Tweet on third party sites. See the oEmbed specification for information about the response format. While this endpoint allows a bit of customization for the final appearance of the embedded Tweet, be aware that the appearance of the rendered Tweet may change over time to be consistent with Twitter's Display Requirements. Do not rely on any class or id parameters to stay constant in the returned markup. This method calls https://api.twitter.com/1.1/statuses/oembed.json Parameters: req - request Returns: information allowing the creation of an embedded representation of a Tweet on third party sites Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET statuses/oembed Twitter Developers lookup ResponseList&lt;Status&gt;\u00a0lookup(long...\u00a0ids) throws TwitterException Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. This method is especially useful to get the details (hydrate) a collection of Tweet IDs. This method calls https://api.twitter.com/1.1/statuses/lookup.json Parameters: ids - array of the ids to lookup Returns: list of the tweets Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET statuses/lookup uploadMedia UploadedMedia\u00a0uploadMedia(java.io.File\u00a0mediaFile) throws TwitterException Uploads media image to be attached via updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json Parameters: mediaFile - the latest status to be updated. Returns: upload result Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: POST statuses/update Twitter Developers, Multiple Media Entities in Statuses uploadMedia UploadedMedia\u00a0uploadMedia(java.lang.String\u00a0fileName, java.io.InputStream\u00a0media) throws TwitterException Uploads media image to be attached via updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json Parameters: fileName - media file name media - media body as stream Returns: upload result Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.3 See Also: POST statuses/update Twitter Developers, Multiple Media Entities in Statuses Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TweetsResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TweetsResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface TweetsResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface TweetsResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void destroyStatus(long\u00a0statusId) Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. void getOEmbed(OEmbedRequest\u00a0req) Returns information allowing the creation of an embedded representation of a Tweet on third party sites. void getRetweets(long\u00a0statusId) Returns up to 100 of the first retweets of a given tweet. void lookup(long...\u00a0ids) Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. void retweetStatus(long\u00a0statusId) Retweets a tweet. void showStatus(long\u00a0id) Returns a single status, specified by the id parameter below. void updateStatus(StatusUpdate\u00a0status) Updates the authenticating user's status. void updateStatus(java.lang.String\u00a0status) Updates the authenticating user's status. Method Detail getRetweets void\u00a0getRetweets(long\u00a0statusId) Returns up to 100 of the first retweets of a given tweet. This method calls https://api.twitter.com/1.1/statuses/retweets Parameters: statusId - The numerical ID of the tweet you want the retweets of. Since: Twitter4J 2.1.0 See Also: Tweets Resources \u203a statuses/retweets/:id showStatus void\u00a0showStatus(long\u00a0id) Returns a single status, specified by the id parameter below. The status's author will be returned inline. This method calls https://api.twitter.com/1.1/statuses/show Parameters: id - int Since: Twitter4J 2.0.1 See Also: GET statuses/show/:id Twitter Developers destroyStatus void\u00a0destroyStatus(long\u00a0statusId) Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. This method calls https://api.twitter.com/1.1/statuses/destroy Parameters: statusId - String Since: 1.1.2 See Also: POST statuses/destroy/:id Twitter Developers updateStatus void\u00a0updateStatus(java.lang.String\u00a0status) Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. This method calls https://api.twitter.com/1.1/statuses/update Parameters: status - String Since: Twitter4J 2.0.1 See Also: POST statuses/update Twitter Developers updateStatus void\u00a0updateStatus(StatusUpdate\u00a0status) Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. Statuses over 140 characters will be forcibly truncated. This method calls https://api.twitter.com/1.1/statuses/update Parameters: status - the latest status to be updated. Since: Twitter4J 2.1.1 See Also: POST statuses/update Twitter Developers retweetStatus void\u00a0retweetStatus(long\u00a0statusId) Retweets a tweet. Returns the original tweet with retweet details embedded. This method calls https://api.twitter.com/1.1/statuses/retweet Parameters: statusId - The ID of the status to retweet. Since: Twitter4J 2.0.10 See Also: POST statuses/retweet/:id Twitter Developers getOEmbed void\u00a0getOEmbed(OEmbedRequest\u00a0req) Returns information allowing the creation of an embedded representation of a Tweet on third party sites. See the oEmbed specification for information about the response format. While this endpoint allows a bit of customization for the final appearance of the embedded Tweet, be aware that the appearance of the rendered Tweet may change over time to be consistent with Twitter's Display Requirements. Do not rely on any class or id parameters to stay constant in the returned markup. This method calls https://api.twitter.com/1.1/statuses/oembed.json Parameters: req - request Since: Twitter4J 3.0.2 See Also: GET statuses/oembed Twitter Developers lookup void\u00a0lookup(long...\u00a0ids) Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. This method is especially useful to get the details (hydrate) a collection of Tweet IDs. This method calls https://api.twitter.com/1.1/statuses/lookup.json Parameters: ids - array of the ids to lookup Since: Twitter4J 4.0.2 See Also: GET statuses/lookup Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwippleUpload &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwippleUpload&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class TwippleUpload java.lang.Object twitter4j.media.AbstractImageUploadImpl twitter4j.media.TwippleUpload All Implemented Interfaces: ImageUpload class TwippleUpload extends AbstractImageUploadImpl Since: Twitter4J 2.1.8 Author: withgod - noname at withgod.jp Field Summary Fields inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl apiKey, headers, httpResponse, image, message, oauth, postParameter, TWITTER_VERIFY_CREDENTIALS_JSON_V1_1, uploadUrl Constructor Summary Constructors\u00a0 Constructor and Description TwippleUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description protected java.lang.String postUpload()\u00a0 protected void preUpload()\u00a0 Methods inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl appendHttpParameters, equals, generateVerifyCredentialsAuthorizationHeader, generateVerifyCredentialsAuthorizationURL, hashCode, toString, upload, upload, upload, upload Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Constructor Detail TwippleUpload public\u00a0TwippleUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth) Method Detail postUpload protected\u00a0java.lang.String\u00a0postUpload() throws TwitterException Specified by: postUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException preUpload protected\u00a0void\u00a0preUpload() throws TwitterException Specified by: preUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Twitter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Twitter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface Twitter All Superinterfaces: DirectMessagesResources, FavoritesResources, FriendsFollowersResources, HelpResources, ListsResources, OAuth2Support, OAuthSupport, PlacesGeoResources, SavedSearchesResources, SearchResource, java.io.Serializable, SpamReportingResource, SuggestedUsersResources, TimelinesResources, TrendsResources, TweetsResources, TwitterBase, UsersResources All Known Implementing Classes: TwitterImpl public interface Twitter extends java.io.Serializable, OAuthSupport, OAuth2Support, TwitterBase, TimelinesResources, TweetsResources, SearchResource, DirectMessagesResources, FriendsFollowersResources, UsersResources, SuggestedUsersResources, FavoritesResources, ListsResources, SavedSearchesResources, PlacesGeoResources, TrendsResources, SpamReportingResource, HelpResources Since: Twitter4J 2.2.0 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested classes/interfaces inherited from interface\u00a0twitter4j.api.HelpResources HelpResources.Language Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description DirectMessagesResources directMessages()\u00a0 FavoritesResources favorites()\u00a0 FriendsFollowersResources friendsFollowers()\u00a0 HelpResources help()\u00a0 ListsResources list()\u00a0 PlacesGeoResources placesGeo()\u00a0 SavedSearchesResources savedSearches()\u00a0 SearchResource search()\u00a0 SpamReportingResource spamReporting()\u00a0 SuggestedUsersResources suggestedUsers()\u00a0 TimelinesResources timelines()\u00a0 TrendsResources trends()\u00a0 TweetsResources tweets()\u00a0 UsersResources users()\u00a0 Methods inherited from interface\u00a0twitter4j.auth.OAuthSupport getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, setOAuthAccessToken, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.auth.OAuth2Support getOAuth2Token, invalidateOAuth2Token, setOAuth2Token, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.TwitterBase addRateLimitStatusListener, getAuthorization, getConfiguration, getId, getScreenName, onRateLimitReached, onRateLimitStatus Methods inherited from interface\u00a0twitter4j.api.TimelinesResources getHomeTimeline, getHomeTimeline, getMentionsTimeline, getMentionsTimeline, getRetweetsOfMe, getRetweetsOfMe, getUserTimeline, getUserTimeline, getUserTimeline, getUserTimeline, getUserTimeline, getUserTimeline Methods inherited from interface\u00a0twitter4j.api.TweetsResources destroyStatus, getOEmbed, getRetweeterIds, getRetweeterIds, getRetweets, lookup, retweetStatus, showStatus, updateStatus, updateStatus, uploadMedia, uploadMedia Methods inherited from interface\u00a0twitter4j.api.SearchResource search Methods inherited from interface\u00a0twitter4j.api.DirectMessagesResources destroyDirectMessage, getDirectMessages, getDirectMessages, getDMImageAsStream, getSentDirectMessages, getSentDirectMessages, sendDirectMessage, sendDirectMessage, showDirectMessage Methods inherited from interface\u00a0twitter4j.api.FriendsFollowersResources createFriendship, createFriendship, createFriendship, createFriendship, destroyFriendship, destroyFriendship, getFollowersIDs, getFollowersIDs, getFollowersIDs, getFollowersIDs, getFollowersIDs, getFollowersList, getFollowersList, getFollowersList, getFollowersList, getFollowersList, getFollowersList, getFriendsIDs, getFriendsIDs, getFriendsIDs, getFriendsIDs, getFriendsIDs, getFriendsList, getFriendsList, getFriendsList, getFriendsList, getFriendsList, getFriendsList, getIncomingFriendships, getNoRetweetsFriendships, getOutgoingFriendships, lookupFriendships, lookupFriendships, showFriendship, showFriendship, updateFriendship, updateFriendship Methods inherited from interface\u00a0twitter4j.api.UsersResources createBlock, createBlock, createMute, createMute, destroyBlock, destroyBlock, destroyMute, destroyMute, getAccountSettings, getBlocksIDs, getBlocksIDs, getBlocksList, getBlocksList, getContributees, getContributees, getContributors, getContributors, getMutesIDs, getMutesList, lookupUsers, lookupUsers, removeProfileBanner, searchUsers, showUser, showUser, updateAccountSettings, updateProfile, updateProfileBackgroundImage, updateProfileBackgroundImage, updateProfileBanner, updateProfileBanner, updateProfileColors, updateProfileImage, updateProfileImage, verifyCredentials Methods inherited from interface\u00a0twitter4j.api.SuggestedUsersResources getMemberSuggestions, getSuggestedUserCategories, getUserSuggestions Methods inherited from interface\u00a0twitter4j.api.FavoritesResources createFavorite, destroyFavorite, getFavorites, getFavorites, getFavorites, getFavorites, getFavorites, getFavorites Methods inherited from interface\u00a0twitter4j.api.ListsResources createUserList, createUserListMember, createUserListMember, createUserListMember, createUserListMembers, createUserListMembers, createUserListMembers, createUserListMembers, createUserListMembers, createUserListMembers, createUserListSubscription, createUserListSubscription, createUserListSubscription, destroyUserList, destroyUserList, destroyUserList, destroyUserListMember, destroyUserListMember, destroyUserListMember, destroyUserListMember, destroyUserListMembers, destroyUserListMembers, destroyUserListMembers, destroyUserListSubscription, destroyUserListSubscription, destroyUserListSubscription, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMembers, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserListMemberships, getUserLists, getUserLists, getUserLists, getUserLists, getUserListsOwnerships, getUserListsOwnerships, getUserListsOwnerships, getUserListsOwnerships, getUserListStatuses, getUserListStatuses, getUserListStatuses, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscribers, getUserListSubscriptions, getUserListSubscriptions, getUserListSubscriptions, getUserListSubscriptions, showUserList, showUserList, showUserList, showUserListMembership, showUserListMembership, showUserListMembership, showUserListSubscription, showUserListSubscription, showUserListSubscription, updateUserList, updateUserList, updateUserList Methods inherited from interface\u00a0twitter4j.api.SavedSearchesResources createSavedSearch, destroySavedSearch, getSavedSearches, showSavedSearch Methods inherited from interface\u00a0twitter4j.api.PlacesGeoResources getGeoDetails, getSimilarPlaces, reverseGeoCode, searchPlaces Methods inherited from interface\u00a0twitter4j.api.TrendsResources getAvailableTrends, getClosestTrends, getPlaceTrends Methods inherited from interface\u00a0twitter4j.api.SpamReportingResource reportSpam, reportSpam Methods inherited from interface\u00a0twitter4j.api.HelpResources getAPIConfiguration, getLanguages, getPrivacyPolicy, getRateLimitStatus, getRateLimitStatus, getTermsOfService Method Detail timelines TimelinesResources\u00a0timelines() Returns: TimelinesResources Since: Twitter4J 3.0.4 tweets TweetsResources\u00a0tweets() Returns: TweetsResources Since: Twitter4J 3.0.4 search SearchResource\u00a0search() Returns: SearchResource Since: Twitter4J 3.0.4 directMessages DirectMessagesResources\u00a0directMessages() Returns: DirectMessagesResources Since: Twitter4J 3.0.4 friendsFollowers FriendsFollowersResources\u00a0friendsFollowers() Returns: FriendsFollowersResources Since: Twitter4J 3.0.4 users UsersResources\u00a0users() Returns: UsersResources Since: Twitter4J 3.0.4 suggestedUsers SuggestedUsersResources\u00a0suggestedUsers() Returns: SuggestedUsersResources Since: Twitter4J 3.0.4 favorites FavoritesResources\u00a0favorites() Returns: FavoritesResources Since: Twitter4J 3.0.4 list ListsResources\u00a0list() Returns: ListsResources Since: Twitter4J 3.0.4 savedSearches SavedSearchesResources\u00a0savedSearches() Returns: SavedSearchesResources Since: Twitter4J 3.0.4 placesGeo PlacesGeoResources\u00a0placesGeo() Returns: PlacesGeoResources Since: Twitter4J 3.0.4 trends TrendsResources\u00a0trends() Returns: TrendsResources Since: Twitter4J 3.0.4 spamReporting SpamReportingResource\u00a0spamReporting() Returns: SpamReportingResource Since: Twitter4J 3.0.4 help HelpResources\u00a0help() Returns: HelpResources Since: Twitter4J 3.0.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterAPIConfiguration &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterAPIConfiguration&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TwitterAPIConfiguration All Superinterfaces: java.io.Serializable, TwitterResponse public interface TwitterAPIConfiguration extends TwitterResponse, java.io.Serializable Since: Twitter4J 2.2.3 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getCharactersReservedPerMedia()\u00a0 int getMaxMediaPerUpload()\u00a0 java.lang.String[] getNonUsernamePaths()\u00a0 int getPhotoSizeLimit()\u00a0 java.util.Map&lt;java.lang.Integer,MediaEntity.Size&gt; getPhotoSizes()\u00a0 int getShortURLLength()\u00a0 int getShortURLLengthHttps()\u00a0 Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getPhotoSizeLimit int\u00a0getPhotoSizeLimit() getShortURLLength int\u00a0getShortURLLength() getShortURLLengthHttps int\u00a0getShortURLLengthHttps() getCharactersReservedPerMedia int\u00a0getCharactersReservedPerMedia() getPhotoSizes java.util.Map&lt;java.lang.Integer,MediaEntity.Size&gt;\u00a0getPhotoSizes() getNonUsernamePaths java.lang.String[]\u00a0getNonUsernamePaths() getMaxMediaPerUpload int\u00a0getMaxMediaPerUpload() Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterAPIMonitor &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterAPIMonitor&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:10,&quot;i2&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterAPIMonitor java.lang.Object twitter4j.TwitterAPIMonitor public class TwitterAPIMonitor extends java.lang.Object Singleton instance of all Twitter API monitoring. Handles URL parsing and &quot;wire off&quot; logic. We could avoid using a singleton here if Twitter objects were instantiated from a factory. Since: Twitter4J 2.2.1 Author: Nick Dellamaggiore (nick.dellamaggiore at gmail.com) Field Summary Fields\u00a0 Modifier and Type Field and Description private static Logger logger\u00a0 private static java.util.regex.Pattern pattern\u00a0 private static TwitterAPIMonitor SINGLETON\u00a0 private static APIStatistics STATISTICS\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description private TwitterAPIMonitor() Constructor Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static TwitterAPIMonitor getInstance()\u00a0 APIStatisticsMBean getStatistics()\u00a0 (package private) void methodCalled(java.lang.String\u00a0twitterUrl, long\u00a0elapsedTime, boolean\u00a0success)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail logger private static final\u00a0Logger logger pattern private static final\u00a0java.util.regex.Pattern pattern SINGLETON private static final\u00a0TwitterAPIMonitor SINGLETON STATISTICS private static final\u00a0APIStatistics STATISTICS Constructor Detail TwitterAPIMonitor private\u00a0TwitterAPIMonitor() Constructor Method Detail getInstance public static\u00a0TwitterAPIMonitor\u00a0getInstance() getStatistics public\u00a0APIStatisticsMBean\u00a0getStatistics() methodCalled void\u00a0methodCalled(java.lang.String\u00a0twitterUrl, long\u00a0elapsedTime, boolean\u00a0success) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterAdapter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterAdapter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10,&quot;i39&quot;:10,&quot;i40&quot;:10,&quot;i41&quot;:10,&quot;i42&quot;:10,&quot;i43&quot;:10,&quot;i44&quot;:10,&quot;i45&quot;:10,&quot;i46&quot;:10,&quot;i47&quot;:10,&quot;i48&quot;:10,&quot;i49&quot;:10,&quot;i50&quot;:10,&quot;i51&quot;:10,&quot;i52&quot;:10,&quot;i53&quot;:10,&quot;i54&quot;:10,&quot;i55&quot;:10,&quot;i56&quot;:10,&quot;i57&quot;:10,&quot;i58&quot;:10,&quot;i59&quot;:10,&quot;i60&quot;:10,&quot;i61&quot;:10,&quot;i62&quot;:10,&quot;i63&quot;:10,&quot;i64&quot;:10,&quot;i65&quot;:10,&quot;i66&quot;:10,&quot;i67&quot;:10,&quot;i68&quot;:10,&quot;i69&quot;:10,&quot;i70&quot;:10,&quot;i71&quot;:10,&quot;i72&quot;:10,&quot;i73&quot;:10,&quot;i74&quot;:10,&quot;i75&quot;:10,&quot;i76&quot;:10,&quot;i77&quot;:10,&quot;i78&quot;:10,&quot;i79&quot;:10,&quot;i80&quot;:10,&quot;i81&quot;:10,&quot;i82&quot;:10,&quot;i83&quot;:10,&quot;i84&quot;:10,&quot;i85&quot;:10,&quot;i86&quot;:10,&quot;i87&quot;:10,&quot;i88&quot;:10,&quot;i89&quot;:10,&quot;i90&quot;:10,&quot;i91&quot;:10,&quot;i92&quot;:10,&quot;i93&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterAdapter java.lang.Object twitter4j.TwitterAdapter All Implemented Interfaces: TwitterListener public class TwitterAdapter extends java.lang.Object implements TwitterListener A handy adapter of TwitterListener. Author: Yusuke Yamamoto - yusuke at mac.com See Also: AsyncTwitter, TwitterListener Constructor Summary Constructors\u00a0 Constructor and Description TwitterAdapter()\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void checkedUserListMembership(User\u00a0users)\u00a0 void checkedUserListSubscription(User\u00a0user)\u00a0 void createdBlock(User\u00a0user)\u00a0 void createdFavorite(Status\u00a0status)\u00a0 void createdFriendship(User\u00a0user)\u00a0 void createdMute(User\u00a0user)\u00a0 void createdSavedSearch(SavedSearch\u00a0savedSearch)\u00a0 void createdUserList(UserList\u00a0userList)\u00a0 void createdUserListMember(UserList\u00a0userList)\u00a0 void createdUserListMembers(UserList\u00a0userList)\u00a0 void destroyedBlock(User\u00a0user)\u00a0 void destroyedDirectMessage(DirectMessage\u00a0message)\u00a0 void destroyedFavorite(Status\u00a0status)\u00a0 void destroyedFriendship(User\u00a0user)\u00a0 void destroyedMute(User\u00a0user)\u00a0 void destroyedSavedSearch(SavedSearch\u00a0savedSearch)\u00a0 void destroyedStatus(Status\u00a0destroyedStatus)\u00a0 void destroyedUserList(UserList\u00a0userList)\u00a0 void destroyedUserListMember(UserList\u00a0userList)\u00a0 void gotAccountSettings(AccountSettings\u00a0settings)\u00a0 void gotAPIConfiguration(TwitterAPIConfiguration\u00a0conf)\u00a0 void gotAvailableTrends(ResponseList&lt;Location&gt;\u00a0locations)\u00a0 void gotBlockIDs(IDs\u00a0blockingUsersIDs)\u00a0 void gotBlocksList(ResponseList&lt;User&gt;\u00a0blockingUsers)\u00a0 void gotClosestTrends(ResponseList&lt;Location&gt;\u00a0locations)\u00a0 void gotContributees(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotContributors(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotDirectMessage(DirectMessage\u00a0message)\u00a0 void gotDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages)\u00a0 void gotFavorites(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotFollowersIDs(IDs\u00a0ids)\u00a0 void gotFollowersList(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotFriendsIDs(IDs\u00a0ids)\u00a0 void gotFriendsList(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotGeoDetails(Place\u00a0place)\u00a0 void gotHomeTimeline(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotIncomingFriendships(IDs\u00a0ids)\u00a0 void gotLanguages(ResponseList&lt;HelpResources.Language&gt;\u00a0languages)\u00a0 void gotMemberSuggestions(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotMentions(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotMuteIDs(IDs\u00a0blockingUsersIDs)\u00a0 void gotMutesList(ResponseList&lt;User&gt;\u00a0blockingUsers)\u00a0 void gotOAuth2Token(OAuth2Token\u00a0token)\u00a0 void gotOAuthAccessToken(AccessToken\u00a0token)\u00a0 void gotOAuthRequestToken(RequestToken\u00a0token)\u00a0 void gotOEmbed(OEmbed\u00a0oembed)\u00a0 void gotOutgoingFriendships(IDs\u00a0ids)\u00a0 void gotPlaceTrends(Trends\u00a0trends)\u00a0 void gotPrivacyPolicy(java.lang.String\u00a0privacyPolicy)\u00a0 void gotRateLimitStatus(java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0rateLimitStatus)\u00a0 void gotRetweets(ResponseList&lt;Status&gt;\u00a0retweets)\u00a0 void gotRetweetsOfMe(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotReverseGeoCode(ResponseList&lt;Place&gt;\u00a0places)\u00a0 void gotSavedSearch(SavedSearch\u00a0savedSearch)\u00a0 void gotSavedSearches(ResponseList&lt;SavedSearch&gt;\u00a0savedSearches)\u00a0 void gotSentDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages)\u00a0 void gotShowFriendship(Relationship\u00a0relationship)\u00a0 void gotShowStatus(Status\u00a0status)\u00a0 void gotShowUserList(UserList\u00a0userList)\u00a0 void gotSimilarPlaces(ResponseList&lt;Place&gt;\u00a0places)\u00a0 void gotSuggestedUserCategories(ResponseList&lt;Category&gt;\u00a0category)\u00a0 void gotTermsOfService(java.lang.String\u00a0tof)\u00a0 void gotUserDetail(User\u00a0user)\u00a0 void gotUserListMembers(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotUserListMemberships(PagableResponseList&lt;UserList&gt;\u00a0userLists)\u00a0 void gotUserLists(ResponseList&lt;UserList&gt;\u00a0userLists)\u00a0 void gotUserListStatuses(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotUserListSubscribers(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotUserListSubscriptions(PagableResponseList&lt;UserList&gt;\u00a0userLists)\u00a0 void gotUserSuggestions(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotUserTimeline(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void lookedup(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void lookedUpFriendships(ResponseList&lt;Friendship&gt;\u00a0friendships)\u00a0 void lookedupUsers(ResponseList&lt;User&gt;\u00a0users)\u00a0 void onException(TwitterException\u00a0te, TwitterMethod\u00a0method)\u00a0 void removedProfileBanner()\u00a0 void reportedSpam(User\u00a0reportedSpammer)\u00a0 void retweetedStatus(Status\u00a0retweetedStatus)\u00a0 void searched(QueryResult\u00a0queryResult)\u00a0 void searchedPlaces(ResponseList&lt;Place&gt;\u00a0places)\u00a0 void searchedUser(ResponseList&lt;User&gt;\u00a0userList)\u00a0 void sentDirectMessage(DirectMessage\u00a0message)\u00a0 void subscribedUserList(UserList\u00a0userList)\u00a0 void unsubscribedUserList(UserList\u00a0userList)\u00a0 void updatedAccountSettings(AccountSettings\u00a0settings)\u00a0 void updatedFriendship(Relationship\u00a0relationship)\u00a0 void updatedProfile(User\u00a0user)\u00a0 void updatedProfileBackgroundImage(User\u00a0user)\u00a0 void updatedProfileBanner()\u00a0 void updatedProfileColors(User\u00a0user)\u00a0 void updatedProfileImage(User\u00a0user)\u00a0 void updatedStatus(Status\u00a0status)\u00a0 void updatedUserList(UserList\u00a0userList)\u00a0 void verifiedCredentials(User\u00a0user)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Constructor Detail TwitterAdapter public\u00a0TwitterAdapter() Method Detail gotMentions public\u00a0void\u00a0gotMentions(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: gotMentions\u00a0in interface\u00a0TwitterListener gotHomeTimeline public\u00a0void\u00a0gotHomeTimeline(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: gotHomeTimeline\u00a0in interface\u00a0TwitterListener gotUserTimeline public\u00a0void\u00a0gotUserTimeline(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: gotUserTimeline\u00a0in interface\u00a0TwitterListener gotRetweetsOfMe public\u00a0void\u00a0gotRetweetsOfMe(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: gotRetweetsOfMe\u00a0in interface\u00a0TwitterListener gotRetweets public\u00a0void\u00a0gotRetweets(ResponseList&lt;Status&gt;\u00a0retweets) Specified by: gotRetweets\u00a0in interface\u00a0TwitterListener gotShowStatus public\u00a0void\u00a0gotShowStatus(Status\u00a0status) Specified by: gotShowStatus\u00a0in interface\u00a0TwitterListener destroyedStatus public\u00a0void\u00a0destroyedStatus(Status\u00a0destroyedStatus) Specified by: destroyedStatus\u00a0in interface\u00a0TwitterListener updatedStatus public\u00a0void\u00a0updatedStatus(Status\u00a0status) Specified by: updatedStatus\u00a0in interface\u00a0TwitterListener retweetedStatus public\u00a0void\u00a0retweetedStatus(Status\u00a0retweetedStatus) Specified by: retweetedStatus\u00a0in interface\u00a0TwitterListener gotOEmbed public\u00a0void\u00a0gotOEmbed(OEmbed\u00a0oembed) Specified by: gotOEmbed\u00a0in interface\u00a0TwitterListener lookedup public\u00a0void\u00a0lookedup(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: lookedup\u00a0in interface\u00a0TwitterListener searched public\u00a0void\u00a0searched(QueryResult\u00a0queryResult) Specified by: searched\u00a0in interface\u00a0TwitterListener gotDirectMessages public\u00a0void\u00a0gotDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages) Specified by: gotDirectMessages\u00a0in interface\u00a0TwitterListener gotSentDirectMessages public\u00a0void\u00a0gotSentDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages) Specified by: gotSentDirectMessages\u00a0in interface\u00a0TwitterListener gotDirectMessage public\u00a0void\u00a0gotDirectMessage(DirectMessage\u00a0message) Specified by: gotDirectMessage\u00a0in interface\u00a0TwitterListener destroyedDirectMessage public\u00a0void\u00a0destroyedDirectMessage(DirectMessage\u00a0message) Specified by: destroyedDirectMessage\u00a0in interface\u00a0TwitterListener sentDirectMessage public\u00a0void\u00a0sentDirectMessage(DirectMessage\u00a0message) Specified by: sentDirectMessage\u00a0in interface\u00a0TwitterListener gotFriendsIDs public\u00a0void\u00a0gotFriendsIDs(IDs\u00a0ids) Specified by: gotFriendsIDs\u00a0in interface\u00a0TwitterListener gotFollowersIDs public\u00a0void\u00a0gotFollowersIDs(IDs\u00a0ids) Specified by: gotFollowersIDs\u00a0in interface\u00a0TwitterListener lookedUpFriendships public\u00a0void\u00a0lookedUpFriendships(ResponseList&lt;Friendship&gt;\u00a0friendships) Specified by: lookedUpFriendships\u00a0in interface\u00a0TwitterListener gotIncomingFriendships public\u00a0void\u00a0gotIncomingFriendships(IDs\u00a0ids) Specified by: gotIncomingFriendships\u00a0in interface\u00a0TwitterListener gotOutgoingFriendships public\u00a0void\u00a0gotOutgoingFriendships(IDs\u00a0ids) Specified by: gotOutgoingFriendships\u00a0in interface\u00a0TwitterListener createdFriendship public\u00a0void\u00a0createdFriendship(User\u00a0user) Specified by: createdFriendship\u00a0in interface\u00a0TwitterListener destroyedFriendship public\u00a0void\u00a0destroyedFriendship(User\u00a0user) Specified by: destroyedFriendship\u00a0in interface\u00a0TwitterListener updatedFriendship public\u00a0void\u00a0updatedFriendship(Relationship\u00a0relationship) Specified by: updatedFriendship\u00a0in interface\u00a0TwitterListener gotShowFriendship public\u00a0void\u00a0gotShowFriendship(Relationship\u00a0relationship) Specified by: gotShowFriendship\u00a0in interface\u00a0TwitterListener gotFriendsList public\u00a0void\u00a0gotFriendsList(PagableResponseList&lt;User&gt;\u00a0users) Specified by: gotFriendsList\u00a0in interface\u00a0TwitterListener gotFollowersList public\u00a0void\u00a0gotFollowersList(PagableResponseList&lt;User&gt;\u00a0users) Specified by: gotFollowersList\u00a0in interface\u00a0TwitterListener gotAccountSettings public\u00a0void\u00a0gotAccountSettings(AccountSettings\u00a0settings) Specified by: gotAccountSettings\u00a0in interface\u00a0TwitterListener verifiedCredentials public\u00a0void\u00a0verifiedCredentials(User\u00a0user) Specified by: verifiedCredentials\u00a0in interface\u00a0TwitterListener updatedAccountSettings public\u00a0void\u00a0updatedAccountSettings(AccountSettings\u00a0settings) Specified by: updatedAccountSettings\u00a0in interface\u00a0TwitterListener updatedProfile public\u00a0void\u00a0updatedProfile(User\u00a0user) Specified by: updatedProfile\u00a0in interface\u00a0TwitterListener updatedProfileBackgroundImage public\u00a0void\u00a0updatedProfileBackgroundImage(User\u00a0user) Specified by: updatedProfileBackgroundImage\u00a0in interface\u00a0TwitterListener updatedProfileColors public\u00a0void\u00a0updatedProfileColors(User\u00a0user) Specified by: updatedProfileColors\u00a0in interface\u00a0TwitterListener updatedProfileImage public\u00a0void\u00a0updatedProfileImage(User\u00a0user) Specified by: updatedProfileImage\u00a0in interface\u00a0TwitterListener gotBlocksList public\u00a0void\u00a0gotBlocksList(ResponseList&lt;User&gt;\u00a0blockingUsers) Specified by: gotBlocksList\u00a0in interface\u00a0TwitterListener gotBlockIDs public\u00a0void\u00a0gotBlockIDs(IDs\u00a0blockingUsersIDs) Specified by: gotBlockIDs\u00a0in interface\u00a0TwitterListener createdBlock public\u00a0void\u00a0createdBlock(User\u00a0user) Specified by: createdBlock\u00a0in interface\u00a0TwitterListener destroyedBlock public\u00a0void\u00a0destroyedBlock(User\u00a0user) Specified by: destroyedBlock\u00a0in interface\u00a0TwitterListener lookedupUsers public\u00a0void\u00a0lookedupUsers(ResponseList&lt;User&gt;\u00a0users) Specified by: lookedupUsers\u00a0in interface\u00a0TwitterListener gotUserDetail public\u00a0void\u00a0gotUserDetail(User\u00a0user) Specified by: gotUserDetail\u00a0in interface\u00a0TwitterListener searchedUser public\u00a0void\u00a0searchedUser(ResponseList&lt;User&gt;\u00a0userList) Specified by: searchedUser\u00a0in interface\u00a0TwitterListener gotContributees public\u00a0void\u00a0gotContributees(ResponseList&lt;User&gt;\u00a0users) Specified by: gotContributees\u00a0in interface\u00a0TwitterListener gotContributors public\u00a0void\u00a0gotContributors(ResponseList&lt;User&gt;\u00a0users) Specified by: gotContributors\u00a0in interface\u00a0TwitterListener removedProfileBanner public\u00a0void\u00a0removedProfileBanner() Specified by: removedProfileBanner\u00a0in interface\u00a0TwitterListener updatedProfileBanner public\u00a0void\u00a0updatedProfileBanner() Specified by: updatedProfileBanner\u00a0in interface\u00a0TwitterListener gotMutesList public\u00a0void\u00a0gotMutesList(ResponseList&lt;User&gt;\u00a0blockingUsers) Specified by: gotMutesList\u00a0in interface\u00a0TwitterListener gotMuteIDs public\u00a0void\u00a0gotMuteIDs(IDs\u00a0blockingUsersIDs) Specified by: gotMuteIDs\u00a0in interface\u00a0TwitterListener createdMute public\u00a0void\u00a0createdMute(User\u00a0user) Specified by: createdMute\u00a0in interface\u00a0TwitterListener destroyedMute public\u00a0void\u00a0destroyedMute(User\u00a0user) Specified by: destroyedMute\u00a0in interface\u00a0TwitterListener gotUserSuggestions public\u00a0void\u00a0gotUserSuggestions(ResponseList&lt;User&gt;\u00a0users) Specified by: gotUserSuggestions\u00a0in interface\u00a0TwitterListener gotSuggestedUserCategories public\u00a0void\u00a0gotSuggestedUserCategories(ResponseList&lt;Category&gt;\u00a0category) Specified by: gotSuggestedUserCategories\u00a0in interface\u00a0TwitterListener gotMemberSuggestions public\u00a0void\u00a0gotMemberSuggestions(ResponseList&lt;User&gt;\u00a0users) Specified by: gotMemberSuggestions\u00a0in interface\u00a0TwitterListener gotFavorites public\u00a0void\u00a0gotFavorites(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: gotFavorites\u00a0in interface\u00a0TwitterListener createdFavorite public\u00a0void\u00a0createdFavorite(Status\u00a0status) Specified by: createdFavorite\u00a0in interface\u00a0TwitterListener destroyedFavorite public\u00a0void\u00a0destroyedFavorite(Status\u00a0status) Specified by: destroyedFavorite\u00a0in interface\u00a0TwitterListener gotUserLists public\u00a0void\u00a0gotUserLists(ResponseList&lt;UserList&gt;\u00a0userLists) Specified by: gotUserLists\u00a0in interface\u00a0TwitterListener gotUserListStatuses public\u00a0void\u00a0gotUserListStatuses(ResponseList&lt;Status&gt;\u00a0statuses) Specified by: gotUserListStatuses\u00a0in interface\u00a0TwitterListener destroyedUserListMember public\u00a0void\u00a0destroyedUserListMember(UserList\u00a0userList) Specified by: destroyedUserListMember\u00a0in interface\u00a0TwitterListener gotUserListMemberships public\u00a0void\u00a0gotUserListMemberships(PagableResponseList&lt;UserList&gt;\u00a0userLists) Specified by: gotUserListMemberships\u00a0in interface\u00a0TwitterListener gotUserListSubscribers public\u00a0void\u00a0gotUserListSubscribers(PagableResponseList&lt;User&gt;\u00a0users) Specified by: gotUserListSubscribers\u00a0in interface\u00a0TwitterListener subscribedUserList public\u00a0void\u00a0subscribedUserList(UserList\u00a0userList) Specified by: subscribedUserList\u00a0in interface\u00a0TwitterListener checkedUserListSubscription public\u00a0void\u00a0checkedUserListSubscription(User\u00a0user) Specified by: checkedUserListSubscription\u00a0in interface\u00a0TwitterListener unsubscribedUserList public\u00a0void\u00a0unsubscribedUserList(UserList\u00a0userList) Specified by: unsubscribedUserList\u00a0in interface\u00a0TwitterListener createdUserListMembers public\u00a0void\u00a0createdUserListMembers(UserList\u00a0userList) Specified by: createdUserListMembers\u00a0in interface\u00a0TwitterListener checkedUserListMembership public\u00a0void\u00a0checkedUserListMembership(User\u00a0users) Specified by: checkedUserListMembership\u00a0in interface\u00a0TwitterListener createdUserListMember public\u00a0void\u00a0createdUserListMember(UserList\u00a0userList) Specified by: createdUserListMember\u00a0in interface\u00a0TwitterListener destroyedUserList public\u00a0void\u00a0destroyedUserList(UserList\u00a0userList) Specified by: destroyedUserList\u00a0in interface\u00a0TwitterListener updatedUserList public\u00a0void\u00a0updatedUserList(UserList\u00a0userList) Specified by: updatedUserList\u00a0in interface\u00a0TwitterListener createdUserList public\u00a0void\u00a0createdUserList(UserList\u00a0userList) Specified by: createdUserList\u00a0in interface\u00a0TwitterListener gotShowUserList public\u00a0void\u00a0gotShowUserList(UserList\u00a0userList) Specified by: gotShowUserList\u00a0in interface\u00a0TwitterListener gotUserListSubscriptions public\u00a0void\u00a0gotUserListSubscriptions(PagableResponseList&lt;UserList&gt;\u00a0userLists) Specified by: gotUserListSubscriptions\u00a0in interface\u00a0TwitterListener gotUserListMembers public\u00a0void\u00a0gotUserListMembers(PagableResponseList&lt;User&gt;\u00a0users) Specified by: gotUserListMembers\u00a0in interface\u00a0TwitterListener gotSavedSearches public\u00a0void\u00a0gotSavedSearches(ResponseList&lt;SavedSearch&gt;\u00a0savedSearches) Specified by: gotSavedSearches\u00a0in interface\u00a0TwitterListener gotSavedSearch public\u00a0void\u00a0gotSavedSearch(SavedSearch\u00a0savedSearch) Specified by: gotSavedSearch\u00a0in interface\u00a0TwitterListener createdSavedSearch public\u00a0void\u00a0createdSavedSearch(SavedSearch\u00a0savedSearch) Specified by: createdSavedSearch\u00a0in interface\u00a0TwitterListener destroyedSavedSearch public\u00a0void\u00a0destroyedSavedSearch(SavedSearch\u00a0savedSearch) Specified by: destroyedSavedSearch\u00a0in interface\u00a0TwitterListener gotGeoDetails public\u00a0void\u00a0gotGeoDetails(Place\u00a0place) Specified by: gotGeoDetails\u00a0in interface\u00a0TwitterListener gotReverseGeoCode public\u00a0void\u00a0gotReverseGeoCode(ResponseList&lt;Place&gt;\u00a0places) Specified by: gotReverseGeoCode\u00a0in interface\u00a0TwitterListener searchedPlaces public\u00a0void\u00a0searchedPlaces(ResponseList&lt;Place&gt;\u00a0places) Specified by: searchedPlaces\u00a0in interface\u00a0TwitterListener gotSimilarPlaces public\u00a0void\u00a0gotSimilarPlaces(ResponseList&lt;Place&gt;\u00a0places) Specified by: gotSimilarPlaces\u00a0in interface\u00a0TwitterListener gotPlaceTrends public\u00a0void\u00a0gotPlaceTrends(Trends\u00a0trends) Specified by: gotPlaceTrends\u00a0in interface\u00a0TwitterListener gotAvailableTrends public\u00a0void\u00a0gotAvailableTrends(ResponseList&lt;Location&gt;\u00a0locations) Specified by: gotAvailableTrends\u00a0in interface\u00a0TwitterListener gotClosestTrends public\u00a0void\u00a0gotClosestTrends(ResponseList&lt;Location&gt;\u00a0locations) Specified by: gotClosestTrends\u00a0in interface\u00a0TwitterListener reportedSpam public\u00a0void\u00a0reportedSpam(User\u00a0reportedSpammer) Specified by: reportedSpam\u00a0in interface\u00a0TwitterListener gotOAuthRequestToken public\u00a0void\u00a0gotOAuthRequestToken(RequestToken\u00a0token) Specified by: gotOAuthRequestToken\u00a0in interface\u00a0TwitterListener gotOAuthAccessToken public\u00a0void\u00a0gotOAuthAccessToken(AccessToken\u00a0token) Specified by: gotOAuthAccessToken\u00a0in interface\u00a0TwitterListener gotOAuth2Token public\u00a0void\u00a0gotOAuth2Token(OAuth2Token\u00a0token) Specified by: gotOAuth2Token\u00a0in interface\u00a0TwitterListener gotAPIConfiguration public\u00a0void\u00a0gotAPIConfiguration(TwitterAPIConfiguration\u00a0conf) Specified by: gotAPIConfiguration\u00a0in interface\u00a0TwitterListener gotLanguages public\u00a0void\u00a0gotLanguages(ResponseList&lt;HelpResources.Language&gt;\u00a0languages) Specified by: gotLanguages\u00a0in interface\u00a0TwitterListener gotPrivacyPolicy public\u00a0void\u00a0gotPrivacyPolicy(java.lang.String\u00a0privacyPolicy) Specified by: gotPrivacyPolicy\u00a0in interface\u00a0TwitterListener gotTermsOfService public\u00a0void\u00a0gotTermsOfService(java.lang.String\u00a0tof) Specified by: gotTermsOfService\u00a0in interface\u00a0TwitterListener gotRateLimitStatus public\u00a0void\u00a0gotRateLimitStatus(java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0rateLimitStatus) Specified by: gotRateLimitStatus\u00a0in interface\u00a0TwitterListener onException public\u00a0void\u00a0onException(TwitterException\u00a0te, TwitterMethod\u00a0method) Specified by: onException\u00a0in interface\u00a0TwitterListener Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterBase &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterBase&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TwitterBase All Known Subinterfaces: AsyncTwitter, Twitter, TwitterStream All Known Implementing Classes: AsyncTwitterImpl, TwitterBaseImpl, TwitterImpl, TwitterStreamImpl public interface TwitterBase Since: Twitter4J 2.2.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void addRateLimitStatusListener(RateLimitStatusListener\u00a0listener) Registers a RateLimitStatusListener for account associated rate limits Authorization getAuthorization() Returns the authorization scheme for this instance. The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization Configuration getConfiguration() Returns the configuration associated with this instance long getId() Returns authenticating user's user id. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. java.lang.String getScreenName() Returns authenticating user's screen name. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Note that this method returns a transiently cached (will be lost upon serialization) screen name while it is possible to change a user's screen name. void onRateLimitReached(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Registers a RateLimitStatusListener for account associated rate limits void onRateLimitStatus(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Registers a lambda action for account associated rate limits Method Detail getScreenName java.lang.String\u00a0getScreenName() throws TwitterException, java.lang.IllegalStateException Returns authenticating user's screen name. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Note that this method returns a transiently cached (will be lost upon serialization) screen name while it is possible to change a user's screen name. Returns: the authenticating screen name Throws: TwitterException - when verifyCredentials threw an exception. java.lang.IllegalStateException - if no credentials are supplied. i.e.) this is an anonymous Twitter instance Since: Twitter4J 2.1.1 getId long\u00a0getId() throws TwitterException, java.lang.IllegalStateException Returns authenticating user's user id. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Returns: the authenticating user's id Throws: TwitterException - when verifyCredentials threw an exception. java.lang.IllegalStateException - if no credentials are supplied. i.e.) this is an anonymous Twitter instance Since: Twitter4J 2.1.1 addRateLimitStatusListener void\u00a0addRateLimitStatusListener(RateLimitStatusListener\u00a0listener) Registers a RateLimitStatusListener for account associated rate limits Parameters: listener - the listener to be added Since: Twitter4J 2.1.12 See Also: Rate Limiting Twitter Developers onRateLimitStatus void\u00a0onRateLimitStatus(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Registers a lambda action for account associated rate limits Parameters: action - the action to be added Since: Twitter4J 4.0.4 See Also: Rate Limiting Twitter Developers onRateLimitReached void\u00a0onRateLimitReached(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Registers a RateLimitStatusListener for account associated rate limits Parameters: action - the action to be added Since: Twitter4J 4.0.4 See Also: Rate Limiting Twitter Developers getAuthorization Authorization\u00a0getAuthorization() Returns the authorization scheme for this instance. The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization Returns: the authorization scheme for this instance getConfiguration Configuration\u00a0getConfiguration() Returns the configuration associated with this instance Returns: configuration associated with this instance Since: Twitter4J 2.1.8 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterBaseImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterBaseImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterBaseImpl java.lang.Object twitter4j.TwitterBaseImpl All Implemented Interfaces: java.io.Serializable, OAuth2Support, OAuthSupport, TwitterBase Direct Known Subclasses: AsyncTwitterImpl, TwitterImpl, TwitterStreamImpl abstract class TwitterBaseImpl extends java.lang.Object implements TwitterBase, java.io.Serializable, OAuthSupport, OAuth2Support Base class of Twitter / AsyncTwitter / TwitterStream supports OAuth. Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description (package private) Authorization auth\u00a0 (package private) Configuration conf\u00a0 (package private) ObjectFactory factory\u00a0 (package private) HttpClient http\u00a0 private long id\u00a0 private java.util.List&lt;RateLimitStatusListener&gt; rateLimitStatusListeners\u00a0 private java.lang.String screenName\u00a0 private static long serialVersionUID\u00a0 private static java.lang.String WWW_DETAILS\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description TwitterBaseImpl(Configuration\u00a0conf, Authorization\u00a0auth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void addRateLimitStatusListener(RateLimitStatusListener\u00a0listener) Registers a RateLimitStatusListener for account associated rate limits (package private) void ensureAuthorizationEnabled()\u00a0 (package private) void ensureOAuthEnabled()\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 (package private) User fillInIDAndScreenName()\u00a0 Authorization getAuthorization() Returns the authorization scheme for this instance. The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization Configuration getConfiguration() Returns the configuration associated with this instance long getId() Returns authenticating user's user id. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. private OAuthSupport getOAuth()\u00a0 private OAuth2Support getOAuth2()\u00a0 OAuth2Token getOAuth2Token() Obtains an OAuth 2 Bearer token. AccessToken getOAuthAccessToken() Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) Retrieves an access token associated with the supplied request token and sets userId. AccessToken getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) Retrieves an access token. AccessToken getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. RequestToken getOAuthRequestToken() Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackUrl) Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackUrl, java.lang.String\u00a0xAuthAccessType) Retrieves a request token RequestToken getOAuthRequestToken(java.lang.String\u00a0callbackUrl, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) Retrieves a request token java.lang.String getScreenName() Returns authenticating user's screen name. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Note that this method returns a transiently cached (will be lost upon serialization) screen name while it is possible to change a user's screen name. int hashCode()\u00a0 void httpResponseReceived(HttpResponseEvent\u00a0event)\u00a0 private void init()\u00a0 void invalidateOAuth2Token() Revokes an issued OAuth 2 Bearer Token. void onRateLimitReached(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Registers a RateLimitStatusListener for account associated rate limits void onRateLimitStatus(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Registers a lambda action for account associated rate limits private void readObject(java.io.ObjectInputStream\u00a0stream)\u00a0 (package private) void setFactory()\u00a0 void setOAuth2Token(OAuth2Token\u00a0oauth2Token) Sets the OAuth 2 Bearer token. void setOAuthAccessToken(AccessToken\u00a0accessToken) Sets the access token void setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) sets the OAuth consumer key and consumer secret java.lang.String toString()\u00a0 private void writeObject(java.io.ObjectOutputStream\u00a0out)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail WWW_DETAILS private static final\u00a0java.lang.String WWW_DETAILS See Also: Constant Field Values serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf Configuration conf screenName private transient\u00a0java.lang.String screenName id private transient\u00a0long id http transient\u00a0HttpClient http rateLimitStatusListeners private\u00a0java.util.List&lt;RateLimitStatusListener&gt; rateLimitStatusListeners factory ObjectFactory factory auth Authorization auth Constructor Detail TwitterBaseImpl TwitterBaseImpl(Configuration\u00a0conf, Authorization\u00a0auth) Method Detail init private\u00a0void\u00a0init() setFactory void\u00a0setFactory() getScreenName public\u00a0java.lang.String\u00a0getScreenName() throws TwitterException, java.lang.IllegalStateException Description copied from interface:\u00a0TwitterBase Returns authenticating user's screen name. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Note that this method returns a transiently cached (will be lost upon serialization) screen name while it is possible to change a user's screen name. Specified by: getScreenName\u00a0in interface\u00a0TwitterBase Returns: the authenticating screen name Throws: TwitterException - when verifyCredentials threw an exception. java.lang.IllegalStateException - if no credentials are supplied. i.e.) this is an anonymous Twitter instance getId public\u00a0long\u00a0getId() throws TwitterException, java.lang.IllegalStateException Description copied from interface:\u00a0TwitterBase Returns authenticating user's user id. This method may internally call verifyCredentials() on the first invocation if - this instance is authenticated by Basic and email address is supplied instead of screen name, or - this instance is authenticated by OAuth. Specified by: getId\u00a0in interface\u00a0TwitterBase Returns: the authenticating user's id Throws: TwitterException - when verifyCredentials threw an exception. java.lang.IllegalStateException - if no credentials are supplied. i.e.) this is an anonymous Twitter instance fillInIDAndScreenName User\u00a0fillInIDAndScreenName() throws TwitterException Throws: TwitterException addRateLimitStatusListener public\u00a0void\u00a0addRateLimitStatusListener(RateLimitStatusListener\u00a0listener) Description copied from interface:\u00a0TwitterBase Registers a RateLimitStatusListener for account associated rate limits Specified by: addRateLimitStatusListener\u00a0in interface\u00a0TwitterBase Parameters: listener - the listener to be added See Also: Rate Limiting Twitter Developers onRateLimitStatus public\u00a0void\u00a0onRateLimitStatus(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Description copied from interface:\u00a0TwitterBase Registers a lambda action for account associated rate limits Specified by: onRateLimitStatus\u00a0in interface\u00a0TwitterBase Parameters: action - the action to be added See Also: Rate Limiting Twitter Developers onRateLimitReached public\u00a0void\u00a0onRateLimitReached(Consumer&lt;RateLimitStatusEvent&gt;\u00a0action) Description copied from interface:\u00a0TwitterBase Registers a RateLimitStatusListener for account associated rate limits Specified by: onRateLimitReached\u00a0in interface\u00a0TwitterBase Parameters: action - the action to be added See Also: Rate Limiting Twitter Developers httpResponseReceived public\u00a0void\u00a0httpResponseReceived(HttpResponseEvent\u00a0event) getAuthorization public final\u00a0Authorization\u00a0getAuthorization() Description copied from interface:\u00a0TwitterBase Returns the authorization scheme for this instance. The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization Specified by: getAuthorization\u00a0in interface\u00a0TwitterBase Returns: the authorization scheme for this instance getConfiguration public\u00a0Configuration\u00a0getConfiguration() Description copied from interface:\u00a0TwitterBase Returns the configuration associated with this instance Specified by: getConfiguration\u00a0in interface\u00a0TwitterBase Returns: configuration associated with this instance ensureAuthorizationEnabled final\u00a0void\u00a0ensureAuthorizationEnabled() ensureOAuthEnabled final\u00a0void\u00a0ensureOAuthEnabled() writeObject private\u00a0void\u00a0writeObject(java.io.ObjectOutputStream\u00a0out) throws java.io.IOException Throws: java.io.IOException readObject private\u00a0void\u00a0readObject(java.io.ObjectInputStream\u00a0stream) throws java.io.IOException, java.lang.ClassNotFoundException Throws: java.io.IOException java.lang.ClassNotFoundException setOAuthConsumer public\u00a0void\u00a0setOAuthConsumer(java.lang.String\u00a0consumerKey, java.lang.String\u00a0consumerSecret) Description copied from interface:\u00a0OAuthSupport sets the OAuth consumer key and consumer secret Specified by: setOAuthConsumer\u00a0in interface\u00a0OAuth2Support Specified by: setOAuthConsumer\u00a0in interface\u00a0OAuthSupport Parameters: consumerKey - OAuth consumer key consumerSecret - OAuth consumer secret getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken() throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Returns: generated request token. Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackUrl) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Parameters: callbackUrl - callback URL Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackUrl, java.lang.String\u00a0xAuthAccessType) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Parameters: callbackUrl - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthRequestToken public\u00a0RequestToken\u00a0getOAuthRequestToken(java.lang.String\u00a0callbackUrl, java.lang.String\u00a0xAuthAccessType, java.lang.String\u00a0xAuthMode) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves a request token Specified by: getOAuthRequestToken\u00a0in interface\u00a0OAuthSupport Parameters: callbackUrl - callback URL xAuthAccessType - Overrides the access level an application requests to a users account. Supported values are read or write. This parameter is intended to allow a developer to register a read/write application but also request read only access when appropriate. xAuthMode - Set to reverse_auth to obtain a special request token to be used in the reverse auth process. Returns: generated request token Throws: TwitterException - when Twitter service or network is unavailable See Also: OAuth FAQ Twitter Developers, OAuth Core 1.0a - 6.1. Obtaining an Unauthorized Request Token, POST oauth/request_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken() throws TwitterException Returns an access token associated with this instance. If no access token is associated with this instance, this will retrieve a new access token. Basic authenticated instance of this class will try acquiring an AccessToken using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Returns: access token Throws: TwitterException - When Twitter service or network is unavailable, when the user has not authorized, or when the client application is not permitted to use xAuth See Also: xAuth Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0oauthVerifier) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: oauthVerifier - OAuth verifier. AKA pin. Returns: access token Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: requestToken - the request token Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(RequestToken\u00a0requestToken, java.lang.String\u00a0oauthVerifier) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied request token and sets userId. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: requestToken - the request token oauthVerifier - OAuth verifier. AKA pin. Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth Core 1.0a - 6.2. Obtaining User Authorization, POST oauth/access_token Twitter Developers setOAuthAccessToken public\u00a0void\u00a0setOAuthAccessToken(AccessToken\u00a0accessToken) Description copied from interface:\u00a0OAuthSupport Sets the access token Specified by: setOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: accessToken - accessToken getOAuthAccessToken public\u00a0AccessToken\u00a0getOAuthAccessToken(java.lang.String\u00a0screenName, java.lang.String\u00a0password) throws TwitterException Description copied from interface:\u00a0OAuthSupport Retrieves an access token associated with the supplied screen name and password using xAuth. In order to get access acquire AccessToken using xAuth, you must apply by sending an email to api@twitter.com - all other applications will receive an HTTP 401 error. Web-based applications will not be granted access, except on a temporary basis for when they are converting from basic-authentication support to full OAuth support. Storage of Twitter usernames and passwords is forbidden. By using xAuth, you are required to store only access tokens and access token secrets. If the access token expires or is expunged by a user, you must ask for their login and password again before exchanging the credentials for an access token. Specified by: getOAuthAccessToken\u00a0in interface\u00a0OAuthSupport Parameters: screenName - the screen name password - the password Returns: access token associated with the supplied request token. Throws: TwitterException - when Twitter service or network is unavailable, or the user has not authorized See Also: OAuth FAQ dev.twitter.com - How long does an access token last?, xAuth Twitter Developers, POST oauth/access_token Twitter Developers getOAuth private\u00a0OAuthSupport\u00a0getOAuth() getOAuth2Token public\u00a0OAuth2Token\u00a0getOAuth2Token() throws TwitterException Description copied from interface:\u00a0OAuth2Support Obtains an OAuth 2 Bearer token. Specified by: getOAuth2Token\u00a0in interface\u00a0OAuth2Support Returns: OAuth 2 Bearer token Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. See Also: POST oauth2/token Twitter Developers setOAuth2Token public\u00a0void\u00a0setOAuth2Token(OAuth2Token\u00a0oauth2Token) Description copied from interface:\u00a0OAuth2Support Sets the OAuth 2 Bearer token. Specified by: setOAuth2Token\u00a0in interface\u00a0OAuth2Support Parameters: oauth2Token - OAuth 2 Bearer token invalidateOAuth2Token public\u00a0void\u00a0invalidateOAuth2Token() throws TwitterException Description copied from interface:\u00a0OAuth2Support Revokes an issued OAuth 2 Bearer Token. Specified by: invalidateOAuth2Token\u00a0in interface\u00a0OAuth2Support Throws: TwitterException - when Twitter service or network is unavailable, or connecting non-SSL endpoints. getOAuth2 private\u00a0OAuth2Support\u00a0getOAuth2() equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterException &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterException&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:9,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterException java.lang.Object java.lang.Throwable java.lang.Exception twitter4j.TwitterException All Implemented Interfaces: java.io.Serializable, TwitterResponse public class TwitterException extends java.lang.Exception implements TwitterResponse An exception class that will be thrown when TwitterAPI calls are failed. In case the Twitter server returned HTTP error code, you can get the HTTP status code using getStatusCode() method. Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private int errorCode\u00a0 private java.lang.String errorMessage\u00a0 private ExceptionDiagnosis exceptionDiagnosis\u00a0 private static java.lang.String[] FILTER\u00a0 private boolean nested\u00a0 private HttpResponse response\u00a0 private static long serialVersionUID\u00a0 private int statusCode\u00a0 Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Constructor Summary Constructors\u00a0 Constructor and Description TwitterException(java.lang.Exception\u00a0cause)\u00a0 TwitterException(java.lang.String\u00a0message)\u00a0 TwitterException(java.lang.String\u00a0message, java.lang.Exception\u00a0cause, int\u00a0statusCode)\u00a0 TwitterException(java.lang.String\u00a0message, HttpResponse\u00a0res)\u00a0 TwitterException(java.lang.String\u00a0message, java.lang.Throwable\u00a0cause)\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description private void decode(java.lang.String\u00a0str)\u00a0 boolean equals(java.lang.Object\u00a0o)\u00a0 boolean exceededRateLimitation() Tests if the exception is caused by rate limitation exceed int getAccessLevel()\u00a0 private static java.lang.String getCause(int\u00a0statusCode)\u00a0 int getErrorCode()\u00a0 java.lang.String getErrorMessage() Returns error message from the API if available. java.lang.String getExceptionCode() Returns a hexadecimal representation of this exception stacktrace. An exception code is a hexadecimal representation of the stacktrace which enables it easier to Google known issues. Format : XXXXXXXX:YYYYYYYY[ XX:YY] Where XX is a hash code of stacktrace without line number YY is a hash code of stacktrace excluding line number [-XX:YY] will appear when this instance a root cause private ExceptionDiagnosis getExceptionDiagnosis()\u00a0 java.lang.String getMessage()\u00a0 RateLimitStatus getRateLimitStatus() Returns the current rate limit status if available. java.lang.String getResponseHeader(java.lang.String\u00a0name)\u00a0 int getRetryAfter() Returns int value of &quot;Retry-After&quot; response header (Search API) or seconds_until_reset (REST API). int getStatusCode()\u00a0 int hashCode()\u00a0 boolean isCausedByNetworkIssue() Tests if the exception is caused by network issue boolean isErrorMessageAvailable() Tests if error message from the API is available boolean resourceNotFound() Tests if the exception is caused by non-existing resource (package private) void setNested()\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Throwable addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values statusCode private\u00a0int statusCode errorCode private\u00a0int errorCode exceptionDiagnosis private\u00a0ExceptionDiagnosis exceptionDiagnosis response private\u00a0HttpResponse response errorMessage private\u00a0java.lang.String errorMessage FILTER private static final\u00a0java.lang.String[] FILTER nested private\u00a0boolean nested Constructor Detail TwitterException public\u00a0TwitterException(java.lang.String\u00a0message, java.lang.Throwable\u00a0cause) TwitterException public\u00a0TwitterException(java.lang.String\u00a0message) TwitterException public\u00a0TwitterException(java.lang.Exception\u00a0cause) TwitterException public\u00a0TwitterException(java.lang.String\u00a0message, HttpResponse\u00a0res) TwitterException public\u00a0TwitterException(java.lang.String\u00a0message, java.lang.Exception\u00a0cause, int\u00a0statusCode) Method Detail getMessage public\u00a0java.lang.String\u00a0getMessage() Overrides: getMessage\u00a0in class\u00a0java.lang.Throwable decode private\u00a0void\u00a0decode(java.lang.String\u00a0str) getStatusCode public\u00a0int\u00a0getStatusCode() getErrorCode public\u00a0int\u00a0getErrorCode() getResponseHeader public\u00a0java.lang.String\u00a0getResponseHeader(java.lang.String\u00a0name) getRateLimitStatus public\u00a0RateLimitStatus\u00a0getRateLimitStatus() Description copied from interface:\u00a0TwitterResponse Returns the current rate limit status if available. Specified by: getRateLimitStatus\u00a0in interface\u00a0TwitterResponse Returns: current rate limit status getAccessLevel public\u00a0int\u00a0getAccessLevel() Specified by: getAccessLevel\u00a0in interface\u00a0TwitterResponse Returns: application permission model See Also: Application Permission Model FAQ - How do we know what the access level of a user token is? getRetryAfter public\u00a0int\u00a0getRetryAfter() Returns int value of &quot;Retry-After&quot; response header (Search API) or seconds_until_reset (REST API). An application that exceeds the rate limitations of the Search API will receive HTTP 420 response codes to requests. It is a best practice to watch for this error condition and honor the Retry-After header that instructs the application when it is safe to continue. The Retry-After header's value is the number of seconds your application should wait before submitting another query (for example: Retry-After: 67). Check if getStatusCode() == 503 before calling this method to ensure that you are actually exceeding rate limitation with query apis. Returns: instructs the application when it is safe to continue in seconds Since: Twitter4J 2.1.0 See Also: Rate Limiting Twitter Developers isCausedByNetworkIssue public\u00a0boolean\u00a0isCausedByNetworkIssue() Tests if the exception is caused by network issue Returns: if the exception is caused by network issue Since: Twitter4J 2.1.2 exceededRateLimitation public\u00a0boolean\u00a0exceededRateLimitation() Tests if the exception is caused by rate limitation exceed Returns: if the exception is caused by rate limitation exceed Since: Twitter4J 2.1.2 See Also: Rate Limiting Twitter Developers resourceNotFound public\u00a0boolean\u00a0resourceNotFound() Tests if the exception is caused by non-existing resource Returns: if the exception is caused by non-existing resource Since: Twitter4J 2.1.2 getExceptionCode public\u00a0java.lang.String\u00a0getExceptionCode() Returns a hexadecimal representation of this exception stacktrace. An exception code is a hexadecimal representation of the stacktrace which enables it easier to Google known issues. Format : XXXXXXXX:YYYYYYYY[ XX:YY] Where XX is a hash code of stacktrace without line number YY is a hash code of stacktrace excluding line number [-XX:YY] will appear when this instance a root cause Returns: a hexadecimal representation of this exception stacktrace getExceptionDiagnosis private\u00a0ExceptionDiagnosis\u00a0getExceptionDiagnosis() setNested void\u00a0setNested() getErrorMessage public\u00a0java.lang.String\u00a0getErrorMessage() Returns error message from the API if available. Returns: error message from the API Since: Twitter4J 2.2.3 isErrorMessageAvailable public\u00a0boolean\u00a0isErrorMessageAvailable() Tests if error message from the API is available Returns: true if error message from the API is available Since: Twitter4J 2.2.3 equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Throwable getCause private static\u00a0java.lang.String\u00a0getCause(int\u00a0statusCode) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterFactory java.lang.Object twitter4j.TwitterFactory All Implemented Interfaces: java.io.Serializable public final class TwitterFactory extends java.lang.Object implements java.io.Serializable A factory class for Twitter. An instance of this class is completely thread safe and can be re-used and used concurrently. Since: Twitter4J 2.1.0 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private Configuration conf\u00a0 (package private) static Authorization DEFAULT_AUTHORIZATION\u00a0 private static long serialVersionUID\u00a0 private static Twitter SINGLETON\u00a0 private static java.lang.reflect.Constructor&lt;Twitter&gt; TWITTER_CONSTRUCTOR\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description TwitterFactory() Creates a TwitterFactory with the root configuration. TwitterFactory(Configuration\u00a0conf) Creates a TwitterFactory with the given configuration. TwitterFactory(java.lang.String\u00a0configTreePath) Creates a TwitterFactory with a specified config tree Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description Twitter getInstance() Returns a instance associated with the configuration bound to this factory. Twitter getInstance(AccessToken\u00a0accessToken) Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance. Twitter getInstance(Authorization\u00a0auth)\u00a0 static Twitter getSingleton() Returns default singleton Twitter instance. Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail TWITTER_CONSTRUCTOR private static final\u00a0java.lang.reflect.Constructor&lt;Twitter&gt; TWITTER_CONSTRUCTOR DEFAULT_AUTHORIZATION static final\u00a0Authorization DEFAULT_AUTHORIZATION SINGLETON private static final\u00a0Twitter SINGLETON serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf private final\u00a0Configuration conf Constructor Detail TwitterFactory public\u00a0TwitterFactory() Creates a TwitterFactory with the root configuration. TwitterFactory public\u00a0TwitterFactory(Configuration\u00a0conf) Creates a TwitterFactory with the given configuration. Parameters: conf - the configuration to use Since: Twitter4J 2.1.1 TwitterFactory public\u00a0TwitterFactory(java.lang.String\u00a0configTreePath) Creates a TwitterFactory with a specified config tree Parameters: configTreePath - the path Method Detail getInstance public\u00a0Twitter\u00a0getInstance() Returns a instance associated with the configuration bound to this factory. Returns: default singleton instance getInstance public\u00a0Twitter\u00a0getInstance(AccessToken\u00a0accessToken) Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance. Parameters: accessToken - access token Returns: an instance Since: Twitter4J 2.1.9 getInstance public\u00a0Twitter\u00a0getInstance(Authorization\u00a0auth) getSingleton public static\u00a0Twitter\u00a0getSingleton() Returns default singleton Twitter instance. Returns: default singleton Twitter instance Since: Twitter4J 2.2.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10,&quot;i39&quot;:10,&quot;i40&quot;:10,&quot;i41&quot;:10,&quot;i42&quot;:10,&quot;i43&quot;:10,&quot;i44&quot;:10,&quot;i45&quot;:10,&quot;i46&quot;:10,&quot;i47&quot;:10,&quot;i48&quot;:10,&quot;i49&quot;:10,&quot;i50&quot;:10,&quot;i51&quot;:10,&quot;i52&quot;:10,&quot;i53&quot;:10,&quot;i54&quot;:10,&quot;i55&quot;:10,&quot;i56&quot;:10,&quot;i57&quot;:10,&quot;i58&quot;:10,&quot;i59&quot;:10,&quot;i60&quot;:10,&quot;i61&quot;:10,&quot;i62&quot;:10,&quot;i63&quot;:10,&quot;i64&quot;:10,&quot;i65&quot;:10,&quot;i66&quot;:10,&quot;i67&quot;:10,&quot;i68&quot;:10,&quot;i69&quot;:10,&quot;i70&quot;:10,&quot;i71&quot;:10,&quot;i72&quot;:10,&quot;i73&quot;:10,&quot;i74&quot;:10,&quot;i75&quot;:10,&quot;i76&quot;:10,&quot;i77&quot;:10,&quot;i78&quot;:10,&quot;i79&quot;:10,&quot;i80&quot;:10,&quot;i81&quot;:10,&quot;i82&quot;:10,&quot;i83&quot;:10,&quot;i84&quot;:10,&quot;i85&quot;:10,&quot;i86&quot;:10,&quot;i87&quot;:10,&quot;i88&quot;:10,&quot;i89&quot;:10,&quot;i90&quot;:10,&quot;i91&quot;:10,&quot;i92&quot;:10,&quot;i93&quot;:10,&quot;i94&quot;:10,&quot;i95&quot;:10,&quot;i96&quot;:10,&quot;i97&quot;:10,&quot;i98&quot;:10,&quot;i99&quot;:10,&quot;i100&quot;:10,&quot;i101&quot;:10,&quot;i102&quot;:10,&quot;i103&quot;:10,&quot;i104&quot;:10,&quot;i105&quot;:10,&quot;i106&quot;:10,&quot;i107&quot;:10,&quot;i108&quot;:10,&quot;i109&quot;:10,&quot;i110&quot;:10,&quot;i111&quot;:10,&quot;i112&quot;:10,&quot;i113&quot;:10,&quot;i114&quot;:10,&quot;i115&quot;:10,&quot;i116&quot;:10,&quot;i117&quot;:10,&quot;i118&quot;:10,&quot;i119&quot;:10,&quot;i120&quot;:10,&quot;i121&quot;:10,&quot;i122&quot;:10,&quot;i123&quot;:10,&quot;i124&quot;:10,&quot;i125&quot;:10,&quot;i126&quot;:10,&quot;i127&quot;:10,&quot;i128&quot;:10,&quot;i129&quot;:10,&quot;i130&quot;:10,&quot;i131&quot;:10,&quot;i132&quot;:10,&quot;i133&quot;:10,&quot;i134&quot;:10,&quot;i135&quot;:10,&quot;i136&quot;:10,&quot;i137&quot;:10,&quot;i138&quot;:10,&quot;i139&quot;:10,&quot;i140&quot;:10,&quot;i141&quot;:10,&quot;i142&quot;:10,&quot;i143&quot;:10,&quot;i144&quot;:10,&quot;i145&quot;:10,&quot;i146&quot;:10,&quot;i147&quot;:10,&quot;i148&quot;:10,&quot;i149&quot;:10,&quot;i150&quot;:10,&quot;i151&quot;:10,&quot;i152&quot;:10,&quot;i153&quot;:10,&quot;i154&quot;:10,&quot;i155&quot;:10,&quot;i156&quot;:10,&quot;i157&quot;:10,&quot;i158&quot;:10,&quot;i159&quot;:10,&quot;i160&quot;:10,&quot;i161&quot;:10,&quot;i162&quot;:10,&quot;i163&quot;:10,&quot;i164&quot;:10,&quot;i165&quot;:10,&quot;i166&quot;:10,&quot;i167&quot;:10,&quot;i168&quot;:10,&quot;i169&quot;:10,&quot;i170&quot;:10,&quot;i171&quot;:10,&quot;i172&quot;:10,&quot;i173&quot;:10,&quot;i174&quot;:10,&quot;i175&quot;:10,&quot;i176&quot;:10,&quot;i177&quot;:10,&quot;i178&quot;:10,&quot;i179&quot;:10,&quot;i180&quot;:10,&quot;i181&quot;:10,&quot;i182&quot;:10,&quot;i183&quot;:10,&quot;i184&quot;:10,&quot;i185&quot;:10,&quot;i186&quot;:10,&quot;i187&quot;:10,&quot;i188&quot;:10,&quot;i189&quot;:10,&quot;i190&quot;:10,&quot;i191&quot;:10,&quot;i192&quot;:10,&quot;i193&quot;:10,&quot;i194&quot;:10,&quot;i195&quot;:10,&quot;i196&quot;:10,&quot;i197&quot;:10,&quot;i198&quot;:10,&quot;i199&quot;:10,&quot;i200&quot;:10,&quot;i201&quot;:10,&quot;i202&quot;:10,&quot;i203&quot;:10,&quot;i204&quot;:10,&quot;i205&quot;:10,&quot;i206&quot;:10,&quot;i207&quot;:10,&quot;i208&quot;:10,&quot;i209&quot;:10,&quot;i210&quot;:10,&quot;i211&quot;:10,&quot;i212&quot;:10,&quot;i213&quot;:10,&quot;i214&quot;:10,&quot;i215&quot;:10,&quot;i216&quot;:10,&quot;i217&quot;:10,&quot;i218&quot;:10,&quot;i219&quot;:10,&quot;i220&quot;:10,&quot;i221&quot;:10,&quot;i222&quot;:10,&quot;i223&quot;:10,&quot;i224&quot;:10,&quot;i225&quot;:10,&quot;i226&quot;:10,&quot;i227&quot;:10,&quot;i228&quot;:10,&quot;i229&quot;:10,&quot;i230&quot;:10,&quot;i231&quot;:10,&quot;i232&quot;:10,&quot;i233&quot;:10,&quot;i234&quot;:10,&quot;i235&quot;:10,&quot;i236&quot;:10,&quot;i237&quot;:10,&quot;i238&quot;:10,&quot;i239&quot;:10,&quot;i240&quot;:10,&quot;i241&quot;:10,&quot;i242&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterImpl java.lang.Object twitter4j.TwitterBaseImpl twitter4j.TwitterImpl All Implemented Interfaces: java.io.Serializable, DirectMessagesResources, FavoritesResources, FriendsFollowersResources, HelpResources, ListsResources, PlacesGeoResources, SavedSearchesResources, SearchResource, SpamReportingResource, SuggestedUsersResources, TimelinesResources, TrendsResources, TweetsResources, UsersResources, OAuth2Support, OAuthSupport, Twitter, TwitterBase class TwitterImpl extends TwitterBaseImpl implements Twitter A java representation of the Twitter REST API This class is thread safe and can be cached/re-used and used concurrently. Currently this class is not carefully designed to be extended. It is suggested to extend this class only for mock testing purpose. Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested classes/interfaces inherited from interface\u00a0twitter4j.api.HelpResources HelpResources.Language Field Summary Fields\u00a0 Modifier and Type Field and Description private HttpParameter[] IMPLICIT_PARAMS\u00a0 private java.lang.String IMPLICIT_PARAMS_STR\u00a0 private static java.util.concurrent.ConcurrentHashMap&lt;Configuration,HttpParameter[]&gt; implicitParamsMap\u00a0 private static java.util.concurrent.ConcurrentHashMap&lt;Configuration,java.lang.String&gt; implicitParamsStrMap\u00a0 private HttpParameter INCLUDE_MY_RETWEET\u00a0 private static long serialVersionUID\u00a0 Fields inherited from class\u00a0twitter4j.TwitterBaseImpl auth, conf, factory, http Constructor Summary Constructors\u00a0 Constructor and Description TwitterImpl(Configuration\u00a0conf, Authorization\u00a0auth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description private void addParameterToList(java.util.List&lt;HttpParameter&gt;\u00a0colors, java.lang.String\u00a0paramName, java.lang.String\u00a0color)\u00a0 private void checkFileValidity(java.io.File\u00a0image) Check the existence, and the type of the specified file. User createBlock(long\u00a0userId) Blocks the user specified in the ID parameter as the authenticating user. User createBlock(java.lang.String\u00a0screenName) Blocks the user specified in the ID parameter as the authenticating user. Status createFavorite(long\u00a0id) Favorites the status specified in the ID parameter as the authenticating user. User createFriendship(long\u00a0userId) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createFriendship(long\u00a0userId, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. User createMute(long\u00a0userId) Mutes the user specified in the ID parameter as the authenticating user. User createMute(java.lang.String\u00a0screenName) Mutes the user specified in the screen name parameter as the authenticating user. SavedSearch createSavedSearch(java.lang.String\u00a0query) Creates a saved search for the authenticated user. UserList createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) Creates a new list for the authenticated user. UserList createUserListMember(long\u00a0listId, long\u00a0userId) Adds a member to a list. UserList createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. UserList createUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Adds a member to a list. UserList createUserListMembers(long\u00a0listId, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long...\u00a0userIds) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. UserList createUserListSubscription(long\u00a0listId) Make the authenticated user follow the specified list. UserList createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. UserList createUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Make the authenticated user follow the specified list. User destroyBlock(long\u00a0userId) Un-blocks the user specified in the ID parameter as the authenticating user. User destroyBlock(java.lang.String\u00a0screenName) Un-blocks the user specified in the ID parameter as the authenticating user. DirectMessage destroyDirectMessage(long\u00a0id) Destroys the direct message specified in the required ID parameter. Status destroyFavorite(long\u00a0id) Un-favorites the status specified in the ID parameter as the authenticating user. User destroyFriendship(long\u00a0userId) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. User destroyFriendship(java.lang.String\u00a0screenName) Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. User destroyMute(long\u00a0userId) Un-mutes the user specified in the ID parameter as the authenticating user. User destroyMute(java.lang.String\u00a0screenName) Un-mutes the user specified in the screen name parameter as the authenticating user. SavedSearch destroySavedSearch(long\u00a0id) Destroys a saved search for the authenticated user. Status destroyStatus(long\u00a0statusId) Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. UserList destroyUserList(long\u00a0listId) Deletes the specified list. UserList destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Deletes the specified list. UserList destroyUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Deletes the specified list. UserList destroyUserListMember(long\u00a0listId, long\u00a0userId) Removes the specified member from the list. UserList destroyUserListMember(long\u00a0listId, java.lang.String\u00a0screenName) Removes the specified members from the list. UserList destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. UserList destroyUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Removes the specified member from the list. UserList destroyUserListMembers(long\u00a0listId, long[]\u00a0userIds) Removes the specified members from the list. UserList destroyUserListMembers(long\u00a0listId, java.lang.String[]\u00a0screenNames) Removes the specified members from the list. UserList destroyUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String[]\u00a0screenNames) Removes the specified members from the list. UserList destroyUserListSubscription(long\u00a0listId) Unsubscribes the authenticated user form the specified list. UserList destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. UserList destroyUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Unsubscribes the authenticated user form the specified list. DirectMessagesResources directMessages()\u00a0 FavoritesResources favorites()\u00a0 FriendsFollowersResources friendsFollowers()\u00a0 private HttpResponse get(java.lang.String\u00a0url)\u00a0 private HttpResponse get(java.lang.String\u00a0url, HttpParameter...\u00a0params)\u00a0 AccountSettings getAccountSettings() Returns the current trend, geo, language, timezone and sleep time information for the authenticating user. TwitterAPIConfiguration getAPIConfiguration() Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. ResponseList&lt;Location&gt; getAvailableTrends() Returns the locations that Twitter has trending topic information for. IDs getBlocksIDs() Returns an array of numeric user ids the authenticating user is blocking. IDs getBlocksIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is blocking. PagableResponseList&lt;User&gt; getBlocksList() Returns a list of user objects that the authenticating user is blocking. PagableResponseList&lt;User&gt; getBlocksList(long\u00a0cursor) Returns a list of user objects that the authenticating user is blocking. ResponseList&lt;Location&gt; getClosestTrends(GeoLocation\u00a0location) Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. ResponseList&lt;User&gt; getContributees(long\u00a0userId) Returns an array of users that the specified user can contribute to. ResponseList&lt;User&gt; getContributees(java.lang.String\u00a0screenName) Returns an array of users that the specified user can contribute to. ResponseList&lt;User&gt; getContributors(long\u00a0userId) Returns an array of users who can contribute to the specified account. ResponseList&lt;User&gt; getContributors(java.lang.String\u00a0screenName) Returns an array of users who can contribute to the specified account. ResponseList&lt;DirectMessage&gt; getDirectMessages() Returns a list of the direct messages sent to the authenticating user. ResponseList&lt;DirectMessage&gt; getDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent to the authenticating user. java.io.InputStream getDMImageAsStream(java.lang.String\u00a0url) Returns a stream of the image included in direct messages. ResponseList&lt;Status&gt; getFavorites() Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(long\u00a0userId) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(java.lang.String\u00a0screenName) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. ResponseList&lt;Status&gt; getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. IDs getFollowersIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is followed by. IDs getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is followed by. PagableResponseList&lt;User&gt; getFollowersList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. IDs getFriendsIDs(long\u00a0cursor) Returns an array of numeric IDs for every user the authenticating user is following. IDs getFriendsIDs(long\u00a0userId, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. IDs getFriendsIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is following. IDs getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) Returns an array of numeric IDs for every user the specified user is following. IDs getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns an array of numeric IDs for every user the specified user is following. PagableResponseList&lt;User&gt; getFriendsList(long\u00a0userId, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. PagableResponseList&lt;User&gt; getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Place getGeoDetails(java.lang.String\u00a0placeId) Find out more details of a place that was returned from the PlacesGeoResources.reverseGeoCode(twitter4j.GeoQuery) method. ResponseList&lt;Status&gt; getHomeTimeline() Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. ResponseList&lt;Status&gt; getHomeTimeline(Paging\u00a0paging) Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. IDs getIncomingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. ResponseList&lt;HelpResources.Language&gt; getLanguages() Returns the list of languages supported by Twitter along with their ISO 639-1 code. ResponseList&lt;User&gt; getMemberSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. ResponseList&lt;Status&gt; getMentionsTimeline() Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. ResponseList&lt;Status&gt; getMentionsTimeline(Paging\u00a0paging) Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. IDs getMutesIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is muting. PagableResponseList&lt;User&gt; getMutesList(long\u00a0cursor) Returns a list of user objects that the authenticating user is muting. IDs getNoRetweetsFriendships() Returns a collection of user IDs that the currently authenticated user does not want to receive retweets from. OEmbed getOEmbed(OEmbedRequest\u00a0req) Returns information allowing the creation of an embedded representation of a Tweet on third party sites. IDs getOutgoingFriendships(long\u00a0cursor) Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. Trends getPlaceTrends(int\u00a0woeid) Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. java.lang.String getPrivacyPolicy() Returns Twitter's Privacy Policy. java.util.Map&lt;java.lang.String,RateLimitStatus&gt; getRateLimitStatus() Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. java.util.Map&lt;java.lang.String,RateLimitStatus&gt; getRateLimitStatus(java.lang.String...\u00a0resources) Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. IDs getRetweeterIds(long\u00a0statusId, int\u00a0count, long\u00a0cursor) Returns a collection of up to count user IDs belonging to users who have retweeted the tweet specified by the id parameter. IDs getRetweeterIds(long\u00a0statusId, long\u00a0cursor) Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter. ResponseList&lt;Status&gt; getRetweets(long\u00a0statusId) Returns up to 100 of the first retweets of a given tweet. ResponseList&lt;Status&gt; getRetweetsOfMe() Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. ResponseList&lt;Status&gt; getRetweetsOfMe(Paging\u00a0paging) Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. ResponseList&lt;SavedSearch&gt; getSavedSearches() Returns the authenticated user's saved search queries. ResponseList&lt;DirectMessage&gt; getSentDirectMessages() Returns a list of the direct messages sent by the authenticating user. ResponseList&lt;DirectMessage&gt; getSentDirectMessages(Paging\u00a0paging) Returns a list of the direct messages sent by the authenticating user. ResponseList&lt;Place&gt; getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) Locates places near the given coordinates which are similar in name. ResponseList&lt;Category&gt; getSuggestedUserCategories() Access to Twitter's suggested user list. java.lang.String getTermsOfService() Returns Twitter's' Terms of Service. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0listId, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the members of the specified list. PagableResponseList&lt;User&gt; getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) Returns the members of the specified list. PagableResponseList&lt;UserList&gt; getUserListMemberships(int\u00a0count, long\u00a0cursor) List the lists the authenticating user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0cursor) List the lists the authenticating user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) List the lists the specified user has been added to. PagableResponseList&lt;UserList&gt; getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) List the lists the specified user has been added to. ResponseList&lt;UserList&gt; getUserLists(long\u00a0listOwnerUserId) List the lists of the specified user. ResponseList&lt;UserList&gt; getUserLists(long\u00a0listOwnerUserId, boolean\u00a0reverse) List the lists of the specified user. ResponseList&lt;UserList&gt; getUserLists(java.lang.String\u00a0listOwnerScreenName) List the lists of the specified user. ResponseList&lt;UserList&gt; getUserLists(java.lang.String\u00a0listOwnerScreenName, boolean\u00a0reverse) List the lists of the specified user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(long\u00a0listOwnerId, int\u00a0count, long\u00a0cursor) Returns the lists owned by the specified Twitter user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(long\u00a0listOwnerId, long\u00a0cursor) Returns the lists owned by the specified Twitter user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, int\u00a0count, long\u00a0cursor) Returns the lists owned by the specified Twitter user. PagableResponseList&lt;UserList&gt; getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) Returns the lists owned by the specified Twitter user. ResponseList&lt;Status&gt; getUserListStatuses(long\u00a0listId, Paging\u00a0paging) Show tweet timeline for members of the specified list. ResponseList&lt;Status&gt; getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. ResponseList&lt;Status&gt; getUserListStatuses(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, Paging\u00a0paging) Show tweet timeline for members of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0listId, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) Returns the subscribers of the specified list. PagableResponseList&lt;User&gt; getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) Returns the subscribers of the specified list. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(long\u00a0listSubscriberId, int\u00a0count, long\u00a0cursor) List the lists the specified user follows. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(long\u00a0listSubscriberId, long\u00a0cursor) List the lists the specified user follows. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, int\u00a0count, long\u00a0cursor) List the lists the specified user follows. PagableResponseList&lt;UserList&gt; getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, long\u00a0cursor) List the lists the specified user follows. ResponseList&lt;User&gt; getUserSuggestions(java.lang.String\u00a0categorySlug) Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. ResponseList&lt;Status&gt; getUserTimeline() Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(long\u00a0userId) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(long\u00a0userId, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(java.lang.String\u00a0screenName) Returns the 20 most recent statuses posted from the authenticating user. ResponseList&lt;Status&gt; getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) Returns the 20 most recent statuses posted from the authenticating user. HelpResources help()\u00a0 private boolean isOk(HttpResponse\u00a0response)\u00a0 ListsResources list()\u00a0 ResponseList&lt;Status&gt; lookup(long...\u00a0ids) Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. ResponseList&lt;Friendship&gt; lookupFriendships(long...\u00a0ids) Returns the relationship of the authenticating user to the specified users. ResponseList&lt;Friendship&gt; lookupFriendships(java.lang.String...\u00a0screenNames) Returns the relationship of the authenticating user to the specified users. ResponseList&lt;User&gt; lookupUsers(long...\u00a0ids) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. ResponseList&lt;User&gt; lookupUsers(java.lang.String...\u00a0screenNames) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. private HttpParameter[] mergeImplicitParams(HttpParameter...\u00a0params)\u00a0 private HttpParameter[] mergeParameters(HttpParameter[]\u00a0params1, HttpParameter\u00a0params2)\u00a0 private HttpParameter[] mergeParameters(HttpParameter[]\u00a0params1, HttpParameter[]\u00a0params2)\u00a0 PlacesGeoResources placesGeo()\u00a0 private HttpResponse post(java.lang.String\u00a0url)\u00a0 private HttpResponse post(java.lang.String\u00a0url, HttpParameter...\u00a0params)\u00a0 void removeProfileBanner() Removes the uploaded profile banner for the authenticating user. User reportSpam(long\u00a0userId) The user specified in the id is blocked by the authenticated user and reported as a spammer. User reportSpam(java.lang.String\u00a0screenName) The user specified in the id is blocked by the authenticated user and reported as a spammer. Status retweetStatus(long\u00a0statusId) Retweets a tweet. ResponseList&lt;Place&gt; reverseGeoCode(GeoQuery\u00a0query) Search for places (cities and neighborhoods) that can be attached to a statuses/update. SavedSearchesResources savedSearches()\u00a0 SearchResource search()\u00a0 QueryResult search(Query\u00a0query) Returns tweets that match a specified query. ResponseList&lt;Place&gt; searchPlaces(GeoQuery\u00a0query) Search for places that can be attached to a statuses/update. ResponseList&lt;User&gt; searchUsers(java.lang.String\u00a0query, int\u00a0page) Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. DirectMessage sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. DirectMessage sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) Sends a new direct message to the specified user from the authenticating user. DirectMessage showDirectMessage(long\u00a0id) Returns a single direct message, specified by an id parameter. Relationship showFriendship(long\u00a0sourceId, long\u00a0targetId) Returns detailed information about the relationship between two users. Relationship showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) Returns detailed information about the relationship between two users. SavedSearch showSavedSearch(long\u00a0id) Retrieve the data for a saved search owned by the authenticating user specified by the given id. Status showStatus(long\u00a0id) Returns a single status, specified by the id parameter below. User showUser(long\u00a0userId) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. User showUser(java.lang.String\u00a0screenName) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. UserList showUserList(long\u00a0listId) Show the specified list. UserList showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) Show the specified list. UserList showUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) Show the specified list. User showUserListMembership(long\u00a0listId, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json User showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json User showUserListMembership(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json User showUserListSubscription(long\u00a0listId, long\u00a0userId) Check if the specified user is a subscriber of the specified list. User showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. User showUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) Check if the specified user is a subscriber of the specified list. SpamReportingResource spamReporting()\u00a0 SuggestedUsersResources suggestedUsers()\u00a0 TimelinesResources timelines()\u00a0 java.lang.String toString()\u00a0 TrendsResources trends()\u00a0 TweetsResources tweets()\u00a0 AccountSettings updateAccountSettings(java.lang.Integer\u00a0trend_locationWoeid, java.lang.Boolean\u00a0sleep_timeEnabled, java.lang.String\u00a0start_sleepTime, java.lang.String\u00a0end_sleepTime, java.lang.String\u00a0time_zone, java.lang.String\u00a0lang) Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. Relationship updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. Relationship updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) Allows you to enable or disable retweets and device notifications from the specified user. User updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. User updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. User updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. void updateProfileBanner(java.io.File\u00a0image) Uploads a profile banner on behalf of the authenticating user. void updateProfileBanner(java.io.InputStream\u00a0image) Uploads a profile banner on behalf of the authenticating user. User updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. User updateProfileImage(java.io.File\u00a0image) Updates the authenticating user's profile image. User updateProfileImage(java.io.InputStream\u00a0image) Updates the authenticating user's profile image. Status updateStatus(StatusUpdate\u00a0status) Updates the authenticating user's status. Status updateStatus(java.lang.String\u00a0status) Updates the authenticating user's status. UserList updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. UserList updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. private UserList updateUserList(java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription, HttpParameter...\u00a0params)\u00a0 UserList updateUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) Updates the specified list. UploadedMedia uploadMedia(java.io.File\u00a0image) Uploads media image to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json UploadedMedia uploadMedia(java.lang.String\u00a0fileName, java.io.InputStream\u00a0image) Uploads media image to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json UsersResources users()\u00a0 User verifyCredentials() Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Methods inherited from class\u00a0twitter4j.TwitterBaseImpl addRateLimitStatusListener, ensureAuthorizationEnabled, ensureOAuthEnabled, equals, fillInIDAndScreenName, getAuthorization, getConfiguration, getId, getOAuth2Token, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getScreenName, hashCode, httpResponseReceived, invalidateOAuth2Token, onRateLimitReached, onRateLimitStatus, setFactory, setOAuth2Token, setOAuthAccessToken, setOAuthConsumer Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Methods inherited from interface\u00a0twitter4j.auth.OAuthSupport getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, setOAuthAccessToken, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.auth.OAuth2Support getOAuth2Token, invalidateOAuth2Token, setOAuth2Token, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.TwitterBase addRateLimitStatusListener, getAuthorization, getConfiguration, getId, getScreenName, onRateLimitReached, onRateLimitStatus Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values IMPLICIT_PARAMS_STR private final\u00a0java.lang.String IMPLICIT_PARAMS_STR IMPLICIT_PARAMS private final\u00a0HttpParameter[] IMPLICIT_PARAMS INCLUDE_MY_RETWEET private final\u00a0HttpParameter INCLUDE_MY_RETWEET implicitParamsMap private static final\u00a0java.util.concurrent.ConcurrentHashMap&lt;Configuration,HttpParameter[]&gt; implicitParamsMap implicitParamsStrMap private static final\u00a0java.util.concurrent.ConcurrentHashMap&lt;Configuration,java.lang.String&gt; implicitParamsStrMap Constructor Detail TwitterImpl TwitterImpl(Configuration\u00a0conf, Authorization\u00a0auth) Method Detail getMentionsTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getMentionsTimeline() throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. This method calls https://api.twitter.com/1.1/statuses/mentions_timeline Specified by: getMentionsTimeline\u00a0in interface\u00a0TimelinesResources Returns: the 20 most recent replies Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/mentions Twitter Developers getMentionsTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getMentionsTimeline(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user. The timeline returned is the equivalent of the one seen when you view your mentions on twitter.com. This method can only return up to 800 tweets. See Working with Timelines for instructions on traversing timelines. This method calls https://api.twitter.com/1.1/statuses/mentions_timeline Specified by: getMentionsTimeline\u00a0in interface\u00a0TimelinesResources Parameters: paging - controls pagination. Supports since_id, max_id, zcount parameters. Returns: the 20 most recent replies Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/mentions Twitter Developers getHomeTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getHomeTimeline() throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Specified by: getHomeTimeline\u00a0in interface\u00a0TimelinesResources Returns: list of the home Timeline Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/home_timeline Twitter Developers getHomeTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getHomeTimeline(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web. Usage note: This home_timeline call is identical to statuses/friends_timeline, except that home_timeline also contains retweets, while statuses/friends_timeline does not for backwards compatibility reasons. In a future version of the API, statuses/friends_timeline will be deprected and replaced by home_timeline. This method calls https://api.twitter.com/1.1/statuses/home_timeline Specified by: getHomeTimeline\u00a0in interface\u00a0TimelinesResources Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of the home Timeline Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/home_timeline Twitter Developers getRetweetsOfMe public\u00a0ResponseList&lt;Status&gt;\u00a0getRetweetsOfMe() throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Specified by: getRetweetsOfMe\u00a0in interface\u00a0TimelinesResources Returns: the 20 most recent tweets of the authenticated user that have been retweeted by others. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/retweets_of_me Twitter Developers getRetweetsOfMe public\u00a0ResponseList&lt;Status&gt;\u00a0getRetweetsOfMe(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent tweets of the authenticated user that have been retweeted by others. This method calls https://api.twitter.com/1.1/statuses/retweets_of_me.json Specified by: getRetweetsOfMe\u00a0in interface\u00a0TimelinesResources Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: the 20 most recent tweets of the authenticated user that have been retweeted by others. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/retweets_of_me Twitter Developers getUserTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getUserTimeline(java.lang.String\u00a0screenName, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline.json Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResources Parameters: screenName - specifies the screen name of the user for whom to return the user_timeline paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of the user Timeline Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getUserTimeline(long\u00a0userId, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline.json Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResources Parameters: userId - specifies the ID of the user for whom to return the user_timeline paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of the user Timeline Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getUserTimeline(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResources Parameters: screenName - specifies the screen name of the user for whom to return the user_timeline Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getUserTimeline(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResources Parameters: userId - specifies the ID of the user for whom to return the user_timeline Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getUserTimeline() throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResources Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getUserTimeline public\u00a0ResponseList&lt;Status&gt;\u00a0getUserTimeline(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0TimelinesResources Returns the 20 most recent statuses posted from the authenticating user. It's also possible to request another user's timeline via the id parameter. This is the equivalent of the Web / page for your own user, or the profile page for a third party. For backwards compatibility reasons, retweets are stripped out of the user_timeline when calling in XML or JSON (they appear with 'RT' in RSS and Atom). If you'd like them included, you can merge them in from statuses retweeted_by_me. This method calls https://api.twitter.com/1.1/statuses/user_timeline Specified by: getUserTimeline\u00a0in interface\u00a0TimelinesResources Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: the 20 most recent statuses posted in the last 24 hours from the user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/user_timeline Twitter Developers getRetweets public\u00a0ResponseList&lt;Status&gt;\u00a0getRetweets(long\u00a0statusId) throws TwitterException Description copied from interface:\u00a0TweetsResources Returns up to 100 of the first retweets of a given tweet. This method calls https://api.twitter.com/1.1/statuses/retweets Specified by: getRetweets\u00a0in interface\u00a0TweetsResources Parameters: statusId - The numerical ID of the tweet you want the retweets of. Returns: the retweets of a given tweet Throws: TwitterException - when Twitter service or network is unavailable See Also: Tweets Resources \u203a statuses/retweets/:id getRetweeterIds public\u00a0IDs\u00a0getRetweeterIds(long\u00a0statusId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0TweetsResources Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter. This method calls https://api.twitter.com/1.1/get/statuses/retweeters/ids Specified by: getRetweeterIds\u00a0in interface\u00a0TweetsResources Parameters: statusId - The numerical ID of the tweet you want the retweeters of. cursor - The cursor of the page to fetch. Use -1 to start. Returns: the retweets of a given tweet Throws: TwitterException - when Twitter service or network is unavailable See Also: Tweets Resources \u203a statuses/retweeters/ids getRetweeterIds public\u00a0IDs\u00a0getRetweeterIds(long\u00a0statusId, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0TweetsResources Returns a collection of up to count user IDs belonging to users who have retweeted the tweet specified by the id parameter. This method calls https://api.twitter.com/1.1/get/statuses/retweeters/ids Specified by: getRetweeterIds\u00a0in interface\u00a0TweetsResources Parameters: statusId - The numerical ID of the tweet you want the retweeters of. count - The maximum number of retweeter IDs to retrieve. Must be between 1 and 200, inclusive. cursor - The cursor of the page to fetch. Use -1 to start. Returns: the retweets of a given tweet Throws: TwitterException - when Twitter service or network is unavailable See Also: Tweets Resources \u203a statuses/retweeters/ids showStatus public\u00a0Status\u00a0showStatus(long\u00a0id) throws TwitterException Description copied from interface:\u00a0TweetsResources Returns a single status, specified by the id parameter below. The status's author will be returned inline. This method calls https://api.twitter.com/1.1/statuses/show Specified by: showStatus\u00a0in interface\u00a0TweetsResources Parameters: id - the numerical ID of the status you're trying to retrieve Returns: a single status Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/show/:id Twitter Developers destroyStatus public\u00a0Status\u00a0destroyStatus(long\u00a0statusId) throws TwitterException Description copied from interface:\u00a0TweetsResources Destroys the status specified by the required ID parameter. Usage note: The authenticating user must be the author of the specified status. This method calls https://api.twitter.com/1.1/statuses/destroy Specified by: destroyStatus\u00a0in interface\u00a0TweetsResources Parameters: statusId - The ID of the status to destroy. Returns: the deleted status Throws: TwitterException - when Twitter service or network is unavailable See Also: POST statuses/destroy/:id Twitter Developers updateStatus public\u00a0Status\u00a0updateStatus(java.lang.String\u00a0status) throws TwitterException Description copied from interface:\u00a0TweetsResources Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. This method calls https://api.twitter.com/1.1/statuses/update Specified by: updateStatus\u00a0in interface\u00a0TweetsResources Parameters: status - the text of your status update Returns: the latest status Throws: TwitterException - when Twitter service or network is unavailable See Also: POST statuses/update Twitter Developers updateStatus public\u00a0Status\u00a0updateStatus(StatusUpdate\u00a0status) throws TwitterException Description copied from interface:\u00a0TweetsResources Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates. This method calls https://api.twitter.com/1.1/statuses/update or This method calls https://upload.twitter.com/1/statuses/update_with_media Specified by: updateStatus\u00a0in interface\u00a0TweetsResources Parameters: status - the latest status to be updated. Returns: the latest status Throws: TwitterException - when Twitter service or network is unavailable See Also: POST statuses/update Twitter Developers retweetStatus public\u00a0Status\u00a0retweetStatus(long\u00a0statusId) throws TwitterException Description copied from interface:\u00a0TweetsResources Retweets a tweet. Returns the original tweet with retweet details embedded. This method calls https://api.twitter.com/1.1/statuses/retweet Specified by: retweetStatus\u00a0in interface\u00a0TweetsResources Parameters: statusId - The ID of the status to retweet. Returns: the retweeted status Throws: TwitterException - when Twitter service or network is unavailable See Also: POST statuses/retweet/:id Twitter Developers getOEmbed public\u00a0OEmbed\u00a0getOEmbed(OEmbedRequest\u00a0req) throws TwitterException Description copied from interface:\u00a0TweetsResources Returns information allowing the creation of an embedded representation of a Tweet on third party sites. See the oEmbed specification for information about the response format. While this endpoint allows a bit of customization for the final appearance of the embedded Tweet, be aware that the appearance of the rendered Tweet may change over time to be consistent with Twitter's Display Requirements. Do not rely on any class or id parameters to stay constant in the returned markup. This method calls https://api.twitter.com/1.1/statuses/oembed.json Specified by: getOEmbed\u00a0in interface\u00a0TweetsResources Parameters: req - request Returns: information allowing the creation of an embedded representation of a Tweet on third party sites Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/oembed Twitter Developers lookup public\u00a0ResponseList&lt;Status&gt;\u00a0lookup(long...\u00a0ids) throws TwitterException Description copied from interface:\u00a0TweetsResources Returns fully-hydrated tweet objects for up to 100 tweets per request, as specified by comma-separated values passed to the id parameter. This method is especially useful to get the details (hydrate) a collection of Tweet IDs. This method calls https://api.twitter.com/1.1/statuses/lookup.json Specified by: lookup\u00a0in interface\u00a0TweetsResources Parameters: ids - array of the ids to lookup Returns: list of the tweets Throws: TwitterException - when Twitter service or network is unavailable See Also: GET statuses/lookup uploadMedia public\u00a0UploadedMedia\u00a0uploadMedia(java.io.File\u00a0image) throws TwitterException Description copied from interface:\u00a0TweetsResources Uploads media image to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json Specified by: uploadMedia\u00a0in interface\u00a0TweetsResources Parameters: image - the latest status to be updated. Returns: upload result Throws: TwitterException - when Twitter service or network is unavailable See Also: POST statuses/update Twitter Developers, Multiple Media Entities in Statuses uploadMedia public\u00a0UploadedMedia\u00a0uploadMedia(java.lang.String\u00a0fileName, java.io.InputStream\u00a0image) throws TwitterException Description copied from interface:\u00a0TweetsResources Uploads media image to be attached via TweetsResources.updateStatus(twitter4j.StatusUpdate) This method calls https://api.twitter.com/1.1/media/upload.json Specified by: uploadMedia\u00a0in interface\u00a0TweetsResources Parameters: fileName - media file name image - media body as stream Returns: upload result Throws: TwitterException - when Twitter service or network is unavailable See Also: POST statuses/update Twitter Developers, Multiple Media Entities in Statuses search public\u00a0QueryResult\u00a0search(Query\u00a0query) throws TwitterException Description copied from interface:\u00a0SearchResource Returns tweets that match a specified query. This method calls http://search.twitter.com/search.json Specified by: search\u00a0in interface\u00a0SearchResource Parameters: query - - the search condition Returns: the result Throws: TwitterException - when Twitter service or network is unavailable See Also: GET search Twitter Developers, Twitter API / Search Operators getDirectMessages public\u00a0ResponseList&lt;DirectMessage&gt;\u00a0getDirectMessages() throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Specified by: getDirectMessages\u00a0in interface\u00a0DirectMessagesResources Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages Twitter Developers getDirectMessages public\u00a0ResponseList&lt;DirectMessage&gt;\u00a0getDirectMessages(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Returns a list of the direct messages sent to the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages Specified by: getDirectMessages\u00a0in interface\u00a0DirectMessagesResources Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages Twitter Developers getSentDirectMessages public\u00a0ResponseList&lt;DirectMessage&gt;\u00a0getSentDirectMessages() throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Specified by: getSentDirectMessages\u00a0in interface\u00a0DirectMessagesResources Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages/sent Twitter Developers getSentDirectMessages public\u00a0ResponseList&lt;DirectMessage&gt;\u00a0getSentDirectMessages(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Returns a list of the direct messages sent by the authenticating user. This method calls https://api.twitter.com/1.1/direct_messages/sent Specified by: getSentDirectMessages\u00a0in interface\u00a0DirectMessagesResources Parameters: paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: List Throws: TwitterException - when Twitter service or network is unavailable See Also: GET direct_messages/sent Twitter Developers showDirectMessage public\u00a0DirectMessage\u00a0showDirectMessage(long\u00a0id) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Returns a single direct message, specified by an id parameter. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/direct_messages/show/:id.json Specified by: showDirectMessage\u00a0in interface\u00a0DirectMessagesResources Parameters: id - message id Returns: DirectMessage Throws: TwitterException - when Twitter service or network is unavailable See Also: #newtwitter and the API - Twitter API Announcements Google Group destroyDirectMessage public\u00a0DirectMessage\u00a0destroyDirectMessage(long\u00a0id) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message. This method calls https://api.twitter.com/1.1/direct_messages/destroy Specified by: destroyDirectMessage\u00a0in interface\u00a0DirectMessagesResources Parameters: id - the ID of the direct message to destroy Returns: the deleted direct message Throws: TwitterException - when Twitter service or network is unavailable See Also: POST direct_messages/destroy/:id Twitter Developers sendDirectMessage public\u00a0DirectMessage\u00a0sendDirectMessage(long\u00a0userId, java.lang.String\u00a0text) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimmed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Specified by: sendDirectMessage\u00a0in interface\u00a0DirectMessagesResources Parameters: userId - the screen name of the user to whom send the direct message text - The text of your direct message. Returns: DirectMessage Throws: TwitterException - when Twitter service or network is unavailable See Also: POST direct_messages/new Twitter Developers sendDirectMessage public\u00a0DirectMessage\u00a0sendDirectMessage(java.lang.String\u00a0screenName, java.lang.String\u00a0text) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters below. The text will be trimmed if the length of the text is exceeding 140 characters. This method calls https://api.twitter.com/1.1/direct_messages/new Specified by: sendDirectMessage\u00a0in interface\u00a0DirectMessagesResources Parameters: screenName - the screen name of the user to whom send the direct message text - The text of your direct message. Returns: DirectMessage Throws: TwitterException - when Twitter service or network is unavailable See Also: POST direct_messages/new Twitter Developers getDMImageAsStream public\u00a0java.io.InputStream\u00a0getDMImageAsStream(java.lang.String\u00a0url) throws TwitterException Description copied from interface:\u00a0DirectMessagesResources Returns a stream of the image included in direct messages. Specified by: getDMImageAsStream\u00a0in interface\u00a0DirectMessagesResources Parameters: url - image url Returns: InputStream Throws: TwitterException - when Twitter service or network is unavailable See Also: Access media shared in direct messages Twitter Developers getNoRetweetsFriendships public\u00a0IDs\u00a0getNoRetweetsFriendships() throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a collection of user IDs that the currently authenticated user does not want to receive retweets from. This method calls https://api.twitter.com/1.1/friendships/no_retweets/ids.json Specified by: getNoRetweetsFriendships\u00a0in interface\u00a0FriendsFollowersResources Returns: a collection of numeric IDs that the currently authenticated user does not want to receive retweets from. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friendships/no_retweets/ids Twitter Developers getFriendsIDs public\u00a0IDs\u00a0getFriendsIDs(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the authenticating user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: an array of numeric IDs for every user the authenticating user is following Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/ids Twitter Developers getFriendsIDs public\u00a0IDs\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - Specifies the ID of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/ids Twitter Developers getFriendsIDs public\u00a0IDs\u00a0getFriendsIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is following. This method calls http://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - Specifies the ID of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/ids Twitter Developers getFriendsIDs public\u00a0IDs\u00a0getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is following. This method calls https://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - Specifies the screen name of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/ids Twitter Developers getFriendsIDs public\u00a0IDs\u00a0getFriendsIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is following. This method calls http://api.twitter.com/1.1/friends/ids.json Specified by: getFriendsIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - Specifies the screen name of the user for whom to return the friends list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: an array of numeric IDs for every user the specified user is following Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/ids Twitter Developers getFollowersIDs public\u00a0IDs\u00a0getFollowersIDs(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/ids Twitter Developers getFollowersIDs public\u00a0IDs\u00a0getFollowersIDs(long\u00a0userId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - Specifies the ID of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/ids Twitter Developers getFollowersIDs public\u00a0IDs\u00a0getFollowersIDs(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is followed by. This method calls http://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - Specifies the ID of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/ids Twitter Developers getFollowersIDs public\u00a0IDs\u00a0getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is followed by. This method calls https://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - Specifies the screen name of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/ids Twitter Developers getFollowersIDs public\u00a0IDs\u00a0getFollowersIDs(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user the specified user is followed by. This method calls http://api.twitter.com/1.1/followers/ids.json Specified by: getFollowersIDs\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - Specifies the screen name of the user for whom to return the followers list. cursor - Causes the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filterd out after connections are queried. To begin paging provide a value of -1 as the cursor. The response from the API will include a previous_cursor and next_cursor to allow paging back and forth. count - Specifies the number of IDs attempt retrieval of, up to a maximum of 5,000 per distinct request. The value of count is best thought of as a limit to the number of results to return. When using the count parameter with this method, it is wise to use a consistent count value across all requests to the same user's collection. Usage of this parameter is encouraged in environments where all 5,000 IDs constitutes too large of a response. Returns: The ID or screen_name of the user to retrieve the friends ID list for. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/ids Twitter Developers lookupFriendships public\u00a0ResponseList&lt;Friendship&gt;\u00a0lookupFriendships(long...\u00a0ids) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Specified by: lookupFriendships\u00a0in interface\u00a0FriendsFollowersResources Parameters: ids - array of the ids to lookup Returns: list of Relationships Throws: TwitterException - when Twitter service or network is unavailable See Also: #newtwitter and the API - Twitter API Announcements Google Group lookupFriendships public\u00a0ResponseList&lt;Friendship&gt;\u00a0lookupFriendships(java.lang.String...\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns the relationship of the authenticating user to the specified users. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/lookup.json Specified by: lookupFriendships\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenNames - array of the screen names to lookup Returns: list of Relationships Throws: TwitterException - when Twitter service or network is unavailable See Also: #newtwitter and the API - Twitter API Announcements Google Group getIncomingFriendships public\u00a0IDs\u00a0getIncomingFriendships(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every user who has a pending request to follow the authenticating user. This method calls https://api.twitter.com/1.1/friendships/incoming.json Specified by: getIncomingFriendships\u00a0in interface\u00a0FriendsFollowersResources Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. Returns: an array of numeric IDs for every user who has a pending request to follow the authenticating user. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friendships/incoming Twitter Developers getOutgoingFriendships public\u00a0IDs\u00a0getOutgoingFriendships(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. This method calls https://api.twitter.com/1.1/friendships/outgoing.json Specified by: getOutgoingFriendships\u00a0in interface\u00a0FriendsFollowersResources Parameters: cursor - Breaks the results into pages. A single page contains 5000 identifiers. Provide a value of -1 to begin paging. Returns: an array of numeric IDs for every protected user for whom the authenticating user has a pending follow request. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friendships/outgoing Twitter Developers createFriendship public\u00a0User\u00a0createFriendship(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - the ID of the user to be befriended Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST friendships/create Twitter Developers createFriendship public\u00a0User\u00a0createFriendship(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - the screen name of the user to be befriended Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST friendships/create Twitter Developers createFriendship public\u00a0User\u00a0createFriendship(long\u00a0userId, boolean\u00a0follow) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - the ID of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST friendships/create Twitter Developers createFriendship public\u00a0User\u00a0createFriendship(java.lang.String\u00a0screenName, boolean\u00a0follow) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows the authenticating users to follow the user specified in the ID parameter. Returns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user an HTTP 403 will be returned. This method calls https://api.twitter.com/1.1/friendships/create/[id].json Specified by: createFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - the screen name of the user to be befriended follow - Enable notifications for the target user in addition to becoming friends. Returns: the befriended user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST friendships/create Twitter Developers destroyFriendship public\u00a0User\u00a0destroyFriendship(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy/[id].json Specified by: destroyFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - the ID of the user for whom to request a list of friends Returns: User Throws: TwitterException - when Twitter service or network is unavailable See Also: POST friendships/destroy Twitter Developers destroyFriendship public\u00a0User\u00a0destroyFriendship(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows the authenticating users to unfollow the user specified in the ID parameter. Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. This method calls https://api.twitter.com/1.1/friendships/destroy/[id].json Specified by: destroyFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - the screen name of the user for whom to request a list of friends Returns: User Throws: TwitterException - when Twitter service or network is unavailable See Also: POST friendships/destroy Twitter Developers updateFriendship public\u00a0Relationship\u00a0updateFriendship(long\u00a0userId, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Specified by: updateFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - user id to update enableDeviceNotification - set true to enable device notification retweets - set true to enable retweets Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable See Also: #newtwitter and the API - Twitter API Announcements Google Group updateFriendship public\u00a0Relationship\u00a0updateFriendship(java.lang.String\u00a0screenName, boolean\u00a0enableDeviceNotification, boolean\u00a0retweets) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Allows you to enable or disable retweets and device notifications from the specified user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/friendships/update.json Specified by: updateFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - screen name to update enableDeviceNotification - set true to enable device notification retweets - set true to enable retweets Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable See Also: #newtwitter and the API - Twitter API Announcements Google Group showFriendship public\u00a0Relationship\u00a0showFriendship(long\u00a0sourceId, long\u00a0targetId) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Specified by: showFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: sourceId - the ID of the source user targetId - the ID of the target user Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friendships/show Twitter Developers showFriendship public\u00a0Relationship\u00a0showFriendship(java.lang.String\u00a0sourceScreenName, java.lang.String\u00a0targetScreenName) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns detailed information about the relationship between two users. This method calls https://api.twitter.com/1.1/friendships/show.json Specified by: showFriendship\u00a0in interface\u00a0FriendsFollowersResources Parameters: sourceScreenName - the screen name of the source user targetScreenName - the screen name of the target user Returns: Relationship Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friendships/show Twitter Developers getFriendsList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFriendsList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFriendsList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFriendsList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFriendsList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFriendsList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFriendsList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFriendsList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their &quot;friends&quot;). At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/friends/list.json Specified by: getFriendsList\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of friends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET friends/list Twitter Developers getFollowersList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/list Twitter Developers getFollowersList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/list Twitter Developers getFollowersList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/list Twitter Developers getFollowersList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/list Twitter Developers getFollowersList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFollowersList(long\u00a0userId, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResources Parameters: userId - The ID of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/list Twitter Developers getFollowersList public\u00a0PagableResponseList&lt;User&gt;\u00a0getFollowersList(java.lang.String\u00a0screenName, long\u00a0cursor, int\u00a0count, boolean\u00a0skipStatus, boolean\u00a0includeUserEntities) throws TwitterException Description copied from interface:\u00a0FriendsFollowersResources Returns a cursored collection of user objects for users following the specified user. At this time, results are ordered with the most recent following first - however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and multiple &quot;pages&quot; of results can be navigated through using the next_cursor value in subsequent requests. See Using cursors to navigate collections for more information. This method calls https://api.twitter.com/1.1/followers/list.json Specified by: getFollowersList\u00a0in interface\u00a0FriendsFollowersResources Parameters: screenName - The screen name of the user for whom to return results for. cursor - Causes the results to be broken into pages of no more than 20 records at a time. count - The number of users to return per page, up to a maximum of 200. Defaults to 20. skipStatus - When set to either true, statuses will not be included in the returned user objects. includeUserEntities - The user object entities node will be disincluded when set to false. Returns: list of followers Throws: TwitterException - when Twitter service or network is unavailable See Also: GET followers/list Twitter Developers getAccountSettings public\u00a0AccountSettings\u00a0getAccountSettings() throws TwitterException Description copied from interface:\u00a0UsersResources Returns the current trend, geo, language, timezone and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Specified by: getAccountSettings\u00a0in interface\u00a0UsersResources Returns: the current trend, geo and sleep time information for the authenticating user. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET account/settings Twitter Developers verifyCredentials public\u00a0User\u00a0verifyCredentials() throws TwitterException Description copied from interface:\u00a0UsersResources Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid. This method calls https://api.twitter.com/1.1/account/verify_credentials.json Specified by: verifyCredentials\u00a0in interface\u00a0UsersResources Returns: user Throws: TwitterException - when Twitter service or network is unavailable, or if supplied credential is wrong (TwitterException.getStatusCode() == 401) See Also: GET account/verify_credentials Twitter Developers updateAccountSettings public\u00a0AccountSettings\u00a0updateAccountSettings(java.lang.Integer\u00a0trend_locationWoeid, java.lang.Boolean\u00a0sleep_timeEnabled, java.lang.String\u00a0start_sleepTime, java.lang.String\u00a0end_sleepTime, java.lang.String\u00a0time_zone, java.lang.String\u00a0lang) throws TwitterException Description copied from interface:\u00a0UsersResources Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Specified by: updateAccountSettings\u00a0in interface\u00a0UsersResources Parameters: trend_locationWoeid - Optional. The Yahoo! Where On Earth ID to use as the user's default trend location. sleep_timeEnabled - Optional. Whether sleep time is enabled for the user start_sleepTime - Optional. The hour that sleep time should begin if it is enabled. end_sleepTime - Optional. The hour that sleep time should end if it is enabled. time_zone - Optional. The timezone dates and times should be displayed in for the user. lang - Optional. The language which Twitter should render in for this user. (two letter ISO 639-1) Returns: the current trend, geo and sleep time information for the authenticating user. Throws: TwitterException - when Twitter service or network is unavailable See Also: POST account/settings Twitter Developers updateProfile public\u00a0User\u00a0updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) throws TwitterException Description copied from interface:\u00a0UsersResources Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. Only the parameters specified(non-null) will be updated. This method calls https://api.twitter.com/1.1/account/update_profile.json Specified by: updateProfile\u00a0in interface\u00a0UsersResources Parameters: name - Optional. Maximum of 20 characters. url - Optional. Maximum of 100 characters. Will be prepended with &quot;http://&quot; if not present. location - Optional. Maximum of 30 characters. The contents are not normalized or geocoded in any way. description - Optional. Maximum of 160 characters. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST account/update_profile Twitter Developers updateProfileBackgroundImage public\u00a0User\u00a0updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) throws TwitterException Description copied from interface:\u00a0UsersResources Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Specified by: updateProfileBackgroundImage\u00a0in interface\u00a0UsersResources Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forceably scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) See Also: POST account/update_profile_background_image Twitter Developers updateProfileBackgroundImage public\u00a0User\u00a0updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) throws TwitterException Description copied from interface:\u00a0UsersResources Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Specified by: updateProfileBackgroundImage\u00a0in interface\u00a0UsersResources Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forceably scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) See Also: POST account/update_profile_background_image Twitter Developers updateProfileColors public\u00a0User\u00a0updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) throws TwitterException Description copied from interface:\u00a0UsersResources Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. Each parameter's value must be a valid hexidecimal value, and may be either three or six characters (ex: #fff or #ffffff). This method calls https://api.twitter.com/1.1/account/update_profile_colors.json Specified by: updateProfileColors\u00a0in interface\u00a0UsersResources Parameters: profileBackgroundColor - optional, can be null profileTextColor - optional, can be null profileLinkColor - optional, can be null profileSidebarFillColor - optional, can be null profileSidebarBorderColor - optional, can be null Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST account/update_profile_colors Twitter Developers addParameterToList private\u00a0void\u00a0addParameterToList(java.util.List&lt;HttpParameter&gt;\u00a0colors, java.lang.String\u00a0paramName, java.lang.String\u00a0color) updateProfileImage public\u00a0User\u00a0updateProfileImage(java.io.File\u00a0image) throws TwitterException Description copied from interface:\u00a0UsersResources Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Specified by: updateProfileImage\u00a0in interface\u00a0UsersResources Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) See Also: POST account/update_profile_image Twitter Developers updateProfileImage public\u00a0User\u00a0updateProfileImage(java.io.InputStream\u00a0image) throws TwitterException Description copied from interface:\u00a0UsersResources Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Specified by: updateProfileImage\u00a0in interface\u00a0UsersResources Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) See Also: POST account/update_profile_image Twitter Developers checkFileValidity private\u00a0void\u00a0checkFileValidity(java.io.File\u00a0image) throws TwitterException Check the existence, and the type of the specified file. Parameters: image - image to be uploaded Throws: TwitterException - when the specified file is not found (FileNotFoundException will be nested) , or when the specified file object is not representing a file(IOException will be nested). getBlocksList public\u00a0PagableResponseList&lt;User&gt;\u00a0getBlocksList() throws TwitterException Description copied from interface:\u00a0UsersResources Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.json Specified by: getBlocksList\u00a0in interface\u00a0UsersResources Returns: a list of user objects that the authenticating user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET blocks/blocking Twitter Developers getBlocksList public\u00a0PagableResponseList&lt;User&gt;\u00a0getBlocksList(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0UsersResources Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.json Specified by: getBlocksList\u00a0in interface\u00a0UsersResources Parameters: cursor - Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Returns: a list of user objects that the authenticating user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET blocks/blocking Twitter Developers getBlocksIDs public\u00a0IDs\u00a0getBlocksIDs() throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/ids Specified by: getBlocksIDs\u00a0in interface\u00a0UsersResources Returns: Returns an array of numeric user ids the authenticating user is blocking. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET blocks/ids Twitter Developers getBlocksIDs public\u00a0IDs\u00a0getBlocksIDs(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/ids Specified by: getBlocksIDs\u00a0in interface\u00a0UsersResources Parameters: cursor - cursor Returns: Returns an array of numeric user ids the authenticating user is blocking. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET blocks/ids Twitter Developers createBlock public\u00a0User\u00a0createBlock(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create/[id].json Specified by: createBlock\u00a0in interface\u00a0UsersResources Parameters: userId - the ID of the user to block Returns: the blocked user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST blocks/create Twitter Developers createBlock public\u00a0User\u00a0createBlock(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create/[id].json Specified by: createBlock\u00a0in interface\u00a0UsersResources Parameters: screenName - the screen_name of the user to block Returns: the blocked user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST blocks/create Twitter Developers destroyBlock public\u00a0User\u00a0destroyBlock(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/destroy/[id].json Specified by: destroyBlock\u00a0in interface\u00a0UsersResources Parameters: userId - the ID of the user to block Returns: the unblocked user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST blocks/destroy Twitter Developers destroyBlock public\u00a0User\u00a0destroyBlock(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/destroy/[id].json Specified by: destroyBlock\u00a0in interface\u00a0UsersResources Parameters: screenName - the screen_name of the user to block Returns: the unblocked user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST blocks/destroy Twitter Developers getMutesList public\u00a0PagableResponseList&lt;User&gt;\u00a0getMutesList(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0UsersResources Returns a list of user objects that the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/list Specified by: getMutesList\u00a0in interface\u00a0UsersResources Parameters: cursor - Causes the list of muted users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Returns: a list of user objects that the authenticating user Throws: TwitterException - when Twitter service or network is unavailable See Also: GET blocks/blocking Twitter Developers getMutesIDs public\u00a0IDs\u00a0getMutesIDs(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of numeric user ids the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/ids Specified by: getMutesIDs\u00a0in interface\u00a0UsersResources Parameters: cursor - Causes the list of muted users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Returns: Returns an array of numeric user ids the authenticating user is muting. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET blocks/ids Twitter Developers createMute public\u00a0User\u00a0createMute(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Mutes the user specified in the ID parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Specified by: createMute\u00a0in interface\u00a0UsersResources Parameters: userId - the user_id of the user to mute Returns: the muted user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST mutes/users/create Twitter Developers createMute public\u00a0User\u00a0createMute(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Mutes the user specified in the screen name parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Specified by: createMute\u00a0in interface\u00a0UsersResources Parameters: screenName - the screen_name of the user to mute Returns: the muted user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST mutes/users/create Twitter Developers destroyMute public\u00a0User\u00a0destroyMute(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Un-mutes the user specified in the ID parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Specified by: destroyMute\u00a0in interface\u00a0UsersResources Parameters: userId - the ID of the user to mute Returns: the unmuted user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST mutes/users/destroy Twitter Developers destroyMute public\u00a0User\u00a0destroyMute(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Un-mutes the user specified in the screen name parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Specified by: destroyMute\u00a0in interface\u00a0UsersResources Parameters: screenName - the screen_name of the user to mute Returns: the unmuted user Throws: TwitterException - when Twitter service or network is unavailable See Also: POST mutes/users/destroy Twitter Developers lookupUsers public\u00a0ResponseList&lt;User&gt;\u00a0lookupUsers(long...\u00a0ids) throws TwitterException Description copied from interface:\u00a0UsersResources Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Specified by: lookupUsers\u00a0in interface\u00a0UsersResources Parameters: ids - Specifies the screen names of the users to return. Returns: users Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/lookup Twitter Developers lookupUsers public\u00a0ResponseList&lt;User&gt;\u00a0lookupUsers(java.lang.String...\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0UsersResources Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Specified by: lookupUsers\u00a0in interface\u00a0UsersResources Parameters: screenNames - Specifies the screen names of the users to return. Returns: users Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/lookup Twitter Developers showUser public\u00a0User\u00a0showUser(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Specified by: showUser\u00a0in interface\u00a0UsersResources Parameters: userId - the ID of the user for whom to request the detail Returns: users Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/show Twitter Developers showUser public\u00a0User\u00a0showUser(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Specified by: showUser\u00a0in interface\u00a0UsersResources Parameters: screenName - the screen name of the user for whom to request the detail Returns: User Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/show Twitter Developers searchUsers public\u00a0ResponseList&lt;User&gt;\u00a0searchUsers(java.lang.String\u00a0query, int\u00a0page) throws TwitterException Description copied from interface:\u00a0UsersResources Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. This method calls https://api.twitter.com/1.1/users/search.json Specified by: searchUsers\u00a0in interface\u00a0UsersResources Parameters: query - The query to run against people search. page - Specifies the page of results to retrieve. Number of statuses per page is fixed to 20. Returns: the list of Users matches the provided Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/search Twitter Developers getContributees public\u00a0ResponseList&lt;User&gt;\u00a0getContributees(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of users that the specified user can contribute to. Specified by: getContributees\u00a0in interface\u00a0UsersResources Parameters: userId - The user id of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/contributors Twitter Developers getContributees public\u00a0ResponseList&lt;User&gt;\u00a0getContributees(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of users that the specified user can contribute to. Specified by: getContributees\u00a0in interface\u00a0UsersResources Parameters: screenName - The screen name of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/contributors Twitter Developers getContributors public\u00a0ResponseList&lt;User&gt;\u00a0getContributors(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of users who can contribute to the specified account. Specified by: getContributors\u00a0in interface\u00a0UsersResources Parameters: userId - The user id of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/contributors Twitter Developers getContributors public\u00a0ResponseList&lt;User&gt;\u00a0getContributors(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0UsersResources Returns an array of users who can contribute to the specified account. Specified by: getContributors\u00a0in interface\u00a0UsersResources Parameters: screenName - The screen name of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/contributors Twitter Developers removeProfileBanner public\u00a0void\u00a0removeProfileBanner() throws TwitterException Description copied from interface:\u00a0UsersResources Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success. This method calls https://api.twitter.com/1.1/account/remove_profile_banner.json Specified by: removeProfileBanner\u00a0in interface\u00a0UsersResources Throws: TwitterException - when Twitter service or network is unavailable See Also: POST account/remove_profile_banner Twitter Developers updateProfileBanner public\u00a0void\u00a0updateProfileBanner(java.io.File\u00a0image) throws TwitterException Description copied from interface:\u00a0UsersResources Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Specified by: updateProfileBanner\u00a0in interface\u00a0UsersResources Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) See Also: POST account/update_profile_banner Twitter Developers updateProfileBanner public\u00a0void\u00a0updateProfileBanner(java.io.InputStream\u00a0image) throws TwitterException Description copied from interface:\u00a0UsersResources Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Specified by: updateProfileBanner\u00a0in interface\u00a0UsersResources Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) See Also: POST account/update_profile_banner Twitter Developers getUserSuggestions public\u00a0ResponseList&lt;User&gt;\u00a0getUserSuggestions(java.lang.String\u00a0categorySlug) throws TwitterException Description copied from interface:\u00a0SuggestedUsersResources Access the users in a given category of the Twitter suggested user list. It is recommended that end clients cache this data for no more than one hour. This method calls https://api.twitter.com/1.1/users/suggestions/:slug.json Specified by: getUserSuggestions\u00a0in interface\u00a0SuggestedUsersResources Parameters: categorySlug - slug Returns: list of suggested users Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/suggestions/:slug Twitter Developers getSuggestedUserCategories public\u00a0ResponseList&lt;Category&gt;\u00a0getSuggestedUserCategories() throws TwitterException Description copied from interface:\u00a0SuggestedUsersResources Access to Twitter's suggested user list. This returns the list of suggested user categories. The category can be used in the users/suggestions/category endpoint to get the users in that category. This method calls https://api.twitter.com/1.1/users/suggestions Specified by: getSuggestedUserCategories\u00a0in interface\u00a0SuggestedUsersResources Returns: list of suggested user categories. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/suggestions Twitter Developers getMemberSuggestions public\u00a0ResponseList&lt;User&gt;\u00a0getMemberSuggestions(java.lang.String\u00a0categorySlug) throws TwitterException Description copied from interface:\u00a0SuggestedUsersResources Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/users/suggestions/:slug/members.json Specified by: getMemberSuggestions\u00a0in interface\u00a0SuggestedUsersResources Parameters: categorySlug - slug Returns: list of suggested users Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/suggestions/:slug/members Twitter Developers getFavorites public\u00a0ResponseList&lt;Status&gt;\u00a0getFavorites() throws TwitterException Description copied from interface:\u00a0FavoritesResources Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites.json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResources Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET favorites Twitter Developers getFavorites public\u00a0ResponseList&lt;Status&gt;\u00a0getFavorites(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0FavoritesResources Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. Specified by: getFavorites\u00a0in interface\u00a0FavoritesResources Parameters: userId - the id of the user for whom to request a list of favorite statuses Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET favorites Twitter Developers getFavorites public\u00a0ResponseList&lt;Status&gt;\u00a0getFavorites(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0FavoritesResources Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. Specified by: getFavorites\u00a0in interface\u00a0FavoritesResources Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET favorites Twitter Developers getFavorites public\u00a0ResponseList&lt;Status&gt;\u00a0getFavorites(Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0FavoritesResources Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites.json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResources Parameters: paging - controls pagination. Supports sinceId and page parameters. Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET favorites Twitter Developers getFavorites public\u00a0ResponseList&lt;Status&gt;\u00a0getFavorites(long\u00a0userId, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0FavoritesResources Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResources Parameters: userId - the id of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET favorites Twitter Developers getFavorites public\u00a0ResponseList&lt;Status&gt;\u00a0getFavorites(java.lang.String\u00a0screenName, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0FavoritesResources Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format. This method calls https://api.twitter.com/1.1/favorites/[id].json Specified by: getFavorites\u00a0in interface\u00a0FavoritesResources Parameters: screenName - the screen name of the user for whom to request a list of favorite statuses paging - controls pagination. Supports sinceId and page parameters. Returns: favorite statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET favorites Twitter Developers destroyFavorite public\u00a0Status\u00a0destroyFavorite(long\u00a0id) throws TwitterException Description copied from interface:\u00a0FavoritesResources Un-favorites the status specified in the ID parameter as the authenticating user. Returns the un-favorited status in the requested format when successful. This method calls https://api.twitter.com/1.1/favorites/destroy/[id].json Specified by: destroyFavorite\u00a0in interface\u00a0FavoritesResources Parameters: id - the ID of the status to un-favorite Returns: destroyed statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: POST favorites/destroy/:id Twitter Developers createFavorite public\u00a0Status\u00a0createFavorite(long\u00a0id) throws TwitterException Description copied from interface:\u00a0FavoritesResources Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful. This method calls https://api.twitter.com/1.1/favorites/create/[id].json Specified by: createFavorite\u00a0in interface\u00a0FavoritesResources Parameters: id - the ID of the status to favorite Returns: created favorite status Throws: TwitterException - when Twitter service or network is unavailable See Also: POST favorites/create/:id Twitter Developers getUserLists public\u00a0ResponseList&lt;UserList&gt;\u00a0getUserLists(java.lang.String\u00a0listOwnerScreenName) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Specified by: getUserLists\u00a0in interface\u00a0ListsResources Parameters: listOwnerScreenName - The screen name of the list owner as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/list Twitter Developers getUserLists public\u00a0ResponseList&lt;UserList&gt;\u00a0getUserLists(java.lang.String\u00a0listOwnerScreenName, boolean\u00a0reverse) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Specified by: getUserLists\u00a0in interface\u00a0ListsResources Parameters: listOwnerScreenName - The screen name of the list owner as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. reverse - Set this to true if you would like owned lists to be returned first Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/list Twitter Developers getUserLists public\u00a0ResponseList&lt;UserList&gt;\u00a0getUserLists(long\u00a0listOwnerUserId) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Specified by: getUserLists\u00a0in interface\u00a0ListsResources Parameters: listOwnerUserId - The id of the list owner Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/list Twitter Developers getUserLists public\u00a0ResponseList&lt;UserList&gt;\u00a0getUserLists(long\u00a0listOwnerUserId, boolean\u00a0reverse) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned. This method calls https://api.twitter.com/1.1/lists.json Specified by: getUserLists\u00a0in interface\u00a0ListsResources Parameters: listOwnerUserId - The id of the list owner reverse - Set this to true if you would like owned lists to be returned first Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/list Twitter Developers getUserListStatuses public\u00a0ResponseList&lt;Status&gt;\u00a0getUserListStatuses(long\u00a0listId, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0ListsResources Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Specified by: getUserListStatuses\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of statuses for members of the specified list Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/statuses Twitter Developers getUserListStatuses public\u00a0ResponseList&lt;Status&gt;\u00a0getUserListStatuses(long\u00a0ownerId, java.lang.String\u00a0slug, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0ListsResources Show tweet timeline for members of the specified list. https://api.twitter.com/1/user/lists/list_id/statuses.json Specified by: getUserListStatuses\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of statuses for members of the specified list Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/statuses Twitter Developers getUserListStatuses public\u00a0ResponseList&lt;Status&gt;\u00a0getUserListStatuses(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, Paging\u00a0paging) throws TwitterException Description copied from interface:\u00a0ListsResources Show tweet timeline for members of the specified list. https://api.twitter.com/1.1/lists/statuses.json Specified by: getUserListStatuses\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list paging - controls pagination. Supports since_id, max_id, count and page parameters. Returns: list of statuses for members of the specified list Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/statuses Twitter Developers destroyUserListMember public\u00a0UserList\u00a0destroyUserListMember(long\u00a0listId, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Specified by: destroyUserListMember\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. userId - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy Twitter Developers destroyUserListMember public\u00a0UserList\u00a0destroyUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Specified by: destroyUserListMember\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy Twitter Developers destroyUserListMember public\u00a0UserList\u00a0destroyUserListMember(long\u00a0listId, java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Specified by: destroyUserListMember\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. screenName - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy Twitter Developers destroyUserListMember public\u00a0UserList\u00a0destroyUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy.json Specified by: destroyUserListMember\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userId - The screen name of the member you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy Twitter Developers destroyUserListMembers public\u00a0UserList\u00a0destroyUserListMembers(long\u00a0listId, java.lang.String[]\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy_all.json Specified by: destroyUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. screenNames - The screen names of the members you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy_all Twitter Developers destroyUserListMembers public\u00a0UserList\u00a0destroyUserListMembers(long\u00a0listId, long[]\u00a0userIds) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy_all.json Specified by: destroyUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy_all Twitter Developers destroyUserListMembers public\u00a0UserList\u00a0destroyUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String[]\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0ListsResources Removes the specified members from the list. The authenticated user must be the list's owner to remove members from the list. This method calls https://api.twitter.com/1.1/lists/members/destroy_all.json Specified by: destroyUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The screen names of the members you wish to remove from the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/destroy_all Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the authenticating user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the authenticating user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberScreenName - The screen name of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberScreenName - The screen name of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(java.lang.String\u00a0listMemberScreenName, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberScreenName - The screen name of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberScreenName is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberId - The id of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberId - The id of the list member cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberId is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListMemberships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListMemberships(long\u00a0listMemberId, int\u00a0count, long\u00a0cursor, boolean\u00a0filterToOwnedLists) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user has been added to. This method calls https://api.twitter.com/1.1/lists/memberships.json Specified by: getUserListMemberships\u00a0in interface\u00a0ListsResources Parameters: listMemberId - The id of the list member count - The amount of results to return per page. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. filterToOwnedLists - Whether to return just lists the authenticating user owns, and the user represented by listMemberId is a member of. Returns: the list of lists Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/memberships Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0listId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers getUserListSubscribers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListSubscribers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the subscribers of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers.json Specified by: getUserListSubscribers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscribers Twitter Developers createUserListSubscription public\u00a0UserList\u00a0createUserListSubscription(long\u00a0listId) throws TwitterException Description copied from interface:\u00a0ListsResources Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Specified by: createUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/subscribers/create Twitter Developers createUserListSubscription public\u00a0UserList\u00a0createUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Specified by: createUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/subscribers/create Twitter Developers createUserListSubscription public\u00a0UserList\u00a0createUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Make the authenticated user follow the specified list. This method calls https://api.twitter.com/1.1/list/subscribers/create.json Specified by: createUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/subscribers/create Twitter Developers showUserListSubscription public\u00a0User\u00a0showUserListSubscription(long\u00a0listId, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Specified by: showUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/subscribers/show Twitter Developers showUserListSubscription public\u00a0User\u00a0showUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Specified by: showUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/subscribers/show Twitter Developers showUserListSubscription public\u00a0User\u00a0showUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Check if the specified user is a subscriber of the specified list. This method calls https://api.twitter.com/1.1/lists/subscribers/show.json Specified by: showUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/subscribers/show Twitter Developers destroyUserListSubscription public\u00a0UserList\u00a0destroyUserListSubscription(long\u00a0listId) throws TwitterException Description copied from interface:\u00a0ListsResources Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Specified by: destroyUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/subscribers/destroy Twitter Developers destroyUserListSubscription public\u00a0UserList\u00a0destroyUserListSubscription(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Specified by: destroyUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/subscribers/destroy Twitter Developers destroyUserListSubscription public\u00a0UserList\u00a0destroyUserListSubscription(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Unsubscribes the authenticated user form the specified list. This method calls https://api.twitter.com/1.1/subscribers/destroy.json Specified by: destroyUserListSubscription\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/subscribers/destroy Twitter Developers createUserListMembers public\u00a0UserList\u00a0createUserListMembers(long\u00a0listId, long...\u00a0userIds) throws TwitterException Description copied from interface:\u00a0ListsResources Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0UserList\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long...\u00a0userIds) throws TwitterException Description copied from interface:\u00a0ListsResources Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0UserList\u00a0createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long...\u00a0userIds) throws TwitterException Description copied from interface:\u00a0ListsResources Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userIds - The array of ids of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0UserList\u00a0createUserListMembers(long\u00a0listId, java.lang.String...\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0ListsResources Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0UserList\u00a0createUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0ListsResources Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create_all Twitter Developers createUserListMembers public\u00a0UserList\u00a0createUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String...\u00a0screenNames) throws TwitterException Description copied from interface:\u00a0ListsResources Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members, and you are limited to adding up to 100 members to a list at a time with this method. This method calls https://api.twitter.com/1.1/lists/members/create_all.json Specified by: createUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list screenNames - The array of screen names of the user to add as member of the list. up to 100 are allowed in a single request. Returns: the list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create_all Twitter Developers showUserListMembership public\u00a0User\u00a0showUserListMembership(long\u00a0listId, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Specified by: showUserListMembership\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/members/show Twitter Developers showUserListMembership public\u00a0User\u00a0showUserListMembership(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Specified by: showUserListMembership\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/members/show Twitter Developers showUserListMembership public\u00a0User\u00a0showUserListMembership(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Check if a user is a member of the specified list. This method calls https://api.twitter.com/1.1/lists/members/show.json Specified by: showUserListMembership\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - Id The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user who you want to know is a member or not of the specified list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable , or the user is not a member of the specified list(TwitterException.getStatusCode() returns 404 in that case.) See Also: GET lists/members/show Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0listId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0listId, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(long\u00a0ownerId, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers getUserListMembers public\u00a0PagableResponseList&lt;User&gt;\u00a0getUserListMembers(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, int\u00a0count, long\u00a0cursor, boolean\u00a0skipStatus) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the members of the specified list. This method calls https://api.twitter.com/1.1/lists/members.json Specified by: getUserListMembers\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list count - Specifies the number of results to return per page. The default is 20, with a maximum of 5,000. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. skipStatus - When set to either true, t or 1 statuses will not be included in the returned user objects. Returns: the members of the specified list. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/members Twitter Developers createUserListMember public\u00a0UserList\u00a0createUserListMember(long\u00a0listId, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Specified by: createUserListMember\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list. userId - The id of the user to add as a member of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create Twitter Developers createUserListMember public\u00a0UserList\u00a0createUserListMember(long\u00a0ownerId, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Specified by: createUserListMember\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user to add as a member of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create Twitter Developers createUserListMember public\u00a0UserList\u00a0createUserListMember(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, long\u00a0userId) throws TwitterException Description copied from interface:\u00a0ListsResources Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 5000 members. This method calls https://api.twitter.com/1.1/lists/members/create.json Specified by: createUserListMember\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list userId - The id of the user to add as a member of the list. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/members/create Twitter Developers destroyUserList public\u00a0UserList\u00a0destroyUserList(long\u00a0listId) throws TwitterException Description copied from interface:\u00a0ListsResources Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Specified by: destroyUserList\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list to delete Returns: the deleted list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/destroy Twitter Developers destroyUserList public\u00a0UserList\u00a0destroyUserList(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Specified by: destroyUserList\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the deleted list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/destroy Twitter Developers destroyUserList public\u00a0UserList\u00a0destroyUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Deletes the specified list. Must be owned by the authenticated user. This method calls https://api.twitter.com/1.1/lists/destroy.json Specified by: destroyUserList\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the deleted list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/destroy Twitter Developers updateUserList public\u00a0UserList\u00a0updateUserList(long\u00a0listId, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) throws TwitterException Description copied from interface:\u00a0ListsResources Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Specified by: updateUserList\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list to update. newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/update Twitter Developers updateUserList public\u00a0UserList\u00a0updateUserList(long\u00a0ownerId, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) throws TwitterException Description copied from interface:\u00a0ListsResources Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Specified by: updateUserList\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/update Twitter Developers updateUserList public\u00a0UserList\u00a0updateUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug, java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription) throws TwitterException Description copied from interface:\u00a0ListsResources Updates the specified list. This method calls https://api.twitter.com/1.1/lists/update.json Specified by: updateUserList\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list newListName - What you'd like to change the list's name to. isPublicList - Whether your list is public or private. Optional. Values can be public or private. Lists are public by default if no mode is specified. newDescription - What you'd like to change the list description to. Returns: the updated list Throws: TwitterException - when Twitter service or network is unavailable See Also: POST lists/update Twitter Developers updateUserList private\u00a0UserList\u00a0updateUserList(java.lang.String\u00a0newListName, boolean\u00a0isPublicList, java.lang.String\u00a0newDescription, HttpParameter...\u00a0params) throws TwitterException Throws: TwitterException createUserList public\u00a0UserList\u00a0createUserList(java.lang.String\u00a0listName, boolean\u00a0isPublicList, java.lang.String\u00a0description) throws TwitterException Description copied from interface:\u00a0ListsResources Creates a new list for the authenticated user. Accounts are limited to 20 lists. This method calls https://api.twitter.com/1.1/lists/create.json Specified by: createUserList\u00a0in interface\u00a0ListsResources Parameters: listName - The name of the list you are creating. Required. isPublicList - set true if you wish to make a public list description - The description of the list you are creating. Optional. Returns: the list that was created Throws: TwitterException - when Twitter service or network is unavailable, or the authenticated user already has 20 lists(TwitterException.getStatusCode() == 403). See Also: POST lists/create Twitter Developers showUserList public\u00a0UserList\u00a0showUserList(long\u00a0listId) throws TwitterException Description copied from interface:\u00a0ListsResources Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Specified by: showUserList\u00a0in interface\u00a0ListsResources Parameters: listId - The id of the list to show Returns: the specified list Throws: TwitterException - when Twitter service or network is unavailable See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers showUserList public\u00a0UserList\u00a0showUserList(long\u00a0ownerId, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Specified by: showUserList\u00a0in interface\u00a0ListsResources Parameters: ownerId - The user ID of the user who owns the list being requested by a slug. slug - slug of the list Returns: the specified list Throws: TwitterException - when Twitter service or network is unavailable See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers showUserList public\u00a0UserList\u00a0showUserList(java.lang.String\u00a0ownerScreenName, java.lang.String\u00a0slug) throws TwitterException Description copied from interface:\u00a0ListsResources Show the specified list. Private lists will only be shown if the authenticated user owns the specified list. This method calls https://api.twitter.com/1.1/lists/show.json Specified by: showUserList\u00a0in interface\u00a0ListsResources Parameters: ownerScreenName - The screen name of the user who owns the list being requested by a slug. slug - slug of the list Returns: the specified list Throws: TwitterException - when Twitter service or network is unavailable See Also: https://dev.twitter.com/docs/api/1.1/get/lists/show Twitter Developers getUserListSubscriptions public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Specified by: getUserListSubscriptions\u00a0in interface\u00a0ListsResources Parameters: listSubscriberScreenName - The screen name of the list subscriber cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscriptions Twitter Developers getUserListSubscriptions public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(java.lang.String\u00a0listSubscriberScreenName, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Specified by: getUserListSubscriptions\u00a0in interface\u00a0ListsResources Parameters: listSubscriberScreenName - The screen name of the list subscriber count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscriptions Twitter Developers getUserListSubscriptions public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(long\u00a0listSubscriberId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Specified by: getUserListSubscriptions\u00a0in interface\u00a0ListsResources Parameters: listSubscriberId - The ID of the list subscriber cursor - Breaks the results into pages. A single page contains 20 lists. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscriptions Twitter Developers getUserListSubscriptions public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListSubscriptions(long\u00a0listSubscriberId, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources List the lists the specified user follows. This method calls https://api.twitter.com/1.1/lists/subscriptions.json Specified by: getUserListSubscriptions\u00a0in interface\u00a0ListsResources Parameters: listSubscriberId - The ID of the list subscriber count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned to in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. Returns: the list of lists the specified user is subscribed to Throws: TwitterException - when Twitter service or network is unavailable See Also: GET lists/subscriptions Twitter Developers getUserListsOwnerships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Specified by: getUserListsOwnerships\u00a0in interface\u00a0ListsResources Parameters: listOwnerScreenName - The screen name of the list owner cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable getUserListsOwnerships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(java.lang.String\u00a0listOwnerScreenName, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Specified by: getUserListsOwnerships\u00a0in interface\u00a0ListsResources Parameters: listOwnerScreenName - The screen name of the list owner count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable getUserListsOwnerships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(long\u00a0listOwnerId, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Specified by: getUserListsOwnerships\u00a0in interface\u00a0ListsResources Parameters: listOwnerId - The id of the list owner cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable getUserListsOwnerships public\u00a0PagableResponseList&lt;UserList&gt;\u00a0getUserListsOwnerships(long\u00a0listOwnerId, int\u00a0count, long\u00a0cursor) throws TwitterException Description copied from interface:\u00a0ListsResources Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists. This method calls https://api.twitter.com/1.1/lists/ownerships.json Specified by: getUserListsOwnerships\u00a0in interface\u00a0ListsResources Parameters: listOwnerId - The id of the list owner count - The amount of results to return per page. Defaults to 20. No more than 1000 results will ever be returned in a single page. cursor - Breaks the results into pages. Provide a value of -1 to begin paging. Provide values as returned in the response body's next_cursor and previous_cursor attributes to page back and forth in the list. It is recommended to always use cursors when the method supports them. See Using cursors to navigate collections for more information. Returns: lists owned by the specified Twitter user Throws: TwitterException - when Twitter service or network is unavailable getSavedSearches public\u00a0ResponseList&lt;SavedSearch&gt;\u00a0getSavedSearches() throws TwitterException Description copied from interface:\u00a0SavedSearchesResources Returns the authenticated user's saved search queries. This method calls https://api.twitter.com/1.1/saved_searches.json Specified by: getSavedSearches\u00a0in interface\u00a0SavedSearchesResources Returns: Returns an array of numeric user ids the authenticating user is blocking. Throws: TwitterException - when Twitter service or network is unavailable See Also: GET saved_searches Twitter Developers showSavedSearch public\u00a0SavedSearch\u00a0showSavedSearch(long\u00a0id) throws TwitterException Description copied from interface:\u00a0SavedSearchesResources Retrieve the data for a saved search owned by the authenticating user specified by the given id. This method calls https://api.twitter.com/1.1/saved_searches/show/:id.json Specified by: showSavedSearch\u00a0in interface\u00a0SavedSearchesResources Parameters: id - The id of the saved search to be retrieved. Returns: the data for a saved search Throws: TwitterException - when Twitter service or network is unavailable See Also: GET saved_searches/show/:id Twitter Developers createSavedSearch public\u00a0SavedSearch\u00a0createSavedSearch(java.lang.String\u00a0query) throws TwitterException Description copied from interface:\u00a0SavedSearchesResources Creates a saved search for the authenticated user. This method calls https://api.twitter.com/1.1/saved_searches/saved_searches/create.json Specified by: createSavedSearch\u00a0in interface\u00a0SavedSearchesResources Parameters: query - the query string Returns: the data for a created saved search Throws: TwitterException - when Twitter service or network is unavailable See Also: POST saved_searches/create Twitter Developers destroySavedSearch public\u00a0SavedSearch\u00a0destroySavedSearch(long\u00a0id) throws TwitterException Description copied from interface:\u00a0SavedSearchesResources Destroys a saved search for the authenticated user. The search specified by id must be owned by the authenticating user. This method calls https://api.twitter.com/1.1/saved_searches/destroy/id.json Specified by: destroySavedSearch\u00a0in interface\u00a0SavedSearchesResources Parameters: id - The id of the saved search to be deleted. Returns: the data for a destroyed saved search Throws: TwitterException - when Twitter service or network is unavailable See Also: POST saved_searches/destroy/:id Twitter Developers getGeoDetails public\u00a0Place\u00a0getGeoDetails(java.lang.String\u00a0placeId) throws TwitterException Description copied from interface:\u00a0PlacesGeoResources Find out more details of a place that was returned from the PlacesGeoResources.reverseGeoCode(twitter4j.GeoQuery) method. This method calls https://api.twitter.com/1.1/geo/id/:id.json Specified by: getGeoDetails\u00a0in interface\u00a0PlacesGeoResources Parameters: placeId - The ID of the location to query about. Returns: details of the specified place Throws: TwitterException - when Twitter service or network is unavailable See Also: GET geo/id/:place_id Twitter Developers reverseGeoCode public\u00a0ResponseList&lt;Place&gt;\u00a0reverseGeoCode(GeoQuery\u00a0query) throws TwitterException Description copied from interface:\u00a0PlacesGeoResources Search for places (cities and neighborhoods) that can be attached to a statuses/update. Given a latitude and a longitude, return a list of all the valid places that can be used as a place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location up with a call to statuses/update. There are multiple granularities of places that can be returned -- &quot;neighborhoods&quot;, &quot;cities&quot;, etc. At this time, only United States data is available through this method. This API call is meant to be an informative call and will deliver generalized results about geography. This method calls https://api.twitter.com/1.1/geo/reverse_geocode.json Specified by: reverseGeoCode\u00a0in interface\u00a0PlacesGeoResources Parameters: query - search query Returns: places (cities and neighborhoods) that can be attached to a statuses/update Throws: TwitterException - when Twitter service or network is unavailable See Also: GET geo/reverse_geocode Twitter Developers searchPlaces public\u00a0ResponseList&lt;Place&gt;\u00a0searchPlaces(GeoQuery\u00a0query) throws TwitterException Description copied from interface:\u00a0PlacesGeoResources Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status. Conceptually, a query can be made from the user's location, retrieve a list of places, have the user validate the location he or she is at, and then send the ID of this location with a call to statuses/update. This is the recommended method to use find places that can be attached to statuses/update. Unlike geo/reverse_geocode which provides raw data access, this endpoint can potentially re-order places with regards to the user who is authenticated. This approach is also preferred for interactive place matching with the user. This method calls https://api.twitter.com/1.1/geo/search.json Specified by: searchPlaces\u00a0in interface\u00a0PlacesGeoResources Parameters: query - search query Returns: places (cities and neighborhoods) that can be attached to a statuses/update Throws: TwitterException - when Twitter service or network is unavailable See Also: GET geo/search Twitter Developers getSimilarPlaces public\u00a0ResponseList&lt;Place&gt;\u00a0getSimilarPlaces(GeoLocation\u00a0location, java.lang.String\u00a0name, java.lang.String\u00a0containedWithin, java.lang.String\u00a0streetAddress) throws TwitterException Description copied from interface:\u00a0PlacesGeoResources Locates places near the given coordinates which are similar in name. Conceptually you would use this method to get a list of known places to choose from first. Then, if the desired place doesn't exist, make a request to post/geo/place to create a new one. The token contained in the response is the token needed to be able to create a new place. This method calls https://api.twitter.com/1.1/geo/similar_places.json Specified by: getSimilarPlaces\u00a0in interface\u00a0PlacesGeoResources Parameters: location - The latitude and longitude to search around. name - The name a place is known as. containedWithin - optional: the place_id which you would like to restrict the search results to. Setting this value means only places within the given place_id will be found. streetAddress - optional: This parameter searches for places which have this given street address. There are other well-known, and application specific attributes available. Custom attributes are also permitted. Learn more about Place Attributes. Returns: places (cities and neighborhoods) that can be attached to a statuses/update Throws: TwitterException - when Twitter service or network is unavailable getPlaceTrends public\u00a0Trends\u00a0getPlaceTrends(int\u00a0woeid) throws TwitterException Description copied from interface:\u00a0TrendsResources Returns the top 10 trending topics for a specific WOEID, if trending information is available for it. The response is an array of &quot;trend&quot; objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL. This information is cached for 5 minutes. Requesting more frequently than that will not return any more data, and will count against your rate limit usage. This method calls https://api.twitter.com/1.1/trends/place.json Specified by: getPlaceTrends\u00a0in interface\u00a0TrendsResources Parameters: woeid - The Yahoo! Where On Earth ID of the location to return trending information for. Global information is available by using 1 as the WOEID. Returns: trends Throws: TwitterException - when Twitter service or network is unavailable See Also: GET trends/place Twitter Developers getAvailableTrends public\u00a0ResponseList&lt;Location&gt;\u00a0getAvailableTrends() throws TwitterException Description copied from interface:\u00a0TrendsResources Returns the locations that Twitter has trending topic information for. The response is an array of &quot;locations&quot; that encode the location's WOEID (a Yahoo! Where On Earth ID) and some other human-readable information such as a canonical name and country the location belongs in. This method calls https://api.twitter.com/1.1/trends/available.json Specified by: getAvailableTrends\u00a0in interface\u00a0TrendsResources Returns: the locations Throws: TwitterException - when Twitter service or network is unavailable See Also: GET trends/available Twitter Developers getClosestTrends public\u00a0ResponseList&lt;Location&gt;\u00a0getClosestTrends(GeoLocation\u00a0location) throws TwitterException Description copied from interface:\u00a0TrendsResources Returns the locations that Twitter has trending topic information for, closest to a specified location. The response is an array of &quot;locations&quot; that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in. A WOEID is a Yahoo! Where On Earth ID. This method calls https://api.twitter.com/1.1/trends/closest.json Specified by: getClosestTrends\u00a0in interface\u00a0TrendsResources Parameters: location - the available trend locations will be sorted by distance to the lat and long passed in. The sort is nearest to furthest. Returns: the locations Throws: TwitterException - when Twitter service or network is unavailable See Also: GET trends/closest Twitter Developers reportSpam public\u00a0User\u00a0reportSpam(long\u00a0userId) throws TwitterException Description copied from interface:\u00a0SpamReportingResource The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Specified by: reportSpam\u00a0in interface\u00a0SpamReportingResource Parameters: userId - The ID of the user you want to report as a spammer. Returns: The User reported as a spammer. Throws: TwitterException - when Twitter service or network is unavailable See Also: POST report_spam Twitter Developers reportSpam public\u00a0User\u00a0reportSpam(java.lang.String\u00a0screenName) throws TwitterException Description copied from interface:\u00a0SpamReportingResource The user specified in the id is blocked by the authenticated user and reported as a spammer. This method calls https://api.twitter.com/1.1/report_spam.json Specified by: reportSpam\u00a0in interface\u00a0SpamReportingResource Parameters: screenName - The screen name of the user you want to report as a spammer. Returns: The User reported as a spammer. Throws: TwitterException - when Twitter service or network is unavailable See Also: POST report_spam Twitter Developers getAPIConfiguration public\u00a0TwitterAPIConfiguration\u00a0getAPIConfiguration() throws TwitterException Description copied from interface:\u00a0HelpResources Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths. It is recommended applications request this endpoint when they are loaded, but no more than once a day. Specified by: getAPIConfiguration\u00a0in interface\u00a0HelpResources Returns: configuration Throws: TwitterException - when Twitter service or network is unavailable See Also: GET help/configuration Twitter Developers getLanguages public\u00a0ResponseList&lt;HelpResources.Language&gt;\u00a0getLanguages() throws TwitterException Description copied from interface:\u00a0HelpResources Returns the list of languages supported by Twitter along with their ISO 639-1 code. The ISO 639-1 code is the two letter value to use if you include lang with any of your requests. Specified by: getLanguages\u00a0in interface\u00a0HelpResources Returns: list of languages supported by Twitter Throws: TwitterException - when Twitter service or network is unavailable See Also: GET help/languages Twitter Developers getPrivacyPolicy public\u00a0java.lang.String\u00a0getPrivacyPolicy() throws TwitterException Description copied from interface:\u00a0HelpResources Returns Twitter's Privacy Policy. This method calls https://api.twitter.com/1.1/help/privacy.json Specified by: getPrivacyPolicy\u00a0in interface\u00a0HelpResources Returns: privacy policy Throws: TwitterException - when Twitter service or network is unavailable See Also: GET help/privacy Twitter Developers getTermsOfService public\u00a0java.lang.String\u00a0getTermsOfService() throws TwitterException Description copied from interface:\u00a0HelpResources Returns Twitter's' Terms of Service. This method calls https://api.twitter.com/1.1/help/tos.json Specified by: getTermsOfService\u00a0in interface\u00a0HelpResources Returns: Terms of Service Throws: TwitterException - when Twitter service or network is unavailable See Also: GET help/tos Twitter Developers getRateLimitStatus public\u00a0java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0getRateLimitStatus() throws TwitterException Description copied from interface:\u00a0HelpResources Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Specified by: getRateLimitStatus\u00a0in interface\u00a0HelpResources Returns: the rate limit statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET application/rate_limit_status getRateLimitStatus public\u00a0java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0getRateLimitStatus(java.lang.String...\u00a0resources) throws TwitterException Description copied from interface:\u00a0HelpResources Returns the current rate limits for methods belonging to the specified resource families. Each 1.1 API resource belongs to a &quot;resource family&quot; which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the resource version. This method responds with a map of methods belonging to the families specified by the resources parameter, the current remaining uses for each of those resources within the current rate limiting window, and its expiration time in epoch time. It also includes a rate_limit_context field that indicates the current access token context. You may also issue requests to this method without any parameters to receive a map of all rate limited GET methods. If your application only uses a few of methods, please explicitly provide a resources parameter with the specified resource families you work with. Read more about REST API Rate Limiting in v1.1 and review the limits. As of Nov 4th 2012, supported resource names are as follows: &quot;trends&quot;,&quot;application&quot;,&quot;users&quot;,&quot;saved_searches&quot;,&quot;geo&quot;,&quot;direct_messages&quot;,&quot;blocks&quot;,&quot;favorites&quot;,&quot;statuses&quot;,&quot;followers&quot;,&quot;help&quot;,&quot;friends&quot;,&quot;search&quot;,&quot;friendships&quot;,&quot;account&quot;,&quot;lists&quot; This method calls https://api.twitter.com/1.1/application/rate_limit_status.json Specified by: getRateLimitStatus\u00a0in interface\u00a0HelpResources Parameters: resources - resources Returns: the rate limit statuses Throws: TwitterException - when Twitter service or network is unavailable See Also: GET application/rate_limit_status timelines public\u00a0TimelinesResources\u00a0timelines() Specified by: timelines\u00a0in interface\u00a0Twitter Returns: TimelinesResources tweets public\u00a0TweetsResources\u00a0tweets() Specified by: tweets\u00a0in interface\u00a0Twitter Returns: TweetsResources search public\u00a0SearchResource\u00a0search() Specified by: search\u00a0in interface\u00a0Twitter Returns: SearchResource directMessages public\u00a0DirectMessagesResources\u00a0directMessages() Specified by: directMessages\u00a0in interface\u00a0Twitter Returns: DirectMessagesResources friendsFollowers public\u00a0FriendsFollowersResources\u00a0friendsFollowers() Specified by: friendsFollowers\u00a0in interface\u00a0Twitter Returns: FriendsFollowersResources users public\u00a0UsersResources\u00a0users() Specified by: users\u00a0in interface\u00a0Twitter Returns: UsersResources suggestedUsers public\u00a0SuggestedUsersResources\u00a0suggestedUsers() Specified by: suggestedUsers\u00a0in interface\u00a0Twitter Returns: SuggestedUsersResources favorites public\u00a0FavoritesResources\u00a0favorites() Specified by: favorites\u00a0in interface\u00a0Twitter Returns: FavoritesResources list public\u00a0ListsResources\u00a0list() Specified by: list\u00a0in interface\u00a0Twitter Returns: ListsResources savedSearches public\u00a0SavedSearchesResources\u00a0savedSearches() Specified by: savedSearches\u00a0in interface\u00a0Twitter Returns: SavedSearchesResources placesGeo public\u00a0PlacesGeoResources\u00a0placesGeo() Specified by: placesGeo\u00a0in interface\u00a0Twitter Returns: PlacesGeoResources trends public\u00a0TrendsResources\u00a0trends() Specified by: trends\u00a0in interface\u00a0Twitter Returns: TrendsResources spamReporting public\u00a0SpamReportingResource\u00a0spamReporting() Specified by: spamReporting\u00a0in interface\u00a0Twitter Returns: SpamReportingResource help public\u00a0HelpResources\u00a0help() Specified by: help\u00a0in interface\u00a0Twitter Returns: HelpResources get private\u00a0HttpResponse\u00a0get(java.lang.String\u00a0url) throws TwitterException Throws: TwitterException get private\u00a0HttpResponse\u00a0get(java.lang.String\u00a0url, HttpParameter...\u00a0params) throws TwitterException Throws: TwitterException post private\u00a0HttpResponse\u00a0post(java.lang.String\u00a0url) throws TwitterException Throws: TwitterException post private\u00a0HttpResponse\u00a0post(java.lang.String\u00a0url, HttpParameter...\u00a0params) throws TwitterException Throws: TwitterException mergeParameters private\u00a0HttpParameter[]\u00a0mergeParameters(HttpParameter[]\u00a0params1, HttpParameter[]\u00a0params2) mergeParameters private\u00a0HttpParameter[]\u00a0mergeParameters(HttpParameter[]\u00a0params1, HttpParameter\u00a0params2) mergeImplicitParams private\u00a0HttpParameter[]\u00a0mergeImplicitParams(HttpParameter...\u00a0params) isOk private\u00a0boolean\u00a0isOk(HttpResponse\u00a0response) toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0TwitterBaseImpl Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6,&quot;i35&quot;:6,&quot;i36&quot;:6,&quot;i37&quot;:6,&quot;i38&quot;:6,&quot;i39&quot;:6,&quot;i40&quot;:6,&quot;i41&quot;:6,&quot;i42&quot;:6,&quot;i43&quot;:6,&quot;i44&quot;:6,&quot;i45&quot;:6,&quot;i46&quot;:6,&quot;i47&quot;:6,&quot;i48&quot;:6,&quot;i49&quot;:6,&quot;i50&quot;:6,&quot;i51&quot;:6,&quot;i52&quot;:6,&quot;i53&quot;:6,&quot;i54&quot;:6,&quot;i55&quot;:6,&quot;i56&quot;:6,&quot;i57&quot;:6,&quot;i58&quot;:6,&quot;i59&quot;:6,&quot;i60&quot;:6,&quot;i61&quot;:6,&quot;i62&quot;:6,&quot;i63&quot;:6,&quot;i64&quot;:6,&quot;i65&quot;:6,&quot;i66&quot;:6,&quot;i67&quot;:6,&quot;i68&quot;:6,&quot;i69&quot;:6,&quot;i70&quot;:6,&quot;i71&quot;:6,&quot;i72&quot;:6,&quot;i73&quot;:6,&quot;i74&quot;:6,&quot;i75&quot;:6,&quot;i76&quot;:6,&quot;i77&quot;:6,&quot;i78&quot;:6,&quot;i79&quot;:6,&quot;i80&quot;:6,&quot;i81&quot;:6,&quot;i82&quot;:6,&quot;i83&quot;:6,&quot;i84&quot;:6,&quot;i85&quot;:6,&quot;i86&quot;:6,&quot;i87&quot;:6,&quot;i88&quot;:6,&quot;i89&quot;:6,&quot;i90&quot;:6,&quot;i91&quot;:6,&quot;i92&quot;:6,&quot;i93&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TwitterListener All Known Implementing Classes: TwitterAdapter public interface TwitterListener A listener for receiving asynchronous responses from Twitter Async APIs. Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void checkedUserListMembership(User\u00a0users)\u00a0 void checkedUserListSubscription(User\u00a0user)\u00a0 void createdBlock(User\u00a0user)\u00a0 void createdFavorite(Status\u00a0status)\u00a0 void createdFriendship(User\u00a0user)\u00a0 void createdMute(User\u00a0user)\u00a0 void createdSavedSearch(SavedSearch\u00a0savedSearch)\u00a0 void createdUserList(UserList\u00a0userList)\u00a0 void createdUserListMember(UserList\u00a0userList)\u00a0 void createdUserListMembers(UserList\u00a0userList)\u00a0 void destroyedBlock(User\u00a0user)\u00a0 void destroyedDirectMessage(DirectMessage\u00a0message)\u00a0 void destroyedFavorite(Status\u00a0status)\u00a0 void destroyedFriendship(User\u00a0user)\u00a0 void destroyedMute(User\u00a0user)\u00a0 void destroyedSavedSearch(SavedSearch\u00a0savedSearch)\u00a0 void destroyedStatus(Status\u00a0destroyedStatus)\u00a0 void destroyedUserList(UserList\u00a0userList)\u00a0 void destroyedUserListMember(UserList\u00a0userList)\u00a0 void gotAccountSettings(AccountSettings\u00a0settings)\u00a0 void gotAPIConfiguration(TwitterAPIConfiguration\u00a0conf)\u00a0 void gotAvailableTrends(ResponseList&lt;Location&gt;\u00a0locations)\u00a0 void gotBlockIDs(IDs\u00a0blockingUsersIDs)\u00a0 void gotBlocksList(ResponseList&lt;User&gt;\u00a0blockingUsers)\u00a0 void gotClosestTrends(ResponseList&lt;Location&gt;\u00a0locations)\u00a0 void gotContributees(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotContributors(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotDirectMessage(DirectMessage\u00a0message)\u00a0 void gotDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages)\u00a0 void gotFavorites(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotFollowersIDs(IDs\u00a0ids)\u00a0 void gotFollowersList(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotFriendsIDs(IDs\u00a0ids)\u00a0 void gotFriendsList(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotGeoDetails(Place\u00a0place)\u00a0 void gotHomeTimeline(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotIncomingFriendships(IDs\u00a0ids)\u00a0 void gotLanguages(ResponseList&lt;HelpResources.Language&gt;\u00a0languages)\u00a0 void gotMemberSuggestions(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotMentions(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotMuteIDs(IDs\u00a0blockingUsersIDs)\u00a0 void gotMutesList(ResponseList&lt;User&gt;\u00a0blockingUsers)\u00a0 void gotOAuth2Token(OAuth2Token\u00a0token)\u00a0 void gotOAuthAccessToken(AccessToken\u00a0token)\u00a0 void gotOAuthRequestToken(RequestToken\u00a0token)\u00a0 void gotOEmbed(OEmbed\u00a0oembed)\u00a0 void gotOutgoingFriendships(IDs\u00a0ids)\u00a0 void gotPlaceTrends(Trends\u00a0trends)\u00a0 void gotPrivacyPolicy(java.lang.String\u00a0privacyPolicy)\u00a0 void gotRateLimitStatus(java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0rateLimitStatus)\u00a0 void gotRetweets(ResponseList&lt;Status&gt;\u00a0retweets)\u00a0 void gotRetweetsOfMe(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotReverseGeoCode(ResponseList&lt;Place&gt;\u00a0places)\u00a0 void gotSavedSearch(SavedSearch\u00a0savedSearch)\u00a0 void gotSavedSearches(ResponseList&lt;SavedSearch&gt;\u00a0savedSearches)\u00a0 void gotSentDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages)\u00a0 void gotShowFriendship(Relationship\u00a0relationship)\u00a0 void gotShowStatus(Status\u00a0status)\u00a0 void gotShowUserList(UserList\u00a0userList)\u00a0 void gotSimilarPlaces(ResponseList&lt;Place&gt;\u00a0places)\u00a0 void gotSuggestedUserCategories(ResponseList&lt;Category&gt;\u00a0category)\u00a0 void gotTermsOfService(java.lang.String\u00a0tof)\u00a0 void gotUserDetail(User\u00a0user)\u00a0 void gotUserListMembers(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotUserListMemberships(PagableResponseList&lt;UserList&gt;\u00a0userLists)\u00a0 void gotUserLists(ResponseList&lt;UserList&gt;\u00a0userLists)\u00a0 void gotUserListStatuses(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void gotUserListSubscribers(PagableResponseList&lt;User&gt;\u00a0users)\u00a0 void gotUserListSubscriptions(PagableResponseList&lt;UserList&gt;\u00a0userLists)\u00a0 void gotUserSuggestions(ResponseList&lt;User&gt;\u00a0users)\u00a0 void gotUserTimeline(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void lookedup(ResponseList&lt;Status&gt;\u00a0statuses)\u00a0 void lookedUpFriendships(ResponseList&lt;Friendship&gt;\u00a0friendships)\u00a0 void lookedupUsers(ResponseList&lt;User&gt;\u00a0users)\u00a0 void onException(TwitterException\u00a0te, TwitterMethod\u00a0method)\u00a0 void removedProfileBanner()\u00a0 void reportedSpam(User\u00a0reportedSpammer)\u00a0 void retweetedStatus(Status\u00a0retweetedStatus)\u00a0 void searched(QueryResult\u00a0queryResult)\u00a0 void searchedPlaces(ResponseList&lt;Place&gt;\u00a0places)\u00a0 void searchedUser(ResponseList&lt;User&gt;\u00a0userList)\u00a0 void sentDirectMessage(DirectMessage\u00a0message)\u00a0 void subscribedUserList(UserList\u00a0userList)\u00a0 void unsubscribedUserList(UserList\u00a0userList)\u00a0 void updatedAccountSettings(AccountSettings\u00a0settings)\u00a0 void updatedFriendship(Relationship\u00a0relationship)\u00a0 void updatedProfile(User\u00a0user)\u00a0 void updatedProfileBackgroundImage(User\u00a0user)\u00a0 void updatedProfileBanner()\u00a0 void updatedProfileColors(User\u00a0user)\u00a0 void updatedProfileImage(User\u00a0user)\u00a0 void updatedStatus(Status\u00a0status)\u00a0 void updatedUserList(UserList\u00a0userList)\u00a0 void verifiedCredentials(User\u00a0user)\u00a0 Method Detail gotMentions void\u00a0gotMentions(ResponseList&lt;Status&gt;\u00a0statuses) gotHomeTimeline void\u00a0gotHomeTimeline(ResponseList&lt;Status&gt;\u00a0statuses) gotUserTimeline void\u00a0gotUserTimeline(ResponseList&lt;Status&gt;\u00a0statuses) gotRetweetsOfMe void\u00a0gotRetweetsOfMe(ResponseList&lt;Status&gt;\u00a0statuses) gotRetweets void\u00a0gotRetweets(ResponseList&lt;Status&gt;\u00a0retweets) gotShowStatus void\u00a0gotShowStatus(Status\u00a0status) destroyedStatus void\u00a0destroyedStatus(Status\u00a0destroyedStatus) updatedStatus void\u00a0updatedStatus(Status\u00a0status) retweetedStatus void\u00a0retweetedStatus(Status\u00a0retweetedStatus) gotOEmbed void\u00a0gotOEmbed(OEmbed\u00a0oembed) lookedup void\u00a0lookedup(ResponseList&lt;Status&gt;\u00a0statuses) searched void\u00a0searched(QueryResult\u00a0queryResult) gotDirectMessages void\u00a0gotDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages) gotSentDirectMessages void\u00a0gotSentDirectMessages(ResponseList&lt;DirectMessage&gt;\u00a0messages) gotDirectMessage void\u00a0gotDirectMessage(DirectMessage\u00a0message) destroyedDirectMessage void\u00a0destroyedDirectMessage(DirectMessage\u00a0message) sentDirectMessage void\u00a0sentDirectMessage(DirectMessage\u00a0message) gotFriendsIDs void\u00a0gotFriendsIDs(IDs\u00a0ids) gotFollowersIDs void\u00a0gotFollowersIDs(IDs\u00a0ids) lookedUpFriendships void\u00a0lookedUpFriendships(ResponseList&lt;Friendship&gt;\u00a0friendships) gotIncomingFriendships void\u00a0gotIncomingFriendships(IDs\u00a0ids) gotOutgoingFriendships void\u00a0gotOutgoingFriendships(IDs\u00a0ids) createdFriendship void\u00a0createdFriendship(User\u00a0user) destroyedFriendship void\u00a0destroyedFriendship(User\u00a0user) updatedFriendship void\u00a0updatedFriendship(Relationship\u00a0relationship) gotShowFriendship void\u00a0gotShowFriendship(Relationship\u00a0relationship) gotFriendsList void\u00a0gotFriendsList(PagableResponseList&lt;User&gt;\u00a0users) gotFollowersList void\u00a0gotFollowersList(PagableResponseList&lt;User&gt;\u00a0users) gotAccountSettings void\u00a0gotAccountSettings(AccountSettings\u00a0settings) verifiedCredentials void\u00a0verifiedCredentials(User\u00a0user) updatedAccountSettings void\u00a0updatedAccountSettings(AccountSettings\u00a0settings) updatedProfile void\u00a0updatedProfile(User\u00a0user) updatedProfileBackgroundImage void\u00a0updatedProfileBackgroundImage(User\u00a0user) updatedProfileColors void\u00a0updatedProfileColors(User\u00a0user) updatedProfileImage void\u00a0updatedProfileImage(User\u00a0user) gotBlocksList void\u00a0gotBlocksList(ResponseList&lt;User&gt;\u00a0blockingUsers) gotBlockIDs void\u00a0gotBlockIDs(IDs\u00a0blockingUsersIDs) createdBlock void\u00a0createdBlock(User\u00a0user) destroyedBlock void\u00a0destroyedBlock(User\u00a0user) lookedupUsers void\u00a0lookedupUsers(ResponseList&lt;User&gt;\u00a0users) gotUserDetail void\u00a0gotUserDetail(User\u00a0user) searchedUser void\u00a0searchedUser(ResponseList&lt;User&gt;\u00a0userList) gotContributees void\u00a0gotContributees(ResponseList&lt;User&gt;\u00a0users) gotContributors void\u00a0gotContributors(ResponseList&lt;User&gt;\u00a0users) removedProfileBanner void\u00a0removedProfileBanner() updatedProfileBanner void\u00a0updatedProfileBanner() gotMutesList void\u00a0gotMutesList(ResponseList&lt;User&gt;\u00a0blockingUsers) gotMuteIDs void\u00a0gotMuteIDs(IDs\u00a0blockingUsersIDs) createdMute void\u00a0createdMute(User\u00a0user) destroyedMute void\u00a0destroyedMute(User\u00a0user) gotUserSuggestions void\u00a0gotUserSuggestions(ResponseList&lt;User&gt;\u00a0users) gotSuggestedUserCategories void\u00a0gotSuggestedUserCategories(ResponseList&lt;Category&gt;\u00a0category) gotMemberSuggestions void\u00a0gotMemberSuggestions(ResponseList&lt;User&gt;\u00a0users) gotFavorites void\u00a0gotFavorites(ResponseList&lt;Status&gt;\u00a0statuses) createdFavorite void\u00a0createdFavorite(Status\u00a0status) destroyedFavorite void\u00a0destroyedFavorite(Status\u00a0status) gotUserLists void\u00a0gotUserLists(ResponseList&lt;UserList&gt;\u00a0userLists) gotUserListStatuses void\u00a0gotUserListStatuses(ResponseList&lt;Status&gt;\u00a0statuses) destroyedUserListMember void\u00a0destroyedUserListMember(UserList\u00a0userList) gotUserListMemberships void\u00a0gotUserListMemberships(PagableResponseList&lt;UserList&gt;\u00a0userLists) gotUserListSubscribers void\u00a0gotUserListSubscribers(PagableResponseList&lt;User&gt;\u00a0users) subscribedUserList void\u00a0subscribedUserList(UserList\u00a0userList) checkedUserListSubscription void\u00a0checkedUserListSubscription(User\u00a0user) unsubscribedUserList void\u00a0unsubscribedUserList(UserList\u00a0userList) createdUserListMembers void\u00a0createdUserListMembers(UserList\u00a0userList) checkedUserListMembership void\u00a0checkedUserListMembership(User\u00a0users) createdUserListMember void\u00a0createdUserListMember(UserList\u00a0userList) destroyedUserList void\u00a0destroyedUserList(UserList\u00a0userList) updatedUserList void\u00a0updatedUserList(UserList\u00a0userList) createdUserList void\u00a0createdUserList(UserList\u00a0userList) gotShowUserList void\u00a0gotShowUserList(UserList\u00a0userList) gotUserListSubscriptions void\u00a0gotUserListSubscriptions(PagableResponseList&lt;UserList&gt;\u00a0userLists) gotUserListMembers void\u00a0gotUserListMembers(PagableResponseList&lt;User&gt;\u00a0users) gotSavedSearches void\u00a0gotSavedSearches(ResponseList&lt;SavedSearch&gt;\u00a0savedSearches) gotSavedSearch void\u00a0gotSavedSearch(SavedSearch\u00a0savedSearch) createdSavedSearch void\u00a0createdSavedSearch(SavedSearch\u00a0savedSearch) destroyedSavedSearch void\u00a0destroyedSavedSearch(SavedSearch\u00a0savedSearch) gotGeoDetails void\u00a0gotGeoDetails(Place\u00a0place) gotReverseGeoCode void\u00a0gotReverseGeoCode(ResponseList&lt;Place&gt;\u00a0places) searchedPlaces void\u00a0searchedPlaces(ResponseList&lt;Place&gt;\u00a0places) gotSimilarPlaces void\u00a0gotSimilarPlaces(ResponseList&lt;Place&gt;\u00a0places) gotPlaceTrends void\u00a0gotPlaceTrends(Trends\u00a0trends) gotAvailableTrends void\u00a0gotAvailableTrends(ResponseList&lt;Location&gt;\u00a0locations) gotClosestTrends void\u00a0gotClosestTrends(ResponseList&lt;Location&gt;\u00a0locations) reportedSpam void\u00a0reportedSpam(User\u00a0reportedSpammer) gotOAuthRequestToken void\u00a0gotOAuthRequestToken(RequestToken\u00a0token) gotOAuthAccessToken void\u00a0gotOAuthAccessToken(AccessToken\u00a0token) gotOAuth2Token void\u00a0gotOAuth2Token(OAuth2Token\u00a0token) gotAPIConfiguration void\u00a0gotAPIConfiguration(TwitterAPIConfiguration\u00a0conf) gotLanguages void\u00a0gotLanguages(ResponseList&lt;HelpResources.Language&gt;\u00a0languages) gotPrivacyPolicy void\u00a0gotPrivacyPolicy(java.lang.String\u00a0privacyPolicy) gotTermsOfService void\u00a0gotTermsOfService(java.lang.String\u00a0tof) gotRateLimitStatus void\u00a0gotRateLimitStatus(java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0rateLimitStatus) onException void\u00a0onException(TwitterException\u00a0te, TwitterMethod\u00a0method) Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterMethod &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterMethod&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j Enum TwitterMethod java.lang.Object java.lang.Enum&lt;TwitterMethod&gt; twitter4j.TwitterMethod All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;TwitterMethod&gt; public enum TwitterMethod extends java.lang.Enum&lt;TwitterMethod&gt; Author: Yusuke Yamamoto - yusuke at mac.com Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description ACCOUNT_SETTINGS\u00a0 AVAILABLE_TRENDS\u00a0 BLOCK_LIST\u00a0 BLOCK_LIST_IDS\u00a0 CHECK_LIST_MEMBERSHIP\u00a0 CHECK_LIST_SUBSCRIPTION\u00a0 CLOSEST_TRENDS\u00a0 CONFIGURATION\u00a0 CONTRIBUTEEES\u00a0 CONTRIBUTORS\u00a0 CREATE_BLOCK\u00a0 CREATE_FAVORITE\u00a0 CREATE_FRIENDSHIP\u00a0 CREATE_LIST_MEMBER\u00a0 CREATE_LIST_MEMBERS\u00a0 CREATE_MUTE\u00a0 CREATE_SAVED_SEARCH\u00a0 CREATE_USER_LIST\u00a0 DESTROY_BLOCK\u00a0 DESTROY_DIRECT_MESSAGE\u00a0 DESTROY_FAVORITE\u00a0 DESTROY_FRIENDSHIP\u00a0 DESTROY_LIST_MEMBER\u00a0 DESTROY_MUTE\u00a0 DESTROY_SAVED_SEARCH\u00a0 DESTROY_STATUS\u00a0 DESTROY_USER_LIST\u00a0 DIRECT_MESSAGE\u00a0 DIRECT_MESSAGES\u00a0 FAVORITES\u00a0 FOLLOWERS_IDS\u00a0 FOLLOWERS_LIST\u00a0 FRIENDS_IDS\u00a0 FRIENDS_LIST\u00a0 GEO_DETAILS\u00a0 HOME_TIMELINE\u00a0 INCOMING_FRIENDSHIPS\u00a0 LANGUAGES\u00a0 LIST_MEMBERS\u00a0 LIST_SUBSCRIBERS\u00a0 LOOKUP\u00a0 LOOKUP_FRIENDSHIPS\u00a0 LOOKUP_USERS\u00a0 MEMBER_SUGGESTIONS\u00a0 MENTIONS_TIMELINE\u00a0 MUTE_LIST\u00a0 MUTE_LIST_IDS\u00a0 OAUTH_ACCESS_TOKEN\u00a0 OAUTH_REQUEST_TOKEN\u00a0 OEMBED\u00a0 OUTGOING_FRIENDSHIPS\u00a0 PLACE_TRENDS\u00a0 PRIVACY_POLICY\u00a0 RATE_LIMIT_STATUS\u00a0 RELATED_RESULTS\u00a0 REMOVE_PROFILE_BANNER\u00a0 REPORT_SPAM\u00a0 RETWEET_STATUS\u00a0 RETWEETS\u00a0 RETWEETS_OF_ME\u00a0 REVERSE_GEO_CODE\u00a0 SAVED_SEARCH\u00a0 SAVED_SEARCHES\u00a0 SEARCH\u00a0 SEARCH_PLACES\u00a0 SEARCH_USERS\u00a0 SEND_DIRECT_MESSAGE\u00a0 SENT_DIRECT_MESSAGES\u00a0 SHOW_FRIENDSHIP\u00a0 SHOW_STATUS\u00a0 SHOW_USER\u00a0 SHOW_USER_LIST\u00a0 SIMILAR_PLACES\u00a0 SUBSCRIBE_LIST\u00a0 SUGGESTED_USER_CATEGORIES\u00a0 TERMS_OF_SERVICE\u00a0 UNSUBSCRIBE_LIST\u00a0 UPDATE_ACCOUNT_SETTINGS\u00a0 UPDATE_FRIENDSHIP\u00a0 UPDATE_PROFILE\u00a0 UPDATE_PROFILE_BACKGROUND_IMAGE\u00a0 UPDATE_PROFILE_BANNER\u00a0 UPDATE_PROFILE_COLORS\u00a0 UPDATE_PROFILE_IMAGE\u00a0 UPDATE_STATUS\u00a0 UPDATE_USER_LIST\u00a0 USER_LIST_MEMBERSHIPS\u00a0 USER_LIST_STATUSES\u00a0 USER_LIST_SUBSCRIPTIONS\u00a0 USER_LISTS\u00a0 USER_SUGGESTIONS\u00a0 USER_TIMELINE\u00a0 VERIFY_CREDENTIALS\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static TwitterMethod valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static TwitterMethod[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail MENTIONS_TIMELINE public static final\u00a0TwitterMethod MENTIONS_TIMELINE USER_TIMELINE public static final\u00a0TwitterMethod USER_TIMELINE HOME_TIMELINE public static final\u00a0TwitterMethod HOME_TIMELINE RETWEETS_OF_ME public static final\u00a0TwitterMethod RETWEETS_OF_ME RETWEETS public static final\u00a0TwitterMethod RETWEETS SHOW_STATUS public static final\u00a0TwitterMethod SHOW_STATUS DESTROY_STATUS public static final\u00a0TwitterMethod DESTROY_STATUS UPDATE_STATUS public static final\u00a0TwitterMethod UPDATE_STATUS RETWEET_STATUS public static final\u00a0TwitterMethod RETWEET_STATUS OEMBED public static final\u00a0TwitterMethod OEMBED LOOKUP public static final\u00a0TwitterMethod LOOKUP SEARCH public static final\u00a0TwitterMethod SEARCH DIRECT_MESSAGES public static final\u00a0TwitterMethod DIRECT_MESSAGES SENT_DIRECT_MESSAGES public static final\u00a0TwitterMethod SENT_DIRECT_MESSAGES DIRECT_MESSAGE public static final\u00a0TwitterMethod DIRECT_MESSAGE DESTROY_DIRECT_MESSAGE public static final\u00a0TwitterMethod DESTROY_DIRECT_MESSAGE SEND_DIRECT_MESSAGE public static final\u00a0TwitterMethod SEND_DIRECT_MESSAGE FRIENDS_IDS public static final\u00a0TwitterMethod FRIENDS_IDS FOLLOWERS_IDS public static final\u00a0TwitterMethod FOLLOWERS_IDS LOOKUP_FRIENDSHIPS public static final\u00a0TwitterMethod LOOKUP_FRIENDSHIPS INCOMING_FRIENDSHIPS public static final\u00a0TwitterMethod INCOMING_FRIENDSHIPS OUTGOING_FRIENDSHIPS public static final\u00a0TwitterMethod OUTGOING_FRIENDSHIPS CREATE_FRIENDSHIP public static final\u00a0TwitterMethod CREATE_FRIENDSHIP DESTROY_FRIENDSHIP public static final\u00a0TwitterMethod DESTROY_FRIENDSHIP UPDATE_FRIENDSHIP public static final\u00a0TwitterMethod UPDATE_FRIENDSHIP SHOW_FRIENDSHIP public static final\u00a0TwitterMethod SHOW_FRIENDSHIP FRIENDS_LIST public static final\u00a0TwitterMethod FRIENDS_LIST FOLLOWERS_LIST public static final\u00a0TwitterMethod FOLLOWERS_LIST ACCOUNT_SETTINGS public static final\u00a0TwitterMethod ACCOUNT_SETTINGS VERIFY_CREDENTIALS public static final\u00a0TwitterMethod VERIFY_CREDENTIALS UPDATE_ACCOUNT_SETTINGS public static final\u00a0TwitterMethod UPDATE_ACCOUNT_SETTINGS UPDATE_PROFILE public static final\u00a0TwitterMethod UPDATE_PROFILE UPDATE_PROFILE_BACKGROUND_IMAGE public static final\u00a0TwitterMethod UPDATE_PROFILE_BACKGROUND_IMAGE UPDATE_PROFILE_COLORS public static final\u00a0TwitterMethod UPDATE_PROFILE_COLORS UPDATE_PROFILE_IMAGE public static final\u00a0TwitterMethod UPDATE_PROFILE_IMAGE BLOCK_LIST public static final\u00a0TwitterMethod BLOCK_LIST BLOCK_LIST_IDS public static final\u00a0TwitterMethod BLOCK_LIST_IDS CREATE_BLOCK public static final\u00a0TwitterMethod CREATE_BLOCK DESTROY_BLOCK public static final\u00a0TwitterMethod DESTROY_BLOCK MUTE_LIST public static final\u00a0TwitterMethod MUTE_LIST MUTE_LIST_IDS public static final\u00a0TwitterMethod MUTE_LIST_IDS CREATE_MUTE public static final\u00a0TwitterMethod CREATE_MUTE DESTROY_MUTE public static final\u00a0TwitterMethod DESTROY_MUTE SHOW_USER public static final\u00a0TwitterMethod SHOW_USER LOOKUP_USERS public static final\u00a0TwitterMethod LOOKUP_USERS SEARCH_USERS public static final\u00a0TwitterMethod SEARCH_USERS CONTRIBUTORS public static final\u00a0TwitterMethod CONTRIBUTORS CONTRIBUTEEES public static final\u00a0TwitterMethod CONTRIBUTEEES REMOVE_PROFILE_BANNER public static final\u00a0TwitterMethod REMOVE_PROFILE_BANNER UPDATE_PROFILE_BANNER public static final\u00a0TwitterMethod UPDATE_PROFILE_BANNER RATE_LIMIT_STATUS public static final\u00a0TwitterMethod RATE_LIMIT_STATUS USER_SUGGESTIONS public static final\u00a0TwitterMethod USER_SUGGESTIONS SUGGESTED_USER_CATEGORIES public static final\u00a0TwitterMethod SUGGESTED_USER_CATEGORIES MEMBER_SUGGESTIONS public static final\u00a0TwitterMethod MEMBER_SUGGESTIONS FAVORITES public static final\u00a0TwitterMethod FAVORITES DESTROY_FAVORITE public static final\u00a0TwitterMethod DESTROY_FAVORITE CREATE_FAVORITE public static final\u00a0TwitterMethod CREATE_FAVORITE USER_LISTS public static final\u00a0TwitterMethod USER_LISTS USER_LIST_STATUSES public static final\u00a0TwitterMethod USER_LIST_STATUSES DESTROY_LIST_MEMBER public static final\u00a0TwitterMethod DESTROY_LIST_MEMBER USER_LIST_MEMBERSHIPS public static final\u00a0TwitterMethod USER_LIST_MEMBERSHIPS LIST_SUBSCRIBERS public static final\u00a0TwitterMethod LIST_SUBSCRIBERS SUBSCRIBE_LIST public static final\u00a0TwitterMethod SUBSCRIBE_LIST CHECK_LIST_SUBSCRIPTION public static final\u00a0TwitterMethod CHECK_LIST_SUBSCRIPTION UNSUBSCRIBE_LIST public static final\u00a0TwitterMethod UNSUBSCRIBE_LIST CREATE_LIST_MEMBERS public static final\u00a0TwitterMethod CREATE_LIST_MEMBERS CHECK_LIST_MEMBERSHIP public static final\u00a0TwitterMethod CHECK_LIST_MEMBERSHIP LIST_MEMBERS public static final\u00a0TwitterMethod LIST_MEMBERS CREATE_LIST_MEMBER public static final\u00a0TwitterMethod CREATE_LIST_MEMBER DESTROY_USER_LIST public static final\u00a0TwitterMethod DESTROY_USER_LIST UPDATE_USER_LIST public static final\u00a0TwitterMethod UPDATE_USER_LIST CREATE_USER_LIST public static final\u00a0TwitterMethod CREATE_USER_LIST SHOW_USER_LIST public static final\u00a0TwitterMethod SHOW_USER_LIST USER_LIST_SUBSCRIPTIONS public static final\u00a0TwitterMethod USER_LIST_SUBSCRIPTIONS SAVED_SEARCHES public static final\u00a0TwitterMethod SAVED_SEARCHES SAVED_SEARCH public static final\u00a0TwitterMethod SAVED_SEARCH CREATE_SAVED_SEARCH public static final\u00a0TwitterMethod CREATE_SAVED_SEARCH DESTROY_SAVED_SEARCH public static final\u00a0TwitterMethod DESTROY_SAVED_SEARCH SEARCH_PLACES public static final\u00a0TwitterMethod SEARCH_PLACES SIMILAR_PLACES public static final\u00a0TwitterMethod SIMILAR_PLACES REVERSE_GEO_CODE public static final\u00a0TwitterMethod REVERSE_GEO_CODE GEO_DETAILS public static final\u00a0TwitterMethod GEO_DETAILS PLACE_TRENDS public static final\u00a0TwitterMethod PLACE_TRENDS AVAILABLE_TRENDS public static final\u00a0TwitterMethod AVAILABLE_TRENDS CLOSEST_TRENDS public static final\u00a0TwitterMethod CLOSEST_TRENDS REPORT_SPAM public static final\u00a0TwitterMethod REPORT_SPAM OAUTH_REQUEST_TOKEN public static final\u00a0TwitterMethod OAUTH_REQUEST_TOKEN OAUTH_ACCESS_TOKEN public static final\u00a0TwitterMethod OAUTH_ACCESS_TOKEN TERMS_OF_SERVICE public static final\u00a0TwitterMethod TERMS_OF_SERVICE CONFIGURATION public static final\u00a0TwitterMethod CONFIGURATION LANGUAGES public static final\u00a0TwitterMethod LANGUAGES PRIVACY_POLICY public static final\u00a0TwitterMethod PRIVACY_POLICY RELATED_RESULTS public static final\u00a0TwitterMethod RELATED_RESULTS Method Detail values public static\u00a0TwitterMethod[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (TwitterMethod c : TwitterMethod.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0TwitterMethod\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method TwitterObjectFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterObjectFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9,&quot;i2&quot;:9,&quot;i3&quot;:9,&quot;i4&quot;:9,&quot;i5&quot;:9,&quot;i6&quot;:9,&quot;i7&quot;:9,&quot;i8&quot;:9,&quot;i9&quot;:9,&quot;i10&quot;:9,&quot;i11&quot;:9,&quot;i12&quot;:9,&quot;i13&quot;:9,&quot;i14&quot;:9,&quot;i15&quot;:9,&quot;i16&quot;:9,&quot;i17&quot;:9,&quot;i18&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterObjectFactory java.lang.Object twitter4j.TwitterObjectFactory public final class TwitterObjectFactory extends java.lang.Object Since: Twitter4J 4.0.0 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static java.lang.ThreadLocal&lt;java.util.Map&gt; rawJsonMap\u00a0 private static boolean registeredAtleastOnce\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description private TwitterObjectFactory()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description (package private) static void clearThreadLocalMap() clear raw JSON forms associated with the current thread. static AccountTotals createAccountTotals(java.lang.String\u00a0rawJSON) Constructs an AccountTotals object from rawJSON string. static Category createCategory(java.lang.String\u00a0rawJSON) Constructs a Category object from rawJSON string. static DirectMessage createDirectMessage(java.lang.String\u00a0rawJSON) Constructs a DirectMessage object from rawJSON string. static IDs createIDs(java.lang.String\u00a0rawJSON) Constructs a IDs object from rawJSON string. static Location createLocation(java.lang.String\u00a0rawJSON) Constructs a Location object from rawJSON string. static java.lang.Object createObject(java.lang.String\u00a0rawJSON) Construct an object from rawJSON string. static OEmbed createOEmbed(java.lang.String\u00a0rawJSON) Constructs an OEmbed object from rawJSON string. static Place createPlace(java.lang.String\u00a0rawJSON) Constructs a Place object from rawJSON string. static java.util.Map&lt;java.lang.String,RateLimitStatus&gt; createRateLimitStatus(java.lang.String\u00a0rawJSON) Constructs a RateLimitStatus object from rawJSON string. static Relationship createRelationship(java.lang.String\u00a0rawJSON) Constructs a Relationship object from rawJSON string. static SavedSearch createSavedSearch(java.lang.String\u00a0rawJSON) Constructs a SavedSearch object from rawJSON string. static Status createStatus(java.lang.String\u00a0rawJSON) Constructs a Status object from rawJSON string. static Trend createTrend(java.lang.String\u00a0rawJSON) Constructs a Trend object from rawJSON string. static Trends createTrends(java.lang.String\u00a0rawJSON) Constructs a Trends object from rawJSON string. static User createUser(java.lang.String\u00a0rawJSON) Constructs a User object from rawJSON string. static UserList createUserList(java.lang.String\u00a0rawJSON) Constructs a UserList object from rawJSON string. static java.lang.String getRawJSON(java.lang.Object\u00a0obj) Returns a raw JSON form of the provided object. Note that raw JSON forms can be retrieved only from the same thread invoked the last method call and will become inaccessible once another method call (package private) static &lt;T&gt;\u00a0T registerJSONObject(T\u00a0key, java.lang.Object\u00a0json) associate a raw JSON form to the current thread Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail rawJsonMap private static final\u00a0java.lang.ThreadLocal&lt;java.util.Map&gt; rawJsonMap registeredAtleastOnce private static\u00a0boolean registeredAtleastOnce Constructor Detail TwitterObjectFactory private\u00a0TwitterObjectFactory() Method Detail getRawJSON public static\u00a0java.lang.String\u00a0getRawJSON(java.lang.Object\u00a0obj) Returns a raw JSON form of the provided object. Note that raw JSON forms can be retrieved only from the same thread invoked the last method call and will become inaccessible once another method call Parameters: obj - target object to retrieve JSON Returns: raw JSON Since: Twitter4J 2.1.7 createStatus public static\u00a0Status\u00a0createStatus(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Status object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Status Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createUser public static\u00a0User\u00a0createUser(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a User object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: User Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createAccountTotals public static\u00a0AccountTotals\u00a0createAccountTotals(java.lang.String\u00a0rawJSON) throws TwitterException Constructs an AccountTotals object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: AccountTotals Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.9 createRelationship public static\u00a0Relationship\u00a0createRelationship(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Relationship object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Relationship Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createPlace public static\u00a0Place\u00a0createPlace(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Place object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Place Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createSavedSearch public static\u00a0SavedSearch\u00a0createSavedSearch(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a SavedSearch object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: SavedSearch Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createTrend public static\u00a0Trend\u00a0createTrend(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Trend object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Trend Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createTrends public static\u00a0Trends\u00a0createTrends(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Trends object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Trends Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createIDs public static\u00a0IDs\u00a0createIDs(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a IDs object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: IDs Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createRateLimitStatus public static\u00a0java.util.Map&lt;java.lang.String,RateLimitStatus&gt;\u00a0createRateLimitStatus(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a RateLimitStatus object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: RateLimitStatus Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createCategory public static\u00a0Category\u00a0createCategory(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Category object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Category Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createDirectMessage public static\u00a0DirectMessage\u00a0createDirectMessage(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a DirectMessage object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: DirectMessage Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createLocation public static\u00a0Location\u00a0createLocation(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a Location object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: Location Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createUserList public static\u00a0UserList\u00a0createUserList(java.lang.String\u00a0rawJSON) throws TwitterException Constructs a UserList object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: UserList Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.7 createOEmbed public static\u00a0OEmbed\u00a0createOEmbed(java.lang.String\u00a0rawJSON) throws TwitterException Constructs an OEmbed object from rawJSON string. Parameters: rawJSON - raw JSON form as String Returns: OEmbed Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 3.0.2 createObject public static\u00a0java.lang.Object\u00a0createObject(java.lang.String\u00a0rawJSON) throws TwitterException Construct an object from rawJSON string. This method may be called when you do not know what a given raw JSON string contains. It will do the work of determining what type of object the JSON represents, and constructing the respective object type. For example, if the JSON contents represents a Status, then a Status will be returned. If it represents a deletion notice, then a StatusDeletionNotice will be returned. The caller can simply use instanceof to handle the returned object as applicable. NOTE: the raw JSONObject will be returned in cases where there isn't a discrete respective object type that can be constructed. That way, the caller can at least have access to the JSON itself. Parameters: rawJSON - raw JSON form as String Returns: the respective constructed object, or the JSONObject in the case where we cannot determine the object type. Throws: TwitterException - when provided string is not a valid JSON string. Since: Twitter4J 2.1.9 clearThreadLocalMap static\u00a0void\u00a0clearThreadLocalMap() clear raw JSON forms associated with the current thread. Since: Twitter4J 2.1.7 registerJSONObject static\u00a0&lt;T&gt;\u00a0T\u00a0registerJSONObject(T\u00a0key, java.lang.Object\u00a0json) associate a raw JSON form to the current thread Since: Twitter4J 2.1.7 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterResponse &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterResponse&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TwitterResponse All Superinterfaces: java.io.Serializable All Known Subinterfaces: AccountSettings, AccountTotals, DirectMessage, IDs, OEmbed, PagableResponseList&lt;T&gt;, Place, QueryResult, Relationship, ResponseList&lt;T&gt;, SavedSearch, Status, Trends, TwitterAPIConfiguration, User, UserList All Known Implementing Classes: TwitterException public interface TwitterResponse extends java.io.Serializable Super interface of Twitter Response data interfaces which indicates that rate limit status is avaialble. Author: Yusuke Yamamoto - yusuke at mac.com See Also: DirectMessage, Status, User Field Summary Fields\u00a0 Modifier and Type Field and Description static int NONE\u00a0 static int READ\u00a0 static int READ_WRITE\u00a0 static int READ_WRITE_DIRECTMESSAGES\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getAccessLevel()\u00a0 RateLimitStatus getRateLimitStatus() Returns the current rate limit status if available. Field Detail NONE static final\u00a0int NONE See Also: Constant Field Values READ static final\u00a0int READ See Also: Constant Field Values READ_WRITE static final\u00a0int READ_WRITE See Also: Constant Field Values READ_WRITE_DIRECTMESSAGES static final\u00a0int READ_WRITE_DIRECTMESSAGES See Also: Constant Field Values Method Detail getRateLimitStatus RateLimitStatus\u00a0getRateLimitStatus() Returns the current rate limit status if available. Returns: current rate limit status Since: Twitter4J 2.1.0 getAccessLevel int\u00a0getAccessLevel() Returns: application permission model Since: Twitter4J 2.2.3 See Also: Application Permission Model FAQ - How do we know what the access level of a user token is? Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterStream &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterStream&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface TwitterStream All Superinterfaces: OAuthSupport, TwitterBase All Known Implementing Classes: TwitterStreamImpl public interface TwitterStream extends OAuthSupport, TwitterBase Since: Twitter4J 2.2.0 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void addConnectionLifeCycleListener(ConnectionLifeCycleListener\u00a0listener) Adds a ConnectionLifeCycleListener void addListener(StreamListener\u00a0listener)\u00a0 void cleanUp() shutdown internal stream consuming thread void clearListeners() clear status listeners void filter(FilterQuery\u00a0query) Start consuming public statuses that match one or more filter predicates. void filter(java.lang.String...\u00a0track) Start consuming public statuses that match the filter predicate. void firehose(int\u00a0count) Starts listening on all public statuses. void links(int\u00a0count) Starts listening on all public statuses containing links. TwitterStream onException(Consumer&lt;java.lang.Exception&gt;\u00a0action)\u00a0 TwitterStream onStatus(Consumer&lt;Status&gt;\u00a0action)\u00a0 void removeListener(StreamListener\u00a0listener)\u00a0 void replaceListener(StreamListener\u00a0toBeRemoved, StreamListener\u00a0toBeAdded) replace existing listener void retweet() Starts listening on all retweets. void sample() Starts listening on random sample of all public statuses. void sample(java.lang.String\u00a0language) Starts listening on random sample of all public statuses. void shutdown() Shuts down internal dispatcher thread shared by all TwitterStream instances. StreamController site(boolean\u00a0withFollowings, long...\u00a0follow) Site Streams, a new feature on the Streaming API, is now available for beta testing. void user() User Streams provides real-time updates of all data needed to update a desktop application display. void user(java.lang.String...\u00a0track) User Streams provides real-time updates of all data needed to update a desktop application display. Methods inherited from interface\u00a0twitter4j.auth.OAuthSupport getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, setOAuthAccessToken, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.TwitterBase addRateLimitStatusListener, getAuthorization, getConfiguration, getId, getScreenName, onRateLimitReached, onRateLimitStatus Method Detail addConnectionLifeCycleListener void\u00a0addConnectionLifeCycleListener(ConnectionLifeCycleListener\u00a0listener) Adds a ConnectionLifeCycleListener Parameters: listener - listener to be added Since: Twitter4J 2.1.7 addListener void\u00a0addListener(StreamListener\u00a0listener) Parameters: listener - listener to add Since: Twitter4J 2.1.8 onStatus TwitterStream\u00a0onStatus(Consumer&lt;Status&gt;\u00a0action) Parameters: action - action when receiving Status Returns: this instance Since: Twitter4J 4.0.4 onException TwitterStream\u00a0onException(Consumer&lt;java.lang.Exception&gt;\u00a0action) Parameters: action - action when receiving TwitterException Returns: this instance Since: Twitter4J 4.0.4 removeListener void\u00a0removeListener(StreamListener\u00a0listener) Parameters: listener - listener to remove Since: Twitter4J 4.0.0 clearListeners void\u00a0clearListeners() clear status listeners Since: Twitter4J 4.0.0 replaceListener void\u00a0replaceListener(StreamListener\u00a0toBeRemoved, StreamListener\u00a0toBeAdded) replace existing listener Parameters: toBeRemoved - listener to be removed toBeAdded - listener to be added Since: Twitter4J 4.0.0 firehose void\u00a0firehose(int\u00a0count) Starts listening on all public statuses. Available only to approved parties and requires a signed agreement to access. Please do not contact us about access to the firehose. If your service warrants access to it, we'll contact you. Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. Since: Twitter4J 2.0.4 See Also: StatusStream, Streaming API Methods statuses/firehose links void\u00a0links(int\u00a0count) Starts listening on all public statuses containing links. Available only to approved parties and requires a signed agreement to access. Please do not contact us about access to the links stream. If your service warrants access to it, we'll contact you. Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. Since: Twitter4J 2.1.1 See Also: StatusStream, Streaming API Methods statuses/links retweet void\u00a0retweet() Starts listening on all retweets. The retweet stream is not a generally available resource. Few applications require this level of access. Creative use of a combination of other resources and various access levels can satisfy nearly every application use case. As of 9/11/2009, the site-wide retweet feature has not yet launched, so there are currently few, if any, retweets on this stream. Since: Twitter4J 2.0.10 See Also: StatusStream, Streaming API Methods statuses/retweet sample void\u00a0sample() Starts listening on random sample of all public statuses. The default access level provides a small proportion of the Firehose. The &quot;Gardenhose&quot; access level provides a proportion more suitable for data mining and research applications that desire a larger proportion to be statistically significant sample. Since: Twitter4J 2.0.10 See Also: StatusStream, Streaming API: Methods statuses/sample sample void\u00a0sample(java.lang.String\u00a0language) Starts listening on random sample of all public statuses. The default access level provides a small proportion of the Firehose. The &quot;Gardenhose&quot; access level provides a proportion more suitable for data mining and research applications that desire a larger proportion to be statistically significant sample. Only samples Tweets written in the given language. Parameters: language - language to be sampled Since: Twitter4J 2.0.10 See Also: StatusStream, Streaming API: Methods statuses/sample user void\u00a0user() User Streams provides real-time updates of all data needed to update a desktop application display. Applications can request startup back-fill from the REST API and then transition to Streaming for nearly all subsequent reads. Rate limits and latency are practically eliminated. Desktop developers can stop managing rate limits and use this new data to create an entirely new user experience. On our end, we hope to reduce costs and increase site reliability. Throws: java.lang.IllegalStateException - when non-UserStreamListener is set, or no listener is set See Also: User Streams user void\u00a0user(java.lang.String...\u00a0track) User Streams provides real-time updates of all data needed to update a desktop application display. Applications can request startup back-fill from the REST API and then transition to Streaming for nearly all subsequent reads. Rate limits and latency are practically eliminated. Desktop developers can stop managing rate limits and use this new data to create an entirely new user experience. On our end, we hope to reduce costs and increase site reliability. Parameters: track - keywords to track Throws: java.lang.IllegalStateException - when non-UserStreamListener is set, or no listener is set Since: Twitter4J 2.1.9 See Also: User Streams site StreamController\u00a0site(boolean\u00a0withFollowings, long...\u00a0follow) Site Streams, a new feature on the Streaming API, is now available for beta testing. Site Streams allows services, such as web sites or mobile push services, to receive real-time updates for a large number of users without any of the hassles of managing REST API rate limits. The initial version delivers events created by, or directed to, users that have shared their OAuth token with your application. The following events are streamed immediately, and without rate limits: Home Timelines, Mentions Timelines, User Timelines, Direct Messages, Mentions, Follows, Favorites, Tweets, Retweets, Profile changes, and List changes. The following limitations must be respected during the beta period. These limitations may be changed with little advance notice. We intend to increase or remove these various limitations as we move from beta test into full production: Limit the follow count to 100 users per stream. Clients must occasionally compact users onto a smaller number of connections to minimize the total number of connections outstanding. Open no more than 25 new connections per second and exponentially back-off on errors. Parameters: withFollowings - whether to receive status updates from people following follow - an array of users to include in the stream Returns: controller to control the site stream Since: Twitter4J 2.1.8 See Also: Site Streams Twitter Developers filter void\u00a0filter(FilterQuery\u00a0query) Start consuming public statuses that match one or more filter predicates. At least one predicate parameter, follow, locations, or track must be specified. Multiple parameters may be specified which allows most clients to use a single connection to the Streaming API. Placing long parameters in the URL may cause the request to be rejected for excessive URL length. The default access level allows up to 200 track keywords, 400 follow userids and 10 1-degree location boxes. Increased access levels allow 80,000 follow userids (&quot;shadow&quot; role), 400,000 follow userids (&quot;birddog&quot; role), 10,000 track keywords (&quot;restricted track&quot; role), 200,000 track keywords (&quot;partner track&quot; role), and 200 10-degree location boxes (&quot;locRestricted&quot; role). Increased track access levels also pass a higher proportion of statuses before limiting the stream. Parameters: query - Filter query Since: Twitter4J 2.1.2 See Also: StatusStream, Streaming API Methods statuses/filter filter void\u00a0filter(java.lang.String...\u00a0track) Start consuming public statuses that match the filter predicate. Placing long parameters in the URL may cause the request to be rejected for excessive URL length. The default access level allows up to 200 track keywords. Parameters: track - words to be filtered Since: Twitter4J 4.0.4 cleanUp void\u00a0cleanUp() shutdown internal stream consuming thread Since: Twitter4J 2.1.7 shutdown void\u00a0shutdown() Shuts down internal dispatcher thread shared by all TwitterStream instances. Since: Twitter4J 2.1.9 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterStreamFactory &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterStreamFactory&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterStreamFactory java.lang.Object twitter4j.TwitterStreamFactory All Implemented Interfaces: java.io.Serializable public final class TwitterStreamFactory extends java.lang.Object implements java.io.Serializable A factory class for TwitterFactory. An instance of this class is completely thread safe and can be re-used and used concurrently. Note that TwitterStream is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds. Since: Twitter4J 2.1.0 Author: Yusuke Yamamoto - yusuke at mac.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private Configuration conf\u00a0 private static long serialVersionUID\u00a0 private static TwitterStream SINGLETON\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description TwitterStreamFactory() Creates a TwitterStreamFactory with the root configuration. TwitterStreamFactory(Configuration\u00a0conf) Creates a TwitterStreamFactory with the given configuration. TwitterStreamFactory(java.lang.String\u00a0configTreePath) Creates a TwitterStreamFactory with a specified config tree. Method Summary All Methods\u00a0Static Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description TwitterStream getInstance() Returns a instance associated with the configuration bound to this factory. TwitterStream getInstance(AccessToken\u00a0accessToken) Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. TwitterStream getInstance(Authorization\u00a0auth) Returns a instance. private TwitterStream getInstance(Configuration\u00a0conf, Authorization\u00a0auth)\u00a0 static TwitterStream getSingleton() Returns default singleton TwitterStream instance. Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values conf private final\u00a0Configuration conf SINGLETON private static final\u00a0TwitterStream SINGLETON Constructor Detail TwitterStreamFactory public\u00a0TwitterStreamFactory() Creates a TwitterStreamFactory with the root configuration. TwitterStreamFactory public\u00a0TwitterStreamFactory(Configuration\u00a0conf) Creates a TwitterStreamFactory with the given configuration. Parameters: conf - the configuration to use Since: Twitter4J 2.1.1 TwitterStreamFactory public\u00a0TwitterStreamFactory(java.lang.String\u00a0configTreePath) Creates a TwitterStreamFactory with a specified config tree. Parameters: configTreePath - the path Method Detail getInstance public\u00a0TwitterStream\u00a0getInstance() Returns a instance associated with the configuration bound to this factory. Returns: default instance getInstance public\u00a0TwitterStream\u00a0getInstance(AccessToken\u00a0accessToken) Returns a OAuth Authenticated instance. consumer key and consumer Secret must be provided by twitter4j.properties, or system properties. Unlike OAuthSupport.setOAuthAccessToken(twitter4j.auth.AccessToken), this factory method potentially returns a cached instance. Parameters: accessToken - access token Returns: an instance getInstance public\u00a0TwitterStream\u00a0getInstance(Authorization\u00a0auth) Returns a instance. Parameters: auth - authorization object to be associated Returns: an instance getInstance private\u00a0TwitterStream\u00a0getInstance(Configuration\u00a0conf, Authorization\u00a0auth) getSingleton public static\u00a0TwitterStream\u00a0getSingleton() Returns default singleton TwitterStream instance. Returns: default singleton TwitterStream instance Since: Twitter4J 2.2.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterStreamImpl.Mode &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterStreamImpl.Mode&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method twitter4j Enum TwitterStreamImpl.Mode java.lang.Object java.lang.Enum&lt;TwitterStreamImpl.Mode&gt; twitter4j.TwitterStreamImpl.Mode All Implemented Interfaces: java.io.Serializable, java.lang.Comparable&lt;TwitterStreamImpl.Mode&gt; Enclosing class: TwitterStreamImpl static enum TwitterStreamImpl.Mode extends java.lang.Enum&lt;TwitterStreamImpl.Mode&gt; Enum Constant Summary Enum Constants\u00a0 Enum Constant and Description site\u00a0 status\u00a0 user\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static TwitterStreamImpl.Mode valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. static TwitterStreamImpl.Mode[] values() Returns an array containing the constants of this enum type, in the order they are declared. Methods inherited from class\u00a0java.lang.Enum clone, compareTo, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf Methods inherited from class\u00a0java.lang.Object getClass, notify, notifyAll, wait, wait, wait Enum Constant Detail user public static final\u00a0TwitterStreamImpl.Mode user status public static final\u00a0TwitterStreamImpl.Mode status site public static final\u00a0TwitterStreamImpl.Mode site Method Detail values public static\u00a0TwitterStreamImpl.Mode[]\u00a0values() Returns an array containing the constants of this enum type, in the order they are declared. This method may be used to iterate over the constants as follows: for (TwitterStreamImpl.Mode c : TwitterStreamImpl.Mode.values()) \u00a0 System.out.println(c); Returns: an array containing the constants of this enum type, in the order they are declared valueOf public static\u00a0TwitterStreamImpl.Mode\u00a0valueOf(java.lang.String\u00a0name) Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Parameters: name - the name of the enum constant to be returned. Returns: the enum constant with the specified name Throws: java.lang.IllegalArgumentException - if this enum type has no constant with the specified name java.lang.NullPointerException - if the argument is null Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method Detail:\u00a0 Enum Constants\u00a0\u00a0 Field\u00a0\u00a0 Method TwitterStreamImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterStreamImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10,&quot;i24&quot;:10,&quot;i25&quot;:10,&quot;i26&quot;:10,&quot;i27&quot;:10,&quot;i28&quot;:10,&quot;i29&quot;:10,&quot;i30&quot;:10,&quot;i31&quot;:10,&quot;i32&quot;:10,&quot;i33&quot;:10,&quot;i34&quot;:10,&quot;i35&quot;:10,&quot;i36&quot;:10,&quot;i37&quot;:10,&quot;i38&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class TwitterStreamImpl java.lang.Object twitter4j.TwitterBaseImpl twitter4j.TwitterStreamImpl All Implemented Interfaces: java.io.Serializable, OAuth2Support, OAuthSupport, TwitterBase, TwitterStream class TwitterStreamImpl extends TwitterBaseImpl implements TwitterStream A java representation of the Streaming API: Methods Note that this class is NOT compatible with Google App Engine as GAE is not capable of handling requests longer than 30 seconds. Since: Twitter4J 2.0.4 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested Classes\u00a0 Modifier and Type Class and Description (package private) static class\u00a0 TwitterStreamImpl.Mode\u00a0 (package private) class\u00a0 TwitterStreamImpl.TwitterStreamConsumer\u00a0 Field Summary Fields\u00a0 Modifier and Type Field and Description private static int count\u00a0 private static Dispatcher dispatcher\u00a0 private TwitterStreamImpl.TwitterStreamConsumer handler\u00a0 private HttpClient http\u00a0 private static int HTTP_ERROR_INITIAL_WAIT\u00a0 private static int HTTP_ERROR_WAIT_CAP\u00a0 private java.util.List&lt;ConnectionLifeCycleListener&gt; lifeCycleListeners\u00a0 private static Logger logger\u00a0 private static int NO_WAIT\u00a0 private static int numberOfHandlers\u00a0 private static long serialVersionUID\u00a0 private java.lang.String stallWarningsGetParam\u00a0 private HttpParameter stallWarningsParam\u00a0 private java.util.ArrayList&lt;StreamListener&gt; streamListeners\u00a0 private static int TCP_ERROR_INITIAL_WAIT\u00a0 private static int TCP_ERROR_WAIT_CAP\u00a0 Fields inherited from class\u00a0twitter4j.TwitterBaseImpl auth, conf, factory Constructor Summary Constructors\u00a0 Constructor and Description TwitterStreamImpl(Configuration\u00a0conf, Authorization\u00a0auth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void addConnectionLifeCycleListener(ConnectionLifeCycleListener\u00a0listener) Adds a ConnectionLifeCycleListener void addListener(StreamListener\u00a0listener)\u00a0 void cleanUp() shutdown internal stream consuming thread void clearListeners() clear status listeners private void ensureSiteStreamsListenerIsSet()\u00a0 private void ensureStatusStreamListenerIsSet() check if any listener is set. boolean equals(java.lang.Object\u00a0o)\u00a0 void filter(FilterQuery\u00a0query) Start consuming public statuses that match one or more filter predicates. void filter(java.lang.String...\u00a0track) Start consuming public statuses that match the filter predicate. void firehose(int\u00a0count) Starts listening on all public statuses. private StatusStream getCountStream(java.lang.String\u00a0relativeUrl, int\u00a0count)\u00a0 private Dispatcher getDispatcher()\u00a0 (package private) StatusStream getFilterStream(FilterQuery\u00a0query) Returns public statuses that match one or more filter predicates. (package private) StatusStream getFirehoseStream(int\u00a0count) Returns a status stream of all public statuses. (package private) StatusStream getLinksStream(int\u00a0count) Returns a status stream of all public statuses containing links. private RawStreamListener[] getRawStreamListeners()\u00a0 (package private) StatusStream getRetweetStream() Returns a stream of all retweets. (package private) StatusStream getSampleStream() Returns a stream of random sample of all public statuses. (package private) StatusStream getSampleStream(java.lang.String\u00a0language) Returns a stream of random sample of all public statuses. (package private) java.io.InputStream getSiteStream(boolean\u00a0withFollowings, long[]\u00a0follow)\u00a0 private SiteStreamsListener[] getSiteStreamsListeners()\u00a0 private StatusListener[] getStatusListeners()\u00a0 (package private) UserStream getUserStream(java.lang.String[]\u00a0track) User Streams provides real-time updates of all data needed to update a desktop application display. int hashCode()\u00a0 void links(int\u00a0count) Starts listening on all public statuses containing links. TwitterStream onException(Consumer&lt;java.lang.Exception&gt;\u00a0action)\u00a0 TwitterStream onStatus(Consumer&lt;Status&gt;\u00a0action)\u00a0 void removeListener(StreamListener\u00a0listener)\u00a0 void replaceListener(StreamListener\u00a0toBeRemoved, StreamListener\u00a0toBeAdded) replace existing listener void retweet() Starts listening on all retweets. void sample() Starts listening on random sample of all public statuses. void sample(java.lang.String\u00a0language) Starts listening on random sample of all public statuses. void shutdown() Shuts down internal dispatcher thread shared by all TwitterStream instances. StreamController site(boolean\u00a0withFollowings, long[]\u00a0follow) Site Streams, a new feature on the Streaming API, is now available for beta testing. private void startHandler(TwitterStreamImpl.TwitterStreamConsumer\u00a0handler)\u00a0 java.lang.String toString()\u00a0 private void updateListeners()\u00a0 void user() User Streams provides real-time updates of all data needed to update a desktop application display. void user(java.lang.String[]\u00a0track) User Streams provides real-time updates of all data needed to update a desktop application display. Methods inherited from class\u00a0twitter4j.TwitterBaseImpl addRateLimitStatusListener, ensureAuthorizationEnabled, ensureOAuthEnabled, fillInIDAndScreenName, getAuthorization, getConfiguration, getId, getOAuth2Token, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getScreenName, httpResponseReceived, invalidateOAuth2Token, onRateLimitReached, onRateLimitStatus, setFactory, setOAuth2Token, setOAuthAccessToken, setOAuthConsumer Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Methods inherited from interface\u00a0twitter4j.auth.OAuthSupport getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthAccessToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, getOAuthRequestToken, setOAuthAccessToken, setOAuthConsumer Methods inherited from interface\u00a0twitter4j.TwitterBase addRateLimitStatusListener, getAuthorization, getConfiguration, getId, getScreenName, onRateLimitReached, onRateLimitStatus Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values http private final\u00a0HttpClient http logger private static final\u00a0Logger logger lifeCycleListeners private final\u00a0java.util.List&lt;ConnectionLifeCycleListener&gt; lifeCycleListeners handler private\u00a0TwitterStreamImpl.TwitterStreamConsumer handler stallWarningsGetParam private final\u00a0java.lang.String stallWarningsGetParam stallWarningsParam private final\u00a0HttpParameter stallWarningsParam dispatcher private static transient volatile\u00a0Dispatcher dispatcher numberOfHandlers private static\u00a0int numberOfHandlers streamListeners private final\u00a0java.util.ArrayList&lt;StreamListener&gt; streamListeners TCP_ERROR_INITIAL_WAIT private static final\u00a0int TCP_ERROR_INITIAL_WAIT See Also: Constant Field Values TCP_ERROR_WAIT_CAP private static final\u00a0int TCP_ERROR_WAIT_CAP See Also: Constant Field Values HTTP_ERROR_INITIAL_WAIT private static final\u00a0int HTTP_ERROR_INITIAL_WAIT See Also: Constant Field Values HTTP_ERROR_WAIT_CAP private static final\u00a0int HTTP_ERROR_WAIT_CAP See Also: Constant Field Values NO_WAIT private static final\u00a0int NO_WAIT See Also: Constant Field Values count private static\u00a0int count Constructor Detail TwitterStreamImpl TwitterStreamImpl(Configuration\u00a0conf, Authorization\u00a0auth) Method Detail firehose public\u00a0void\u00a0firehose(int\u00a0count) Description copied from interface:\u00a0TwitterStream Starts listening on all public statuses. Available only to approved parties and requires a signed agreement to access. Please do not contact us about access to the firehose. If your service warrants access to it, we'll contact you. Specified by: firehose\u00a0in interface\u00a0TwitterStream Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. See Also: StatusStream, Streaming API Methods statuses/firehose getFirehoseStream StatusStream\u00a0getFirehoseStream(int\u00a0count) throws TwitterException Returns a status stream of all public statuses. Available only to approved parties and requires a signed agreement to access. Please do not contact us about access to the firehose. If your service warrants access to it, we'll contact you. Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. Returns: StatusStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.4 See Also: StatusStream, Streaming API Methods statuses/firehose links public\u00a0void\u00a0links(int\u00a0count) Description copied from interface:\u00a0TwitterStream Starts listening on all public statuses containing links. Available only to approved parties and requires a signed agreement to access. Please do not contact us about access to the links stream. If your service warrants access to it, we'll contact you. Specified by: links\u00a0in interface\u00a0TwitterStream Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. See Also: StatusStream, Streaming API Methods statuses/links getLinksStream StatusStream\u00a0getLinksStream(int\u00a0count) throws TwitterException Returns a status stream of all public statuses containing links. Available only to approved parties and requires a signed agreement to access. Please do not contact us about access to the links stream. If your service warrants access to it, we'll contact you. Parameters: count - Indicates the number of previous statuses to stream before transitioning to the live stream. Returns: StatusStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: StatusStream, Streaming API Methods statuses/links getCountStream private\u00a0StatusStream\u00a0getCountStream(java.lang.String\u00a0relativeUrl, int\u00a0count) throws TwitterException Throws: TwitterException retweet public\u00a0void\u00a0retweet() Description copied from interface:\u00a0TwitterStream Starts listening on all retweets. The retweet stream is not a generally available resource. Few applications require this level of access. Creative use of a combination of other resources and various access levels can satisfy nearly every application use case. As of 9/11/2009, the site-wide retweet feature has not yet launched, so there are currently few, if any, retweets on this stream. Specified by: retweet\u00a0in interface\u00a0TwitterStream See Also: StatusStream, Streaming API Methods statuses/retweet getRetweetStream StatusStream\u00a0getRetweetStream() throws TwitterException Returns a stream of all retweets. The retweet stream is not a generally available resource. Few applications require this level of access. Creative use of a combination of other resources and various access levels can satisfy nearly every application use case. As of 9/11/2009, the site-wide retweet feature has not yet launched, so there are currently few, if any, retweets on this stream. Returns: StatusStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: StatusStream, Streaming API: Methods statuses/retweet sample public\u00a0void\u00a0sample() Description copied from interface:\u00a0TwitterStream Starts listening on random sample of all public statuses. The default access level provides a small proportion of the Firehose. The &quot;Gardenhose&quot; access level provides a proportion more suitable for data mining and research applications that desire a larger proportion to be statistically significant sample. Specified by: sample\u00a0in interface\u00a0TwitterStream See Also: StatusStream, Streaming API: Methods statuses/sample sample public\u00a0void\u00a0sample(java.lang.String\u00a0language) Description copied from interface:\u00a0TwitterStream Starts listening on random sample of all public statuses. The default access level provides a small proportion of the Firehose. The &quot;Gardenhose&quot; access level provides a proportion more suitable for data mining and research applications that desire a larger proportion to be statistically significant sample. Only samples Tweets written in the given language. Specified by: sample\u00a0in interface\u00a0TwitterStream Parameters: language - language to be sampled See Also: StatusStream, Streaming API: Methods statuses/sample getSampleStream StatusStream\u00a0getSampleStream() throws TwitterException Returns a stream of random sample of all public statuses. The default access level provides a small proportion of the Firehose. The &quot;Gardenhose&quot; access level provides a proportion more suitable for data mining and research applications that desire a larger proportion to be statistically significant sample. Returns: StatusStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: StatusStream, Streaming API: Methods statuses/sample getSampleStream StatusStream\u00a0getSampleStream(java.lang.String\u00a0language) throws TwitterException Returns a stream of random sample of all public statuses. The default access level provides a small proportion of the Firehose. The &quot;Gardenhose&quot; access level provides a proportion more suitable for data mining and research applications that desire a larger proportion to be statistically significant sample. Only returns tweets in the given languages Returns: StatusStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.10 See Also: StatusStream, Streaming API: Methods statuses/sample user public\u00a0void\u00a0user() Description copied from interface:\u00a0TwitterStream User Streams provides real-time updates of all data needed to update a desktop application display. Applications can request startup back-fill from the REST API and then transition to Streaming for nearly all subsequent reads. Rate limits and latency are practically eliminated. Desktop developers can stop managing rate limits and use this new data to create an entirely new user experience. On our end, we hope to reduce costs and increase site reliability. Specified by: user\u00a0in interface\u00a0TwitterStream See Also: User Streams user public\u00a0void\u00a0user(java.lang.String[]\u00a0track) Description copied from interface:\u00a0TwitterStream User Streams provides real-time updates of all data needed to update a desktop application display. Applications can request startup back-fill from the REST API and then transition to Streaming for nearly all subsequent reads. Rate limits and latency are practically eliminated. Desktop developers can stop managing rate limits and use this new data to create an entirely new user experience. On our end, we hope to reduce costs and increase site reliability. Specified by: user\u00a0in interface\u00a0TwitterStream Parameters: track - keywords to track See Also: User Streams getUserStream UserStream\u00a0getUserStream(java.lang.String[]\u00a0track) throws TwitterException User Streams provides real-time updates of all data needed to update a desktop application display. Applications can request startup back-fill from the REST API and then transition to Streaming for nearly all subsequent reads. Rate limits and latency are practically eliminated. Desktop developers can stop managing rate limits and use this new data to create an entirely new user experience. On our end, we hope to reduce costs and increase site reliability. Parameters: track - keywords to track Returns: UserStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: User Streams site public\u00a0StreamController\u00a0site(boolean\u00a0withFollowings, long[]\u00a0follow) Description copied from interface:\u00a0TwitterStream Site Streams, a new feature on the Streaming API, is now available for beta testing. Site Streams allows services, such as web sites or mobile push services, to receive real-time updates for a large number of users without any of the hassles of managing REST API rate limits. The initial version delivers events created by, or directed to, users that have shared their OAuth token with your application. The following events are streamed immediately, and without rate limits: Home Timelines, Mentions Timelines, User Timelines, Direct Messages, Mentions, Follows, Favorites, Tweets, Retweets, Profile changes, and List changes. The following limitations must be respected during the beta period. These limitations may be changed with little advance notice. We intend to increase or remove these various limitations as we move from beta test into full production: Limit the follow count to 100 users per stream. Clients must occasionally compact users onto a smaller number of connections to minimize the total number of connections outstanding. Open no more than 25 new connections per second and exponentially back-off on errors. Specified by: site\u00a0in interface\u00a0TwitterStream Parameters: withFollowings - whether to receive status updates from people following follow - an array of users to include in the stream Returns: controller to control the site stream See Also: Site Streams Twitter Developers getDispatcher private\u00a0Dispatcher\u00a0getDispatcher() getSiteStream java.io.InputStream\u00a0getSiteStream(boolean\u00a0withFollowings, long[]\u00a0follow) throws TwitterException Throws: TwitterException filter public\u00a0void\u00a0filter(FilterQuery\u00a0query) Description copied from interface:\u00a0TwitterStream Start consuming public statuses that match one or more filter predicates. At least one predicate parameter, follow, locations, or track must be specified. Multiple parameters may be specified which allows most clients to use a single connection to the Streaming API. Placing long parameters in the URL may cause the request to be rejected for excessive URL length. The default access level allows up to 200 track keywords, 400 follow userids and 10 1-degree location boxes. Increased access levels allow 80,000 follow userids (&quot;shadow&quot; role), 400,000 follow userids (&quot;birddog&quot; role), 10,000 track keywords (&quot;restricted track&quot; role), 200,000 track keywords (&quot;partner track&quot; role), and 200 10-degree location boxes (&quot;locRestricted&quot; role). Increased track access levels also pass a higher proportion of statuses before limiting the stream. Specified by: filter\u00a0in interface\u00a0TwitterStream Parameters: query - Filter query See Also: StatusStream, Streaming API Methods statuses/filter filter public\u00a0void\u00a0filter(java.lang.String...\u00a0track) Description copied from interface:\u00a0TwitterStream Start consuming public statuses that match the filter predicate. Placing long parameters in the URL may cause the request to be rejected for excessive URL length. The default access level allows up to 200 track keywords. Specified by: filter\u00a0in interface\u00a0TwitterStream Parameters: track - words to be filtered getFilterStream StatusStream\u00a0getFilterStream(FilterQuery\u00a0query) throws TwitterException Returns public statuses that match one or more filter predicates. At least one predicate parameter, follow, locations, or track must be specified. Multiple parameters may be specified which allows most clients to use a single connection to the Streaming API. Placing long parameters in the URL may cause the request to be rejected for excessive URL length. The default access level allows up to 200 track keywords, 400 follow userids and 10 1-degree location boxes. Increased access levels allow 80,000 follow userids (&quot;shadow&quot; role), 400,000 follow userids (&quot;birddog&quot; role), 10,000 track keywords (&quot;restricted track&quot; role), 200,000 track keywords (&quot;partner track&quot; role), and 200 10-degree location boxes (&quot;locRestricted&quot; role). Increased track access levels also pass a higher proportion of statuses before limiting the stream. Parameters: query - Filter query Returns: StatusStream Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.2 See Also: StatusStream, Streaming API Methods Twitter Developers ensureStatusStreamListenerIsSet private\u00a0void\u00a0ensureStatusStreamListenerIsSet() check if any listener is set. Throws IllegalStateException if no listener is set. Throws: java.lang.IllegalStateException - when no listener is set. ensureSiteStreamsListenerIsSet private\u00a0void\u00a0ensureSiteStreamsListenerIsSet() startHandler private\u00a0void\u00a0startHandler(TwitterStreamImpl.TwitterStreamConsumer\u00a0handler) cleanUp public\u00a0void\u00a0cleanUp() Description copied from interface:\u00a0TwitterStream shutdown internal stream consuming thread Specified by: cleanUp\u00a0in interface\u00a0TwitterStream shutdown public\u00a0void\u00a0shutdown() Description copied from interface:\u00a0TwitterStream Shuts down internal dispatcher thread shared by all TwitterStream instances. Specified by: shutdown\u00a0in interface\u00a0TwitterStream addConnectionLifeCycleListener public\u00a0void\u00a0addConnectionLifeCycleListener(ConnectionLifeCycleListener\u00a0listener) Description copied from interface:\u00a0TwitterStream Adds a ConnectionLifeCycleListener Specified by: addConnectionLifeCycleListener\u00a0in interface\u00a0TwitterStream Parameters: listener - listener to be added addListener public\u00a0void\u00a0addListener(StreamListener\u00a0listener) Specified by: addListener\u00a0in interface\u00a0TwitterStream Parameters: listener - listener to add onStatus public\u00a0TwitterStream\u00a0onStatus(Consumer&lt;Status&gt;\u00a0action) Specified by: onStatus\u00a0in interface\u00a0TwitterStream Parameters: action - action when receiving Status Returns: this instance onException public\u00a0TwitterStream\u00a0onException(Consumer&lt;java.lang.Exception&gt;\u00a0action) Specified by: onException\u00a0in interface\u00a0TwitterStream Parameters: action - action when receiving TwitterException Returns: this instance removeListener public\u00a0void\u00a0removeListener(StreamListener\u00a0listener) Specified by: removeListener\u00a0in interface\u00a0TwitterStream Parameters: listener - listener to remove clearListeners public\u00a0void\u00a0clearListeners() Description copied from interface:\u00a0TwitterStream clear status listeners Specified by: clearListeners\u00a0in interface\u00a0TwitterStream replaceListener public\u00a0void\u00a0replaceListener(StreamListener\u00a0toBeRemoved, StreamListener\u00a0toBeAdded) Description copied from interface:\u00a0TwitterStream replace existing listener Specified by: replaceListener\u00a0in interface\u00a0TwitterStream Parameters: toBeRemoved - listener to be removed toBeAdded - listener to be added updateListeners private\u00a0void\u00a0updateListeners() getRawStreamListeners private\u00a0RawStreamListener[]\u00a0getRawStreamListeners() getSiteStreamsListeners private\u00a0SiteStreamsListener[]\u00a0getSiteStreamsListeners() getStatusListeners private\u00a0StatusListener[]\u00a0getStatusListeners() equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0TwitterBaseImpl hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0TwitterBaseImpl toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0TwitterBaseImpl Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method TwitterUpload &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;TwitterUpload&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class TwitterUpload java.lang.Object twitter4j.media.TwitterUpload All Implemented Interfaces: ImageUpload class TwitterUpload extends java.lang.Object implements ImageUpload Since: Twitter4J 2.2.5 Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private Twitter twitter\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description TwitterUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 int hashCode()\u00a0 java.lang.String toString()\u00a0 java.lang.String upload(java.io.File\u00a0image)\u00a0 java.lang.String upload(java.io.File\u00a0image, java.lang.String\u00a0message)\u00a0 java.lang.String upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody)\u00a0 java.lang.String upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody, java.lang.String\u00a0message)\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail twitter private final\u00a0Twitter twitter Constructor Detail TwitterUpload public\u00a0TwitterUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth) Method Detail upload public\u00a0java.lang.String\u00a0upload(java.io.File\u00a0image, java.lang.String\u00a0message) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload public\u00a0java.lang.String\u00a0upload(java.io.File\u00a0image) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload public\u00a0java.lang.String\u00a0upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException upload public\u00a0java.lang.String\u00a0upload(java.lang.String\u00a0imageFileName, java.io.InputStream\u00a0imageBody, java.lang.String\u00a0message) throws TwitterException Specified by: upload\u00a0in interface\u00a0ImageUpload Throws: TwitterException equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method URLEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;URLEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface URLEntity All Superinterfaces: java.io.Serializable, TweetEntity All Known Subinterfaces: ExtendedMediaEntity, MediaEntity public interface URLEntity extends TweetEntity, java.io.Serializable A data interface representing one single URL entity. Since: Twitter4J 2.1.9 Author: Mocel - mocel at guma.jp Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getDisplayURL() Returns the display URL if mentioned URL is shorten. int getEnd() Returns the index of the end character of the URL mentioned in the tweet. java.lang.String getExpandedURL() Returns the expanded URL if mentioned URL is shorten. int getStart() Returns the index of the start character of the URL mentioned in the tweet. java.lang.String getText() Returns the URL mentioned in the tweet. This method implementation is to meet TweetEntity interface and the behavior is equivalent to getURL() java.lang.String getURL() Returns the URL mentioned in the tweet. Method Detail getText java.lang.String\u00a0getText() Returns the URL mentioned in the tweet. This method implementation is to meet TweetEntity interface and the behavior is equivalent to getURL() Specified by: getText\u00a0in interface\u00a0TweetEntity Returns: the mentioned URL getURL java.lang.String\u00a0getURL() Returns the URL mentioned in the tweet. Returns: the mentioned URL getExpandedURL java.lang.String\u00a0getExpandedURL() Returns the expanded URL if mentioned URL is shorten. Returns: the expanded URL if mentioned URL is shorten, or null if no shorten URL was mentioned. getDisplayURL java.lang.String\u00a0getDisplayURL() Returns the display URL if mentioned URL is shorten. Returns: the display URL if mentioned URL is shorten, or null if no shorten URL was mentioned. getStart int\u00a0getStart() Returns the index of the start character of the URL mentioned in the tweet. Specified by: getStart\u00a0in interface\u00a0TweetEntity Returns: the index of the start character of the URL mentioned in the tweet getEnd int\u00a0getEnd() Returns the index of the end character of the URL mentioned in the tweet. Specified by: getEnd\u00a0in interface\u00a0TweetEntity Returns: the index of the end character of the URL mentioned in the tweet Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UploadedMedia &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UploadedMedia&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class UploadedMedia java.lang.Object twitter4j.UploadedMedia All Implemented Interfaces: java.io.Serializable public final class UploadedMedia extends java.lang.Object implements java.io.Serializable Represents result of &quot;/1.1/media/upload.json&quot; Since: Twitter4J 4.0.2 Author: Hiroaki TAKEUCHI - takke30 at gmail.com See Also: Serialized Form Field Summary Fields\u00a0 Modifier and Type Field and Description private int imageHeight\u00a0 private java.lang.String imageType\u00a0 private int imageWidth\u00a0 private long mediaId\u00a0 private static long serialVersionUID\u00a0 private long size\u00a0 Constructor Summary Constructors\u00a0 Constructor and Description UploadedMedia(JSONObject\u00a0json)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description boolean equals(java.lang.Object\u00a0o)\u00a0 int getImageHeight()\u00a0 java.lang.String getImageType()\u00a0 int getImageWidth()\u00a0 long getMediaId()\u00a0 long getSize()\u00a0 int hashCode()\u00a0 private void init(JSONObject\u00a0json)\u00a0 java.lang.String toString()\u00a0 Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Field Detail serialVersionUID private static final\u00a0long serialVersionUID See Also: Constant Field Values imageWidth private\u00a0int imageWidth imageHeight private\u00a0int imageHeight imageType private\u00a0java.lang.String imageType mediaId private\u00a0long mediaId size private\u00a0long size Constructor Detail UploadedMedia UploadedMedia(JSONObject\u00a0json) throws TwitterException Throws: TwitterException Method Detail getImageWidth public\u00a0int\u00a0getImageWidth() getImageHeight public\u00a0int\u00a0getImageHeight() getImageType public\u00a0java.lang.String\u00a0getImageType() getMediaId public\u00a0long\u00a0getMediaId() getSize public\u00a0long\u00a0getSize() init private\u00a0void\u00a0init(JSONObject\u00a0json) throws TwitterException Throws: TwitterException equals public\u00a0boolean\u00a0equals(java.lang.Object\u00a0o) Overrides: equals\u00a0in class\u00a0java.lang.Object hashCode public\u00a0int\u00a0hashCode() Overrides: hashCode\u00a0in class\u00a0java.lang.Object toString public\u00a0java.lang.String\u00a0toString() Overrides: toString\u00a0in class\u00a0java.lang.Object Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method User &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;User&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6,&quot;i35&quot;:6,&quot;i36&quot;:6,&quot;i37&quot;:6,&quot;i38&quot;:6,&quot;i39&quot;:6,&quot;i40&quot;:6,&quot;i41&quot;:6,&quot;i42&quot;:6,&quot;i43&quot;:6,&quot;i44&quot;:6,&quot;i45&quot;:6,&quot;i46&quot;:6,&quot;i47&quot;:6,&quot;i48&quot;:6,&quot;i49&quot;:6,&quot;i50&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface User All Superinterfaces: java.lang.Comparable&lt;User&gt;, java.io.Serializable, TwitterResponse public interface User extends java.lang.Comparable&lt;User&gt;, TwitterResponse, java.io.Serializable A data interface representing Basic user information element Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.lang.String getBiggerProfileImageURL()\u00a0 java.lang.String getBiggerProfileImageURLHttps()\u00a0 java.util.Date getCreatedAt()\u00a0 java.lang.String getDescription() Returns the description of the user URLEntity[] getDescriptionURLEntities() Returns URL entities for user description. int getFavouritesCount()\u00a0 int getFollowersCount() Returns the number of followers int getFriendsCount() Returns the number of users the user follows (AKA &quot;followings&quot;) long getId() Returns the id of the user java.lang.String getLang() Returns the preferred language of the user int getListedCount() Returns the number of public lists the user is listed on, or -1 if the count is unavailable. java.lang.String getLocation() Returns the location of the user java.lang.String getMiniProfileImageURL()\u00a0 java.lang.String getMiniProfileImageURLHttps()\u00a0 java.lang.String getName() Returns the name of the user java.lang.String getOriginalProfileImageURL()\u00a0 java.lang.String getOriginalProfileImageURLHttps()\u00a0 java.lang.String getProfileBackgroundColor()\u00a0 java.lang.String getProfileBackgroundImageURL()\u00a0 java.lang.String getProfileBackgroundImageUrlHttps()\u00a0 java.lang.String getProfileBannerIPadRetinaURL()\u00a0 java.lang.String getProfileBannerIPadURL()\u00a0 java.lang.String getProfileBannerMobileRetinaURL()\u00a0 java.lang.String getProfileBannerMobileURL()\u00a0 java.lang.String getProfileBannerRetinaURL()\u00a0 java.lang.String getProfileBannerURL()\u00a0 java.lang.String getProfileImageURL() Returns the profile image url of the user java.lang.String getProfileImageURLHttps()\u00a0 java.lang.String getProfileLinkColor()\u00a0 java.lang.String getProfileSidebarBorderColor()\u00a0 java.lang.String getProfileSidebarFillColor()\u00a0 java.lang.String getProfileTextColor()\u00a0 java.lang.String getScreenName() Returns the screen name of the user Status getStatus() Returns the current status of the user This can be null if the instance if from Status.getUser(). int getStatusesCount()\u00a0 java.lang.String getTimeZone()\u00a0 java.lang.String getURL() Returns the url of the user URLEntity getURLEntity() Returns URL entity for user's URL. int getUtcOffset()\u00a0 java.lang.String[] getWithheldInCountries() Returns the list of country codes where the user is withheld boolean isContributorsEnabled() Tests if the user is enabling contributors boolean isDefaultProfile() Tests if the user has not altered the theme or background boolean isDefaultProfileImage() Tests if the user has not uploaded their own avatar boolean isFollowRequestSent() Returns true if the authenticating user has requested to follow this user, otherwise false. boolean isGeoEnabled()\u00a0 boolean isProfileBackgroundTiled()\u00a0 boolean isProfileUseBackgroundImage()\u00a0 boolean isProtected() Test if the user status is protected boolean isShowAllInlineMedia()\u00a0 boolean isTranslator()\u00a0 boolean isVerified()\u00a0 Methods inherited from interface\u00a0java.lang.Comparable compareTo Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getId long\u00a0getId() Returns the id of the user Returns: the id of the user getName java.lang.String\u00a0getName() Returns the name of the user Returns: the name of the user getScreenName java.lang.String\u00a0getScreenName() Returns the screen name of the user Returns: the screen name of the user getLocation java.lang.String\u00a0getLocation() Returns the location of the user Returns: the location of the user getDescription java.lang.String\u00a0getDescription() Returns the description of the user Returns: the description of the user isContributorsEnabled boolean\u00a0isContributorsEnabled() Tests if the user is enabling contributors Returns: if the user is enabling contributors Since: Twitter4J 2.1.2 getProfileImageURL java.lang.String\u00a0getProfileImageURL() Returns the profile image url of the user Returns: the profile image url of the user getBiggerProfileImageURL java.lang.String\u00a0getBiggerProfileImageURL() getMiniProfileImageURL java.lang.String\u00a0getMiniProfileImageURL() getOriginalProfileImageURL java.lang.String\u00a0getOriginalProfileImageURL() getProfileImageURLHttps java.lang.String\u00a0getProfileImageURLHttps() getBiggerProfileImageURLHttps java.lang.String\u00a0getBiggerProfileImageURLHttps() getMiniProfileImageURLHttps java.lang.String\u00a0getMiniProfileImageURLHttps() getOriginalProfileImageURLHttps java.lang.String\u00a0getOriginalProfileImageURLHttps() isDefaultProfileImage boolean\u00a0isDefaultProfileImage() Tests if the user has not uploaded their own avatar Returns: if the user has not uploaded their own avatar getURL java.lang.String\u00a0getURL() Returns the url of the user Returns: the url of the user isProtected boolean\u00a0isProtected() Test if the user status is protected Returns: true if the user status is protected getFollowersCount int\u00a0getFollowersCount() Returns the number of followers Returns: the number of followers Since: Twitter4J 1.0.4 getStatus Status\u00a0getStatus() Returns the current status of the user This can be null if the instance if from Status.getUser(). Returns: current status of the user Since: Twitter4J 2.1.1 getProfileBackgroundColor java.lang.String\u00a0getProfileBackgroundColor() getProfileTextColor java.lang.String\u00a0getProfileTextColor() getProfileLinkColor java.lang.String\u00a0getProfileLinkColor() getProfileSidebarFillColor java.lang.String\u00a0getProfileSidebarFillColor() getProfileSidebarBorderColor java.lang.String\u00a0getProfileSidebarBorderColor() isProfileUseBackgroundImage boolean\u00a0isProfileUseBackgroundImage() isDefaultProfile boolean\u00a0isDefaultProfile() Tests if the user has not altered the theme or background Returns: if the user has not altered the theme or background isShowAllInlineMedia boolean\u00a0isShowAllInlineMedia() getFriendsCount int\u00a0getFriendsCount() Returns the number of users the user follows (AKA &quot;followings&quot;) Returns: the number of users the user follows getCreatedAt java.util.Date\u00a0getCreatedAt() getFavouritesCount int\u00a0getFavouritesCount() getUtcOffset int\u00a0getUtcOffset() getTimeZone java.lang.String\u00a0getTimeZone() getProfileBackgroundImageURL java.lang.String\u00a0getProfileBackgroundImageURL() getProfileBackgroundImageUrlHttps java.lang.String\u00a0getProfileBackgroundImageUrlHttps() getProfileBannerURL java.lang.String\u00a0getProfileBannerURL() Returns: profile banner URL Since: Twitter4J 3.0.0 getProfileBannerRetinaURL java.lang.String\u00a0getProfileBannerRetinaURL() Returns: profile banner retina URL Since: Twitter4J 3.0.0 getProfileBannerIPadURL java.lang.String\u00a0getProfileBannerIPadURL() Returns: profile banner iPad URL Since: Twitter4J 3.0.0 getProfileBannerIPadRetinaURL java.lang.String\u00a0getProfileBannerIPadRetinaURL() Returns: profile banner iPad retina URL Since: Twitter4J 3.0.0 getProfileBannerMobileURL java.lang.String\u00a0getProfileBannerMobileURL() Returns: profile banner mobile URL Since: Twitter4J 3.0.0 getProfileBannerMobileRetinaURL java.lang.String\u00a0getProfileBannerMobileRetinaURL() Returns: profile banner mobile retina URL Since: Twitter4J 3.0.0 isProfileBackgroundTiled boolean\u00a0isProfileBackgroundTiled() getLang java.lang.String\u00a0getLang() Returns the preferred language of the user Returns: the preferred language of the user Since: Twitter4J 2.1.2 getStatusesCount int\u00a0getStatusesCount() isGeoEnabled boolean\u00a0isGeoEnabled() Returns: the user is enabling geo location Since: Twitter4J 2.0.10 isVerified boolean\u00a0isVerified() Returns: returns true if the user is a verified celebrity Since: Twitter4J 2.0.10 isTranslator boolean\u00a0isTranslator() Returns: returns true if the user is a translator Since: Twitter4J 2.1.9 getListedCount int\u00a0getListedCount() Returns the number of public lists the user is listed on, or -1 if the count is unavailable. Returns: the number of public lists the user is listed on. Since: Twitter4J 2.1.4 isFollowRequestSent boolean\u00a0isFollowRequestSent() Returns true if the authenticating user has requested to follow this user, otherwise false. Returns: true if the authenticating user has requested to follow this user. Since: Twitter4J 2.1.4 getDescriptionURLEntities URLEntity[]\u00a0getDescriptionURLEntities() Returns URL entities for user description. Returns: URL entities for user description Since: Twitter4J 3.0.3 getURLEntity URLEntity\u00a0getURLEntity() Returns URL entity for user's URL. Returns: URL entity for user's URL. Since: Twitter4J 3.0.3 getWithheldInCountries java.lang.String[]\u00a0getWithheldInCountries() Returns the list of country codes where the user is withheld Returns: list of country codes where the tweet is withheld - null if not withheld Since: Twitter4j 4.0.3 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UserList &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UserList&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface UserList All Superinterfaces: java.lang.Comparable&lt;UserList&gt;, java.io.Serializable, TwitterResponse public interface UserList extends java.lang.Comparable&lt;UserList&gt;, TwitterResponse, java.io.Serializable A data interface representing Basic list information element Author: Dan Checkoway - dcheckoway at gmail.com Field Summary Fields inherited from interface\u00a0twitter4j.TwitterResponse NONE, READ, READ_WRITE, READ_WRITE_DIRECTMESSAGES Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description java.util.Date getCreatedAt()\u00a0 java.lang.String getDescription() Returns the description of the list java.lang.String getFullName() Returns the full name of the list long getId() Returns the id of the list int getMemberCount() Returns the member count of the list java.lang.String getName() Returns the name of the list java.lang.String getSlug() Returns the slug of the list int getSubscriberCount() Returns the subscriber count of the list java.net.URI getURI() Returns the uri of the list User getUser() Returns the user of the list boolean isFollowing() Returns if the authenticated user is following the list boolean isPublic() tests if the list is public Methods inherited from interface\u00a0java.lang.Comparable compareTo Methods inherited from interface\u00a0twitter4j.TwitterResponse getAccessLevel, getRateLimitStatus Method Detail getId long\u00a0getId() Returns the id of the list Returns: the id of the list getName java.lang.String\u00a0getName() Returns the name of the list Returns: the name of the list getFullName java.lang.String\u00a0getFullName() Returns the full name of the list Returns: the full name of the list getSlug java.lang.String\u00a0getSlug() Returns the slug of the list Returns: the slug of the list getDescription java.lang.String\u00a0getDescription() Returns the description of the list Returns: the description of the list getSubscriberCount int\u00a0getSubscriberCount() Returns the subscriber count of the list Returns: the subscriber count of the list getMemberCount int\u00a0getMemberCount() Returns the member count of the list Returns: the member count of the list getURI java.net.URI\u00a0getURI() Returns the uri of the list Returns: the uri of the list isPublic boolean\u00a0isPublic() tests if the list is public Returns: if the list is public getUser User\u00a0getUser() Returns the user of the list Returns: the user of the list isFollowing boolean\u00a0isFollowing() Returns if the authenticated user is following the list Returns: if the authenticated user is following the list getCreatedAt java.util.Date\u00a0getCreatedAt() Returns: the date created the list Since: Twitter4J 4.0.1 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UserMentionEntity &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UserMentionEntity&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface UserMentionEntity All Superinterfaces: java.io.Serializable, TweetEntity public interface UserMentionEntity extends TweetEntity, java.io.Serializable A data interface representing one single user mention entity. Since: Twitter4J 2.1.9 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description int getEnd() Returns the index of the end character of the user mention. long getId() Returns the user id mentioned in the status. java.lang.String getName() Returns the name mentioned in the status. java.lang.String getScreenName() Returns the screen name mentioned in the status. int getStart() Returns the index of the start character of the user mention. java.lang.String getText() Returns the screen name mentioned in the status. Method Detail getText java.lang.String\u00a0getText() Returns the screen name mentioned in the status. This method implementation is to meet TweetEntity interface and the behavior is equivalent to getScreenName() Specified by: getText\u00a0in interface\u00a0TweetEntity Returns: the screen name mentioned in the status getName java.lang.String\u00a0getName() Returns the name mentioned in the status. Returns: the name mentioned in the status getScreenName java.lang.String\u00a0getScreenName() Returns the screen name mentioned in the status. Returns: the screen name mentioned in the status getId long\u00a0getId() Returns the user id mentioned in the status. Returns: the user id mentioned in the status getStart int\u00a0getStart() Returns the index of the start character of the user mention. Specified by: getStart\u00a0in interface\u00a0TweetEntity Returns: the index of the start character of the user mention getEnd int\u00a0getEnd() Returns the index of the end character of the user mention. Specified by: getEnd\u00a0in interface\u00a0TweetEntity Returns: the index of the end character of the user mention Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UserStream &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UserStream&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface UserStream All Superinterfaces: StatusStream All Known Implementing Classes: UserStreamImpl interface UserStream extends StatusStream Since: Twitter4J 2.1.3 Author: Yusuke Yamamoto - yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void close()\u00a0 void next(UserStreamListener\u00a0listener) Reads next element from this stream. Methods inherited from interface\u00a0twitter4j.StatusStream next Method Detail next void\u00a0next(UserStreamListener\u00a0listener) throws TwitterException Reads next element from this stream. Parameters: listener - a UserStreamListener implementation Throws: TwitterException - when the end of the stream has been reached. java.lang.IllegalStateException - when the end of the stream had been reached. close void\u00a0close() throws java.io.IOException Specified by: close\u00a0in interface\u00a0StatusStream Throws: java.io.IOException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UserStreamAdapter &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UserStreamAdapter&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class UserStreamAdapter java.lang.Object twitter4j.StatusAdapter twitter4j.UserStreamAdapter All Implemented Interfaces: StatusListener, StreamListener, UserStreamListener public class UserStreamAdapter extends StatusAdapter implements UserStreamListener Since: Twitter4J 2.1.3 Author: yusuke at mac.com Constructor Summary Constructors\u00a0 Constructor and Description UserStreamAdapter()\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void onBlock(User\u00a0source, User\u00a0blockedUser)\u00a0 void onDeletionNotice(long\u00a0directMessageId, long\u00a0userId)\u00a0 void onDirectMessage(DirectMessage\u00a0directMessage)\u00a0 void onException(java.lang.Exception\u00a0ex)\u00a0 void onFavorite(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFollow(User\u00a0source, User\u00a0followedUser)\u00a0 void onFriendList(long[]\u00a0friendIds)\u00a0 void onQuotedTweet(User\u00a0source, User\u00a0target, Status\u00a0quotingTweet)\u00a0 void onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus)\u00a0 void onUnblock(User\u00a0source, User\u00a0unblockedUser)\u00a0 void onUnfavorite(User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus)\u00a0 void onUnfollow(User\u00a0source, User\u00a0unfollowedUser)\u00a0 void onUserDeletion(long\u00a0deletedUser)\u00a0 void onUserListCreation(User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListDeletion(User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberAddition(User\u00a0addedMember, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberDeletion(User\u00a0deletedMember, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListSubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUnsubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUpdate(User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserProfileUpdate(User\u00a0updatedUser)\u00a0 void onUserSuspension(long\u00a0suspendedUser)\u00a0 Methods inherited from class\u00a0twitter4j.StatusAdapter onDeletionNotice, onScrubGeo, onStallWarning, onStatus, onTrackLimitationNotice Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Methods inherited from interface\u00a0twitter4j.StatusListener onDeletionNotice, onScrubGeo, onStallWarning, onStatus, onTrackLimitationNotice Constructor Detail UserStreamAdapter public\u00a0UserStreamAdapter() Method Detail onDeletionNotice public\u00a0void\u00a0onDeletionNotice(long\u00a0directMessageId, long\u00a0userId) Specified by: onDeletionNotice\u00a0in interface\u00a0UserStreamListener onFriendList public\u00a0void\u00a0onFriendList(long[]\u00a0friendIds) Specified by: onFriendList\u00a0in interface\u00a0UserStreamListener Parameters: friendIds - friend ids onFavorite public\u00a0void\u00a0onFavorite(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Specified by: onFavorite\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event target - target user of the event favoritedStatus - status favorited onFollow public\u00a0void\u00a0onFollow(User\u00a0source, User\u00a0followedUser) Specified by: onFollow\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event followedUser - user followed onUnfollow public\u00a0void\u00a0onUnfollow(User\u00a0source, User\u00a0unfollowedUser) Specified by: onUnfollow\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event unfollowedUser - user unfollowed onUnfavorite public\u00a0void\u00a0onUnfavorite(User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus) Specified by: onUnfavorite\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event target - target user of the event unfavoritedStatus - status unfavorited onDirectMessage public\u00a0void\u00a0onDirectMessage(DirectMessage\u00a0directMessage) Specified by: onDirectMessage\u00a0in interface\u00a0UserStreamListener Parameters: directMessage - direct message onUserListMemberAddition public\u00a0void\u00a0onUserListMemberAddition(User\u00a0addedMember, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListMemberAddition\u00a0in interface\u00a0UserStreamListener Parameters: addedMember - member added listOwner - owner of the list list - the list onUserListMemberDeletion public\u00a0void\u00a0onUserListMemberDeletion(User\u00a0deletedMember, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListMemberDeletion\u00a0in interface\u00a0UserStreamListener Parameters: deletedMember - user deleted listOwner - owner of the list list - the list onUserListSubscription public\u00a0void\u00a0onUserListSubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListSubscription\u00a0in interface\u00a0UserStreamListener Parameters: subscriber - the user subscribed listOwner - owner of the list list - the list onUserListUnsubscription public\u00a0void\u00a0onUserListUnsubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListUnsubscription\u00a0in interface\u00a0UserStreamListener Parameters: subscriber - the user subscribed listOwner - owner of the list list - the list onUserListCreation public\u00a0void\u00a0onUserListCreation(User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListCreation\u00a0in interface\u00a0UserStreamListener Parameters: listOwner - owner of the list list - the list onUserListUpdate public\u00a0void\u00a0onUserListUpdate(User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListUpdate\u00a0in interface\u00a0UserStreamListener Parameters: listOwner - owner of the list list - the list onUserListDeletion public\u00a0void\u00a0onUserListDeletion(User\u00a0listOwner, UserList\u00a0list) Specified by: onUserListDeletion\u00a0in interface\u00a0UserStreamListener Parameters: listOwner - owner of the list list - the list onUserProfileUpdate public\u00a0void\u00a0onUserProfileUpdate(User\u00a0updatedUser) Specified by: onUserProfileUpdate\u00a0in interface\u00a0UserStreamListener Parameters: updatedUser - updated user onUserSuspension public\u00a0void\u00a0onUserSuspension(long\u00a0suspendedUser) Specified by: onUserSuspension\u00a0in interface\u00a0UserStreamListener Parameters: suspendedUser - suspended user id onUserDeletion public\u00a0void\u00a0onUserDeletion(long\u00a0deletedUser) Specified by: onUserDeletion\u00a0in interface\u00a0UserStreamListener Parameters: deletedUser - deleted user id onBlock public\u00a0void\u00a0onBlock(User\u00a0source, User\u00a0blockedUser) Specified by: onBlock\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event blockedUser - the user blocked onUnblock public\u00a0void\u00a0onUnblock(User\u00a0source, User\u00a0unblockedUser) Specified by: onUnblock\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event unblockedUser - the user unblocked onRetweetedRetweet public\u00a0void\u00a0onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus) Specified by: onRetweetedRetweet\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event target - target user of the event retweetedStatus - status retweeted retweet onFavoritedRetweet public\u00a0void\u00a0onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Specified by: onFavoritedRetweet\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event target - target user of the event favoritedStatus - status favorited retweet onQuotedTweet public\u00a0void\u00a0onQuotedTweet(User\u00a0source, User\u00a0target, Status\u00a0quotingTweet) Specified by: onQuotedTweet\u00a0in interface\u00a0UserStreamListener Parameters: source - source user of the event target - target user of the event quotingTweet - status quoting the tweet onException public\u00a0void\u00a0onException(java.lang.Exception\u00a0ex) Specified by: onException\u00a0in interface\u00a0StreamListener Overrides: onException\u00a0in class\u00a0StatusAdapter Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UserStreamImpl &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UserStreamImpl&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10,&quot;i2&quot;:10,&quot;i3&quot;:10,&quot;i4&quot;:10,&quot;i5&quot;:10,&quot;i6&quot;:10,&quot;i7&quot;:10,&quot;i8&quot;:10,&quot;i9&quot;:10,&quot;i10&quot;:10,&quot;i11&quot;:10,&quot;i12&quot;:10,&quot;i13&quot;:10,&quot;i14&quot;:10,&quot;i15&quot;:10,&quot;i16&quot;:10,&quot;i17&quot;:10,&quot;i18&quot;:10,&quot;i19&quot;:10,&quot;i20&quot;:10,&quot;i21&quot;:10,&quot;i22&quot;:10,&quot;i23&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class UserStreamImpl java.lang.Object twitter4j.StatusStreamBase twitter4j.StatusStreamImpl twitter4j.UserStreamImpl All Implemented Interfaces: StatusStream, UserStream final class UserStreamImpl extends StatusStreamImpl implements UserStream Since: Twitter4J 2.1.8 Author: Yusuke Yamamoto - yusuke at mac.com Nested Class Summary Nested classes/interfaces inherited from class\u00a0twitter4j.StatusStreamBase StatusStreamBase.StreamEvent Field Summary Fields inherited from class\u00a0twitter4j.StatusStreamImpl EMPTY, line Fields inherited from class\u00a0twitter4j.StatusStreamBase CONF, logger Constructor Summary Constructors\u00a0 Constructor and Description UserStreamImpl(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf)\u00a0 UserStreamImpl(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description void next(UserStreamListener\u00a0listener) Reads next element from this stream. protected void onBlock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onDirectMessage(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onFavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onFavoritedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 protected void onFollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onFriends(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onQuotedTweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 (package private) void onRetweetedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 protected void onScrubGeo(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onSender(JSONObject\u00a0json, StreamListener[]\u00a0listeners)\u00a0 protected void onUnblock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUnfavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners)\u00a0 protected void onUnfollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserDeletion(long\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListCreation(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListDestroyed(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListMemberAddition(JSONObject\u00a0addedMember, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListMemberDeletion(JSONObject\u00a0deletedMember, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListSubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListUnsubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserListUpdated(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserSuspension(long\u00a0target, StreamListener[]\u00a0listeners)\u00a0 protected void onUserUpdate(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners)\u00a0 Methods inherited from class\u00a0twitter4j.StatusStreamImpl next, next, onClose, onDelete, onException, onLimit, onMessage, onStallWarning, onStatus, parseLine Methods inherited from class\u00a0twitter4j.StatusStreamBase asDirectMessage, asFriendList, asStatus, asUser, asUserList, close, handleNextElement, onDisconnectionNotice, onException Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Methods inherited from interface\u00a0twitter4j.UserStream close Methods inherited from interface\u00a0twitter4j.StatusStream next Constructor Detail UserStreamImpl UserStreamImpl(Dispatcher\u00a0dispatcher, java.io.InputStream\u00a0stream, Configuration\u00a0conf) throws java.io.IOException Throws: java.io.IOException UserStreamImpl UserStreamImpl(Dispatcher\u00a0dispatcher, HttpResponse\u00a0response, Configuration\u00a0conf) throws java.io.IOException Throws: java.io.IOException Method Detail next public\u00a0void\u00a0next(UserStreamListener\u00a0listener) throws TwitterException Description copied from interface:\u00a0UserStream Reads next element from this stream. Specified by: next\u00a0in interface\u00a0UserStream Parameters: listener - a UserStreamListener implementation Throws: TwitterException - when the end of the stream has been reached. onSender protected\u00a0void\u00a0onSender(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onSender\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onDirectMessage protected\u00a0void\u00a0onDirectMessage(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onDirectMessage\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onScrubGeo protected\u00a0void\u00a0onScrubGeo(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onScrubGeo\u00a0in class\u00a0StatusStreamImpl Throws: TwitterException onFriends protected\u00a0void\u00a0onFriends(JSONObject\u00a0json, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onFriends\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onFavorite protected\u00a0void\u00a0onFavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onFavorite\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUnfavorite protected\u00a0void\u00a0onUnfavorite(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUnfavorite\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onFollow protected\u00a0void\u00a0onFollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onFollow\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUnfollow protected\u00a0void\u00a0onUnfollow(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUnfollow\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserListMemberAddition protected\u00a0void\u00a0onUserListMemberAddition(JSONObject\u00a0addedMember, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListMemberAddition\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListMemberDeletion protected\u00a0void\u00a0onUserListMemberDeletion(JSONObject\u00a0deletedMember, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListMemberDeletion\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListSubscription protected\u00a0void\u00a0onUserListSubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListSubscription\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListUnsubscription protected\u00a0void\u00a0onUserListUnsubscription(JSONObject\u00a0source, JSONObject\u00a0owner, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListUnsubscription\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListCreation protected\u00a0void\u00a0onUserListCreation(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListCreation\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListUpdated protected\u00a0void\u00a0onUserListUpdated(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException, JSONException Overrides: onUserListUpdated\u00a0in class\u00a0StatusStreamBase Throws: TwitterException JSONException onUserListDestroyed protected\u00a0void\u00a0onUserListDestroyed(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserListDestroyed\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserUpdate protected\u00a0void\u00a0onUserUpdate(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserUpdate\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserSuspension protected\u00a0void\u00a0onUserSuspension(long\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserSuspension\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUserDeletion protected\u00a0void\u00a0onUserDeletion(long\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUserDeletion\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onBlock protected\u00a0void\u00a0onBlock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onBlock\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onUnblock protected\u00a0void\u00a0onUnblock(JSONObject\u00a0source, JSONObject\u00a0target, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onUnblock\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onRetweetedRetweet void\u00a0onRetweetedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onRetweetedRetweet\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onFavoritedRetweet void\u00a0onFavoritedRetweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onFavoritedRetweet\u00a0in class\u00a0StatusStreamBase Throws: TwitterException onQuotedTweet protected\u00a0void\u00a0onQuotedTweet(JSONObject\u00a0source, JSONObject\u00a0target, JSONObject\u00a0targetObject, StreamListener[]\u00a0listeners) throws TwitterException Overrides: onQuotedTweet\u00a0in class\u00a0StatusStreamBase Throws: TwitterException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UserStreamListener &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UserStreamListener&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Interface UserStreamListener All Superinterfaces: StatusListener, StreamListener All Known Implementing Classes: UserStreamAdapter public interface UserStreamListener extends StatusListener Since: Twitter4J 2.1.3 Author: yusuke at mac.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void onBlock(User\u00a0source, User\u00a0blockedUser)\u00a0 void onDeletionNotice(long\u00a0directMessageId, long\u00a0userId)\u00a0 void onDirectMessage(DirectMessage\u00a0directMessage)\u00a0 void onFavorite(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus)\u00a0 void onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedRetweeet)\u00a0 void onFollow(User\u00a0source, User\u00a0followedUser)\u00a0 void onFriendList(long[]\u00a0friendIds)\u00a0 void onQuotedTweet(User\u00a0source, User\u00a0target, Status\u00a0quotingTweet)\u00a0 void onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus)\u00a0 void onUnblock(User\u00a0source, User\u00a0unblockedUser)\u00a0 void onUnfavorite(User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus)\u00a0 void onUnfollow(User\u00a0source, User\u00a0unfollowedUser)\u00a0 void onUserDeletion(long\u00a0deletedUser)\u00a0 void onUserListCreation(User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListDeletion(User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberAddition(User\u00a0addedMember, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListMemberDeletion(User\u00a0deletedMember, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListSubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUnsubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserListUpdate(User\u00a0listOwner, UserList\u00a0list)\u00a0 void onUserProfileUpdate(User\u00a0updatedUser)\u00a0 void onUserSuspension(long\u00a0suspendedUser)\u00a0 Methods inherited from interface\u00a0twitter4j.StatusListener onDeletionNotice, onScrubGeo, onStallWarning, onStatus, onTrackLimitationNotice Methods inherited from interface\u00a0twitter4j.StreamListener onException Method Detail onDeletionNotice void\u00a0onDeletionNotice(long\u00a0directMessageId, long\u00a0userId) onFriendList void\u00a0onFriendList(long[]\u00a0friendIds) Parameters: friendIds - friend ids Since: Twitter4J 2.1.3 onFavorite void\u00a0onFavorite(User\u00a0source, User\u00a0target, Status\u00a0favoritedStatus) Parameters: source - source user of the event target - target user of the event favoritedStatus - status favorited Since: Twitter4J 2.1.3 onUnfavorite void\u00a0onUnfavorite(User\u00a0source, User\u00a0target, Status\u00a0unfavoritedStatus) Parameters: source - source user of the event target - target user of the event unfavoritedStatus - status unfavorited Since: Twitter4J 2.1.3 onFollow void\u00a0onFollow(User\u00a0source, User\u00a0followedUser) Parameters: source - source user of the event followedUser - user followed Since: Twitter4J 2.1.3 onUnfollow void\u00a0onUnfollow(User\u00a0source, User\u00a0unfollowedUser) Parameters: source - source user of the event unfollowedUser - user unfollowed Since: Twitter4J 4.0.1 onDirectMessage void\u00a0onDirectMessage(DirectMessage\u00a0directMessage) Parameters: directMessage - direct message Since: Twitter4J 2.1.3 onUserListMemberAddition void\u00a0onUserListMemberAddition(User\u00a0addedMember, User\u00a0listOwner, UserList\u00a0list) Parameters: addedMember - member added listOwner - owner of the list list - the list Since: Twitter4J 2.1.11 onUserListMemberDeletion void\u00a0onUserListMemberDeletion(User\u00a0deletedMember, User\u00a0listOwner, UserList\u00a0list) Parameters: deletedMember - user deleted listOwner - owner of the list list - the list Since: Twitter4J 2.1.11 onUserListSubscription void\u00a0onUserListSubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Parameters: subscriber - the user subscribed listOwner - owner of the list list - the list Since: Twitter4J 2.1.3 onUserListUnsubscription void\u00a0onUserListUnsubscription(User\u00a0subscriber, User\u00a0listOwner, UserList\u00a0list) Parameters: subscriber - the user subscribed listOwner - owner of the list list - the list Since: Twitter4J 2.1.11 onUserListCreation void\u00a0onUserListCreation(User\u00a0listOwner, UserList\u00a0list) Parameters: listOwner - owner of the list list - the list Since: Twitter4J 2.1.3 onUserListUpdate void\u00a0onUserListUpdate(User\u00a0listOwner, UserList\u00a0list) Parameters: listOwner - owner of the list list - the list Since: Twitter4J 2.1.3 onUserListDeletion void\u00a0onUserListDeletion(User\u00a0listOwner, UserList\u00a0list) Parameters: listOwner - owner of the list list - the list Since: Twitter4J 2.1.3 onUserProfileUpdate void\u00a0onUserProfileUpdate(User\u00a0updatedUser) Parameters: updatedUser - updated user Since: Twitter4J 2.1.9 onUserSuspension void\u00a0onUserSuspension(long\u00a0suspendedUser) Parameters: suspendedUser - suspended user id Since: Twitter4J 4.0.3 onUserDeletion void\u00a0onUserDeletion(long\u00a0deletedUser) Parameters: deletedUser - deleted user id Since: Twitter4J 4.0.3 onBlock void\u00a0onBlock(User\u00a0source, User\u00a0blockedUser) Parameters: source - source user of the event blockedUser - the user blocked Since: Twitter4J 2.1.3 onUnblock void\u00a0onUnblock(User\u00a0source, User\u00a0unblockedUser) Parameters: source - source user of the event unblockedUser - the user unblocked Since: Twitter4J 2.1.3 onRetweetedRetweet void\u00a0onRetweetedRetweet(User\u00a0source, User\u00a0target, Status\u00a0retweetedStatus) Parameters: source - source user of the event target - target user of the event retweetedStatus - status retweeted retweet Since: Twitter4J 4.0.4 onFavoritedRetweet void\u00a0onFavoritedRetweet(User\u00a0source, User\u00a0target, Status\u00a0favoritedRetweeet) Parameters: source - source user of the event target - target user of the event favoritedRetweeet - status favorited retweet Since: Twitter4J 4.0.4 onQuotedTweet void\u00a0onQuotedTweet(User\u00a0source, User\u00a0target, Status\u00a0quotingTweet) Parameters: source - source user of the event target - target user of the event quotingTweet - status quoting the tweet Since: Twitter4J 4.0.4 Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UsersResources &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UsersResources&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface UsersResources All Known Subinterfaces: Twitter All Known Implementing Classes: TwitterImpl public interface UsersResources Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description User createBlock(long\u00a0userId) Blocks the user specified in the ID parameter as the authenticating user. User createBlock(java.lang.String\u00a0screenName) Blocks the user specified in the ID parameter as the authenticating user. User createMute(long\u00a0userId) Mutes the user specified in the ID parameter as the authenticating user. User createMute(java.lang.String\u00a0screenName) Mutes the user specified in the screen name parameter as the authenticating user. User destroyBlock(long\u00a0userId) Un-blocks the user specified in the ID parameter as the authenticating user. User destroyBlock(java.lang.String\u00a0screen_name) Un-blocks the user specified in the ID parameter as the authenticating user. User destroyMute(long\u00a0userId) Un-mutes the user specified in the ID parameter as the authenticating user. User destroyMute(java.lang.String\u00a0screenName) Un-mutes the user specified in the screen name parameter as the authenticating user. AccountSettings getAccountSettings() Returns the current trend, geo, language, timezone and sleep time information for the authenticating user. IDs getBlocksIDs() Returns an array of numeric user ids the authenticating user is blocking. IDs getBlocksIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is blocking. PagableResponseList&lt;User&gt; getBlocksList() Returns a list of user objects that the authenticating user is blocking. PagableResponseList&lt;User&gt; getBlocksList(long\u00a0cursor) Returns a list of user objects that the authenticating user is blocking. ResponseList&lt;User&gt; getContributees(long\u00a0userId) Returns an array of users that the specified user can contribute to. ResponseList&lt;User&gt; getContributees(java.lang.String\u00a0screenName) Returns an array of users that the specified user can contribute to. ResponseList&lt;User&gt; getContributors(long\u00a0userId) Returns an array of users who can contribute to the specified account. ResponseList&lt;User&gt; getContributors(java.lang.String\u00a0screenName) Returns an array of users who can contribute to the specified account. IDs getMutesIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is muting. PagableResponseList&lt;User&gt; getMutesList(long\u00a0cursor) Returns a list of user objects that the authenticating user is muting. ResponseList&lt;User&gt; lookupUsers(long...\u00a0ids) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. ResponseList&lt;User&gt; lookupUsers(java.lang.String...\u00a0screenNames) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. void removeProfileBanner() Removes the uploaded profile banner for the authenticating user. ResponseList&lt;User&gt; searchUsers(java.lang.String\u00a0query, int\u00a0page) Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. User showUser(long\u00a0userId) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. User showUser(java.lang.String\u00a0screenName) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. AccountSettings updateAccountSettings(java.lang.Integer\u00a0trendLocationWoeid, java.lang.Boolean\u00a0sleepTimeEnabled, java.lang.String\u00a0startSleepTime, java.lang.String\u00a0endSleepTime, java.lang.String\u00a0timeZone, java.lang.String\u00a0lang) Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. User updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. User updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. User updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. void updateProfileBanner(java.io.File\u00a0image) Uploads a profile banner on behalf of the authenticating user. void updateProfileBanner(java.io.InputStream\u00a0image) Uploads a profile banner on behalf of the authenticating user. User updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. User updateProfileImage(java.io.File\u00a0image) Updates the authenticating user's profile image. User updateProfileImage(java.io.InputStream\u00a0image) Updates the authenticating user's profile image. User verifyCredentials() Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Method Detail getAccountSettings AccountSettings\u00a0getAccountSettings() throws TwitterException Returns the current trend, geo, language, timezone and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Returns: the current trend, geo and sleep time information for the authenticating user. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.9 See Also: GET account/settings Twitter Developers verifyCredentials User\u00a0verifyCredentials() throws TwitterException Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid. This method calls https://api.twitter.com/1.1/account/verify_credentials.json Returns: user Throws: TwitterException - when Twitter service or network is unavailable, or if supplied credential is wrong (TwitterException.getStatusCode() == 401) Since: Twitter4J 2.0.0 See Also: GET account/verify_credentials Twitter Developers updateAccountSettings AccountSettings\u00a0updateAccountSettings(java.lang.Integer\u00a0trendLocationWoeid, java.lang.Boolean\u00a0sleepTimeEnabled, java.lang.String\u00a0startSleepTime, java.lang.String\u00a0endSleepTime, java.lang.String\u00a0timeZone, java.lang.String\u00a0lang) throws TwitterException Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Parameters: trendLocationWoeid - Optional. The Yahoo! Where On Earth ID to use as the user's default trend location. sleepTimeEnabled - Optional. Whether sleep time is enabled for the user startSleepTime - Optional. The hour that sleep time should begin if it is enabled. endSleepTime - Optional. The hour that sleep time should end if it is enabled. timeZone - Optional. The timezone dates and times should be displayed in for the user. lang - Optional. The language which Twitter should render in for this user. (two letter ISO 639-1) Returns: the current trend, geo and sleep time information for the authenticating user. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.2.4 See Also: POST account/settings Twitter Developers updateProfile User\u00a0updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) throws TwitterException Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. Only the parameters specified(non-null) will be updated. This method calls https://api.twitter.com/1.1/account/update_profile.json Parameters: name - Optional. Maximum of 20 characters. url - Optional. Maximum of 100 characters. Will be prepended with &quot;http://&quot; if not present. location - Optional. Maximum of 30 characters. The contents are not normalized or geocoded in any way. description - Optional. Maximum of 160 characters. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.8 See Also: POST account/update_profile Twitter Developers updateProfileBackgroundImage User\u00a0updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) throws TwitterException Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forceably scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) Since: Twitter4J 2.1.0 See Also: POST account/update_profile_background_image Twitter Developers updateProfileBackgroundImage User\u00a0updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) throws TwitterException Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forceably scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) Since: Twitter4J 2.1.11 See Also: POST account/update_profile_background_image Twitter Developers updateProfileColors User\u00a0updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) throws TwitterException Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. Each parameter's value must be a valid hexidecimal value, and may be either three or six characters (ex: #fff or #ffffff). This method calls https://api.twitter.com/1.1/account/update_profile_colors.json Parameters: profileBackgroundColor - optional, can be null profileTextColor - optional, can be null profileLinkColor - optional, can be null profileSidebarFillColor - optional, can be null profileSidebarBorderColor - optional, can be null Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.0 See Also: POST account/update_profile_colors Twitter Developers updateProfileImage User\u00a0updateProfileImage(java.io.File\u00a0image) throws TwitterException Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) Since: Twitter4J 2.1.0 See Also: POST account/update_profile_image Twitter Developers updateProfileImage User\u00a0updateProfileImage(java.io.InputStream\u00a0image) throws TwitterException Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Returns: the updated user Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) Since: Twitter4J 2.1.11 See Also: POST account/update_profile_image Twitter Developers getBlocksList PagableResponseList&lt;User&gt;\u00a0getBlocksList() throws TwitterException Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.json Returns: a list of user objects that the authenticating user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.4 See Also: GET blocks/blocking Twitter Developers getBlocksList PagableResponseList&lt;User&gt;\u00a0getBlocksList(long\u00a0cursor) throws TwitterException Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.json Parameters: cursor - Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Returns: a list of user objects that the authenticating user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.4 See Also: GET blocks/blocking Twitter Developers getBlocksIDs IDs\u00a0getBlocksIDs() throws TwitterException Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/ids Returns: Returns an array of numeric user ids the authenticating user is blocking. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.4 See Also: GET blocks/ids Twitter Developers getBlocksIDs IDs\u00a0getBlocksIDs(long\u00a0cursor) throws TwitterException Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/ids Parameters: cursor - cursor Returns: Returns an array of numeric user ids the authenticating user is blocking. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.2 See Also: GET blocks/ids Twitter Developers createBlock User\u00a0createBlock(long\u00a0userId) throws TwitterException Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create/[id].json Parameters: userId - the ID of the user to block Returns: the blocked user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: POST blocks/create Twitter Developers createBlock User\u00a0createBlock(java.lang.String\u00a0screenName) throws TwitterException Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create/[id].json Parameters: screenName - the screen_name of the user to block Returns: the blocked user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST blocks/create Twitter Developers destroyBlock User\u00a0destroyBlock(long\u00a0userId) throws TwitterException Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/destroy/[id].json Parameters: userId - the ID of the user to block Returns: the unblocked user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST blocks/destroy Twitter Developers destroyBlock User\u00a0destroyBlock(java.lang.String\u00a0screen_name) throws TwitterException Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/destroy/[id].json Parameters: screen_name - the screen_name of the user to block Returns: the unblocked user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.0.1 See Also: POST blocks/destroy Twitter Developers getMutesList PagableResponseList&lt;User&gt;\u00a0getMutesList(long\u00a0cursor) throws TwitterException Returns a list of user objects that the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/list Parameters: cursor - Causes the list of muted users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Returns: a list of user objects that the authenticating user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET blocks/blocking Twitter Developers getMutesIDs IDs\u00a0getMutesIDs(long\u00a0cursor) throws TwitterException Returns an array of numeric user ids the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/ids Parameters: cursor - Causes the list of muted users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Returns: Returns an array of numeric user ids the authenticating user is muting. Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: GET blocks/ids Twitter Developers createMute User\u00a0createMute(long\u00a0userId) throws TwitterException Mutes the user specified in the ID parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Parameters: userId - the user_id of the user to mute Returns: the muted user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: POST mutes/users/create Twitter Developers createMute User\u00a0createMute(java.lang.String\u00a0screenName) throws TwitterException Mutes the user specified in the screen name parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Parameters: screenName - the screen_name of the user to mute Returns: the muted user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: POST mutes/users/create Twitter Developers destroyMute User\u00a0destroyMute(long\u00a0userId) throws TwitterException Un-mutes the user specified in the ID parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Parameters: userId - the ID of the user to mute Returns: the unmuted user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: POST mutes/users/destroy Twitter Developers destroyMute User\u00a0destroyMute(java.lang.String\u00a0screenName) throws TwitterException Un-mutes the user specified in the screen name parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Parameters: screenName - the screen_name of the user to mute Returns: the unmuted user Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 4.0.2 See Also: POST mutes/users/destroy Twitter Developers lookupUsers ResponseList&lt;User&gt;\u00a0lookupUsers(long...\u00a0ids) throws TwitterException Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Parameters: ids - Specifies the screen names of the users to return. Returns: users Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET users/lookup Twitter Developers lookupUsers ResponseList&lt;User&gt;\u00a0lookupUsers(java.lang.String...\u00a0screenNames) throws TwitterException Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Parameters: screenNames - Specifies the screen names of the users to return. Returns: users Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.1 See Also: GET users/lookup Twitter Developers showUser User\u00a0showUser(long\u00a0userId) throws TwitterException Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Parameters: userId - the ID of the user for whom to request the detail Returns: users Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 2.1.0 See Also: GET users/show Twitter Developers showUser User\u00a0showUser(java.lang.String\u00a0screenName) throws TwitterException Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Parameters: screenName - the screen name of the user for whom to request the detail Returns: User Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/show Twitter Developers searchUsers ResponseList&lt;User&gt;\u00a0searchUsers(java.lang.String\u00a0query, int\u00a0page) throws TwitterException Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. This method calls https://api.twitter.com/1.1/users/search.json Parameters: query - The query to run against people search. page - Specifies the page of results to retrieve. Number of statuses per page is fixed to 20. Returns: the list of Users matches the provided Throws: TwitterException - when Twitter service or network is unavailable See Also: GET users/search Twitter Developers getContributees ResponseList&lt;User&gt;\u00a0getContributees(long\u00a0userId) throws TwitterException Returns an array of users that the specified user can contribute to. Parameters: userId - The user id of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers getContributees ResponseList&lt;User&gt;\u00a0getContributees(java.lang.String\u00a0screenName) throws TwitterException Returns an array of users that the specified user can contribute to. Parameters: screenName - The screen name of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers getContributors ResponseList&lt;User&gt;\u00a0getContributors(long\u00a0userId) throws TwitterException Returns an array of users who can contribute to the specified account. Parameters: userId - The user id of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers getContributors ResponseList&lt;User&gt;\u00a0getContributors(java.lang.String\u00a0screenName) throws TwitterException Returns an array of users who can contribute to the specified account. Parameters: screenName - The screen name of the user for whom to return results for Returns: list of contributors Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers removeProfileBanner void\u00a0removeProfileBanner() throws TwitterException Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success. This method calls https://api.twitter.com/1.1/account/remove_profile_banner.json Throws: TwitterException - when Twitter service or network is unavailable Since: Twitter4J 3.0.0 See Also: POST account/remove_profile_banner Twitter Developers updateProfileBanner void\u00a0updateProfileBanner(java.io.File\u00a0image) throws TwitterException Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) Since: Twitter4J 3.0.0 See Also: POST account/update_profile_banner Twitter Developers updateProfileBanner void\u00a0updateProfileBanner(java.io.InputStream\u00a0image) throws TwitterException Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Throws: TwitterException - when Twitter service or network is unavailable, or when the specified file is not found (FileNotFoundException will be nested), or when the specified file object in not representing a file (IOException will be nested) Since: Twitter4J 3.0.0 See Also: POST account/update_profile_banner Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method UsersResourcesAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;UsersResourcesAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:6,&quot;i1&quot;:6,&quot;i2&quot;:6,&quot;i3&quot;:6,&quot;i4&quot;:6,&quot;i5&quot;:6,&quot;i6&quot;:6,&quot;i7&quot;:6,&quot;i8&quot;:6,&quot;i9&quot;:6,&quot;i10&quot;:6,&quot;i11&quot;:6,&quot;i12&quot;:6,&quot;i13&quot;:6,&quot;i14&quot;:6,&quot;i15&quot;:6,&quot;i16&quot;:6,&quot;i17&quot;:6,&quot;i18&quot;:6,&quot;i19&quot;:6,&quot;i20&quot;:6,&quot;i21&quot;:6,&quot;i22&quot;:6,&quot;i23&quot;:6,&quot;i24&quot;:6,&quot;i25&quot;:6,&quot;i26&quot;:6,&quot;i27&quot;:6,&quot;i28&quot;:6,&quot;i29&quot;:6,&quot;i30&quot;:6,&quot;i31&quot;:6,&quot;i32&quot;:6,&quot;i33&quot;:6,&quot;i34&quot;:6}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],4:[&quot;t3&quot;,&quot;Abstract Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.api Interface UsersResourcesAsync All Known Subinterfaces: AsyncTwitter All Known Implementing Classes: AsyncTwitterImpl public interface UsersResourcesAsync Author: Joern Huxhorn - jhuxhorn at googlemail.com Method Summary All Methods\u00a0Instance Methods\u00a0Abstract Methods\u00a0 Modifier and Type Method and Description void createBlock(long\u00a0userId) Blocks the user specified in the ID parameter as the authenticating user. void createBlock(java.lang.String\u00a0screenName) Blocks the user specified in the ID parameter as the authenticating user. void createMute(long\u00a0userId) Mutes the user specified in the ID parameter as the authenticating user. void createMute(java.lang.String\u00a0screenName) Mutes the user specified in the screen name parameter as the authenticating user. void destroyBlock(long\u00a0userId) Un-blocks the user specified in the ID parameter as the authenticating user. void destroyBlock(java.lang.String\u00a0screenName) Un-blocks the user specified in the ID parameter as the authenticating user. void destroyMute(long\u00a0userId) Un-mutes the user specified in the ID parameter as the authenticating user. void destroyMute(java.lang.String\u00a0screenName) Un-mutes the user specified in the screen name parameter as the authenticating user. void getAccountSettings() Returns the current trend, geo and sleep time information for the authenticating user. void getBlocksIDs() Returns an array of numeric user ids the authenticating user is blocking. void getBlocksIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is blocking. void getBlocksList() Returns a list of user objects that the authenticating user is blocking. void getBlocksList(long\u00a0cursor) Returns a list of user objects that the authenticating user is blocking. void getContributees(long\u00a0userId) Returns an array of users that the specified user can contribute to. void getContributees(java.lang.String\u00a0screenName) Returns an array of users that the specified user can contribute to. void getContributors(long\u00a0userId) Returns an array of users who can contribute to the specified account. void getContributors(java.lang.String\u00a0screenName) Returns an array of users who can contribute to the specified account. void getMutesIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is muting. void getMutesList(long\u00a0cursor) Returns a list of user objects that the authenticating user is muting. void lookupUsers(long...\u00a0ids) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. void lookupUsers(java.lang.String...\u00a0screenNames) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. void removeProfileBanner() Removes the uploaded profile banner for the authenticating user. void searchUsers(java.lang.String\u00a0query, int\u00a0page) Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. void showUser(long\u00a0userId) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. void showUser(java.lang.String\u00a0screenName) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. void updateAccountSettings(java.lang.Integer\u00a0trendLocationWoeid, java.lang.Boolean\u00a0sleepTimeEnabled, java.lang.String\u00a0startSleepTime, java.lang.String\u00a0endSleepTime, java.lang.String\u00a0timeZone, java.lang.String\u00a0lang) Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. void updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. void updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. void updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. void updateProfileBanner(java.io.File\u00a0image) Uploads a profile banner on behalf of the authenticating user. void updateProfileBanner(java.io.InputStream\u00a0image) Uploads a profile banner on behalf of the authenticating user. void updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. void updateProfileImage(java.io.File\u00a0image) Updates the authenticating user's profile image. void updateProfileImage(java.io.InputStream\u00a0image) Updates the authenticating user's profile image. void verifyCredentials() Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Method Detail getAccountSettings void\u00a0getAccountSettings() Returns the current trend, geo and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Since: Twitter4J 2.1.9 See Also: GET account/settings Twitter Developers verifyCredentials void\u00a0verifyCredentials() Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid. This method calls https://api.twitter.com/1.1/account/verify_credentials.json Since: Twitter4J 2.1.3 See Also: GET account/verify_credentials Twitter Developers updateAccountSettings void\u00a0updateAccountSettings(java.lang.Integer\u00a0trendLocationWoeid, java.lang.Boolean\u00a0sleepTimeEnabled, java.lang.String\u00a0startSleepTime, java.lang.String\u00a0endSleepTime, java.lang.String\u00a0timeZone, java.lang.String\u00a0lang) Updates the current trend, geo, language, timezone and sleep time information for the authenticating user. This method has not been finalized and the interface is subject to change in incompatible ways. This method calls https://api.twitter.com/1.1/account/settings.json Parameters: trendLocationWoeid - Optional. The Yahoo! Where On Earth ID to use as the user's default trend location. sleepTimeEnabled - Optional. Whether sleep time is enabled for the user startSleepTime - Optional. The hour that sleep time should begin if it is enabled. endSleepTime - Optional. The hour that sleep time should end if it is enabled. timeZone - Optional. The timezone dates and times should be displayed in for the user. lang - Optional. The language which Twitter should render in for this user. (two letter ISO 639-1) Since: Twitter4J 2.2.4 See Also: POST account/settings Twitter Developers updateProfile void\u00a0updateProfile(java.lang.String\u00a0name, java.lang.String\u00a0url, java.lang.String\u00a0location, java.lang.String\u00a0description) Sets values that users are able to set under the &quot;Account&quot; tab of their settings page. Only the parameters specified(non-null) will be updated. Parameters: name - Optional. Maximum of 20 characters. url - Optional. Maximum of 100 characters. Will be prepended with &quot;http://&quot; if not present. location - Optional. Maximum of 30 characters. The contents are not normalized or geocoded in any way. description - Optional. Maximum of 160 characters. Since: Twitter4J 2.1.8 See Also: POST account/update_profile Twitter Developers updateProfileBackgroundImage void\u00a0updateProfileBackgroundImage(java.io.File\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forcibly scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. Since: Twitter4J 2.1.0 See Also: POST account/update_profile_background_image Twitter Developers updateProfileBackgroundImage void\u00a0updateProfileBackgroundImage(java.io.InputStream\u00a0image, boolean\u00a0tile) Updates the authenticating user's profile background image. This method calls https://api.twitter.com/1.1/account/update_profile_background_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size. Images with width larger than 2048 pixels will be forcibly scaled down. tile - If set to true the background image will be displayed tiled. The image will not be tiled otherwise. Since: Twitter4J 2.1.11 See Also: POST account/update_profile_background_image Twitter Developers updateProfileColors void\u00a0updateProfileColors(java.lang.String\u00a0profileBackgroundColor, java.lang.String\u00a0profileTextColor, java.lang.String\u00a0profileLinkColor, java.lang.String\u00a0profileSidebarFillColor, java.lang.String\u00a0profileSidebarBorderColor) Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. Each parameter's value must be a valid hexadecimal value, and may be either three or six characters (ex: #fff or #ffffff). This method calls https://api.twitter.com/1.1/account/update_profile_colors Parameters: profileBackgroundColor - optional, can be null profileTextColor - optional, can be null profileLinkColor - optional, can be null profileSidebarFillColor - optional, can be null profileSidebarBorderColor - optional, can be null Since: Twitter4J 2.0.0 See Also: POST account/update_profile_colors Twitter Developers updateProfileImage void\u00a0updateProfileImage(java.io.File\u00a0image) Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Since: Twitter4J 2.1.0 See Also: POST account/update_profile_image Twitter Developers updateProfileImage void\u00a0updateProfileImage(java.io.InputStream\u00a0image) Updates the authenticating user's profile image. This method calls https://api.twitter.com/1.1/account/update_profile_image.json Parameters: image - Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down. Since: Twitter4J 2.1.11 See Also: POST account/update_profile_image Twitter Developers getBlocksList void\u00a0getBlocksList() Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.xml Since: Twitter4J 2.0.4 See Also: GET blocks/blocking Twitter Developers getBlocksList void\u00a0getBlocksList(long\u00a0cursor) Returns a list of user objects that the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking.xml Parameters: cursor - Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Since: Twitter4J 2.0.4 See Also: GET blocks/blocking Twitter Developers getBlocksIDs void\u00a0getBlocksIDs() Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking/ids Since: Twitter4J 2.0.4 See Also: GET blocks/ids Twitter Developers getBlocksIDs void\u00a0getBlocksIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is blocking. This method calls https://api.twitter.com/1.1/blocks/blocking/ids Parameters: cursor - cursor Since: Twitter4J 3.0.2 See Also: GET blocks/ids Twitter Developers createBlock void\u00a0createBlock(long\u00a0userId) Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Parameters: userId - the screen_name of the user to block Since: Twitter4J 2.1.0 See Also: POST blocks/create Twitter Developers createBlock void\u00a0createBlock(java.lang.String\u00a0screenName) Blocks the user specified in the ID parameter as the authenticating user. Returns the blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Parameters: screenName - the screen_name of the user to block Since: Twitter4J 2.0.1 See Also: POST blocks/create Twitter Developers destroyBlock void\u00a0destroyBlock(long\u00a0userId) Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Parameters: userId - the ID of the user to block Since: Twitter4J 2.1.0 See Also: POST blocks/destroy Twitter Developers destroyBlock void\u00a0destroyBlock(java.lang.String\u00a0screenName) Un-blocks the user specified in the ID parameter as the authenticating user. Returns the un-blocked user in the requested format when successful. This method calls https://api.twitter.com/1.1/blocks/create%C2%A0 Parameters: screenName - the screen_name of the user to block Since: Twitter4J 2.0.1 See Also: POST blocks/destroy Twitter Developers getMutesList void\u00a0getMutesList(long\u00a0cursor) Returns a list of user objects that the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/list Parameters: cursor - Causes the list of blocked users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Since: Twitter4J 4.0.2 See Also: GET mutes/users/list Twitter Developers getMutesIDs void\u00a0getMutesIDs(long\u00a0cursor) Returns an array of numeric user ids the authenticating user is muting. This method calls https://api.twitter.com/1.1/mutes/users/ids Parameters: cursor - Causes the list of muted users to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first &quot;page.&quot; Since: Twitter4J 4.0.2 See Also: GET mutes/users/ids Twitter Developers createMute void\u00a0createMute(long\u00a0userId) Mutes the user specified in the ID parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Parameters: userId - the ID of the user to mute Since: Twitter4J 4.0.2 See Also: POST mutes/users/create Twitter Developers createMute void\u00a0createMute(java.lang.String\u00a0screenName) Mutes the user specified in the screen name parameter as the authenticating user. Returns the muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/create Parameters: screenName - the screen_name of the user to mute Since: Twitter4J 4.0.2 See Also: POST mutes/users/create Twitter Developers destroyMute void\u00a0destroyMute(long\u00a0userId) Un-mutes the user specified in the ID parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Parameters: userId - the ID of the user to mute Since: Twitter4J 4.0.2 See Also: POST mutes/users/destroy Twitter Developers destroyMute void\u00a0destroyMute(java.lang.String\u00a0screenName) Un-mutes the user specified in the screen name parameter as the authenticating user. Returns the un-muted user in the requested format when successful. This method calls https://api.twitter.com/1.1/mutes/users/destroy Parameters: screenName - the screen_name of the user to mute Since: Twitter4J 4.0.2 See Also: POST mutes/users/destroy Twitter Developers lookupUsers void\u00a0lookupUsers(long...\u00a0ids) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Parameters: ids - Specifies the screen names of the users to retrieve. Since: Twitter4J 2.1.1 See Also: GET users/lookup Twitter Developers lookupUsers void\u00a0lookupUsers(java.lang.String...\u00a0screenNames) Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two. The author's most recent status (if the authenticating user has permission) will be returned inline. This method calls https://api.twitter.com/1.1/users/lookup.json Parameters: screenNames - Specifies the screen names of the users to retrieve. Since: Twitter4J 2.1.1 See Also: GET users/lookup Twitter Developers showUser void\u00a0showUser(long\u00a0userId) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Parameters: userId - the ID of the user for whom to request the retrieve See Also: GET users/show Twitter Developers showUser void\u00a0showUser(java.lang.String\u00a0screenName) Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline. This method calls https://api.twitter.com/1.1/users/show.json Parameters: screenName - the screen name of the user for whom to request the detail See Also: GET users/show Twitter Developers searchUsers void\u00a0searchUsers(java.lang.String\u00a0query, int\u00a0page) Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API. Usage note: It is only possible to retrieve the first 1000 matches from this API. This method calls https://api.twitter.com/1.1/users/search.json Parameters: query - The query to run against people search. page - Specifies the page of results to retrieve. Number of statuses per page is fixed to 20. See Also: GET users/search Twitter Developers getContributees void\u00a0getContributees(long\u00a0userId) Returns an array of users that the specified user can contribute to. Parameters: userId - The user id of the user for whom to return results for Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers getContributees void\u00a0getContributees(java.lang.String\u00a0screenName) Returns an array of users that the specified user can contribute to. Parameters: screenName - The screen name of the user for whom to return results for Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers getContributors void\u00a0getContributors(long\u00a0userId) Returns an array of users who can contribute to the specified account. Parameters: userId - The user id of the user for whom to return results for Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers getContributors void\u00a0getContributors(java.lang.String\u00a0screenName) Returns an array of users who can contribute to the specified account. Parameters: screenName - The screen name of the user for whom to return results for Since: Twitter4J 3.0.0 See Also: GET users/contributors Twitter Developers removeProfileBanner void\u00a0removeProfileBanner() Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success. This method calls https://api.twitter.com/1.1/account/remove_profile_banner.json Since: Twitter4J 3.0.0 See Also: POST account/remove_profile_banner Twitter Developers updateProfileBanner void\u00a0updateProfileBanner(java.io.File\u00a0image) Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Since: Twitter4J 3.0.0 See Also: POST account/update_profile_banner Twitter Developers updateProfileBanner void\u00a0updateProfileBanner(java.io.InputStream\u00a0image) Uploads a profile banner on behalf of the authenticating user. For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Images will be resized for a number of display options. Users with an uploaded profile banner will have a profile_banner_url node in their Users objects. More information about sizing variations can be found in User Profile Images and Banners. Profile banner images are processed asynchronously. The profile_banner_url and its variant sizes will not necessary be available directly after upload. This method calls https://api.twitter.com/1.1/account/update_profile_banner.json Parameters: image - For best results, upload an &lt;5MB image that is exactly 1252px by 626px. Since: Twitter4J 3.0.0 See Also: POST account/update_profile_banner Twitter Developers Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Version &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;Version&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class Version java.lang.Object twitter4j.Version public final class Version extends java.lang.Object Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static java.lang.String TITLE\u00a0 private static java.lang.String VERSION\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description private Version()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static java.lang.String getVersion()\u00a0 static void main(java.lang.String[]\u00a0args) prints the version string Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail VERSION private static final\u00a0java.lang.String VERSION See Also: Constant Field Values TITLE private static final\u00a0java.lang.String TITLE See Also: Constant Field Values Constructor Detail Version private\u00a0Version() Method Detail getVersion public static\u00a0java.lang.String\u00a0getVersion() main public static\u00a0void\u00a0main(java.lang.String[]\u00a0args) prints the version string Parameters: args - will be just ignored. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method VersionAsync &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;VersionAsync&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class VersionAsync java.lang.Object twitter4j.VersionAsync public final class VersionAsync extends java.lang.Object Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static java.lang.String TITLE\u00a0 private static java.lang.String VERSION\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description private VersionAsync()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static java.lang.String getVersion()\u00a0 static void main(java.lang.String[]\u00a0args) prints the version string Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail VERSION private static final\u00a0java.lang.String VERSION See Also: Constant Field Values TITLE private static final\u00a0java.lang.String TITLE See Also: Constant Field Values Constructor Detail VersionAsync private\u00a0VersionAsync() Method Detail getVersion public static\u00a0java.lang.String\u00a0getVersion() main public static\u00a0void\u00a0main(java.lang.String[]\u00a0args) prints the version string Parameters: args - will be just ignored. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method VersionStream &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;VersionStream&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:9,&quot;i1&quot;:9}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],1:[&quot;t1&quot;,&quot;Static Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j Class VersionStream java.lang.Object twitter4j.VersionStream public final class VersionStream extends java.lang.Object Author: Yusuke Yamamoto - yusuke at mac.com Field Summary Fields\u00a0 Modifier and Type Field and Description private static java.lang.String TITLE\u00a0 private static java.lang.String VERSION\u00a0 Constructor Summary Constructors\u00a0 Modifier Constructor and Description private VersionStream()\u00a0 Method Summary All Methods\u00a0Static Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description static java.lang.String getVersion()\u00a0 static void main(java.lang.String[]\u00a0args) prints the version string Methods inherited from class\u00a0java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail VERSION private static final\u00a0java.lang.String VERSION See Also: Constant Field Values TITLE private static final\u00a0java.lang.String TITLE See Also: Constant Field Values Constructor Detail VersionStream private\u00a0VersionStream() Method Detail getVersion public static\u00a0java.lang.String\u00a0getVersion() main public static\u00a0void\u00a0main(java.lang.String[]\u00a0args) prints the version string Parameters: args - will be just ignored. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method YFrogUpload &lt;!-- try { if (location.href.indexOf('is-external=true') == -1) { parent.document.title=&quot;YFrogUpload&quot;; } } catch(err) { } //--&gt; var methods = {&quot;i0&quot;:10,&quot;i1&quot;:10}; var tabs = {65535:[&quot;t0&quot;,&quot;All Methods&quot;],2:[&quot;t2&quot;,&quot;Instance Methods&quot;],8:[&quot;t4&quot;,&quot;Concrete Methods&quot;]}; var altColor = &quot;altColor&quot;; var rowColor = &quot;rowColor&quot;; var tableTab = &quot;tableTab&quot;; var activeTableTab = &quot;activeTableTab&quot;; JavaScript is disabled on your browser. Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_top&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method twitter4j.media Class YFrogUpload java.lang.Object twitter4j.media.AbstractImageUploadImpl twitter4j.media.YFrogUpload All Implemented Interfaces: ImageUpload class YFrogUpload extends AbstractImageUploadImpl Since: Twitter4J 2.1.8 Author: R\u00e9my Rakic - remy.rakic at gmail.com, Takao Nakaguchi - takao.nakaguchi at gmail.com, withgod - noname at withgod.jp Field Summary Fields inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl apiKey, headers, httpResponse, image, message, oauth, postParameter, TWITTER_VERIFY_CREDENTIALS_JSON_V1_1, uploadUrl Constructor Summary Constructors\u00a0 Constructor and Description YFrogUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth)\u00a0 Method Summary All Methods\u00a0Instance Methods\u00a0Concrete Methods\u00a0 Modifier and Type Method and Description protected java.lang.String postUpload()\u00a0 protected void preUpload()\u00a0 Methods inherited from class\u00a0twitter4j.media.AbstractImageUploadImpl appendHttpParameters, equals, generateVerifyCredentialsAuthorizationHeader, generateVerifyCredentialsAuthorizationURL, hashCode, toString, upload, upload, upload, upload Methods inherited from class\u00a0java.lang.Object clone, finalize, getClass, notify, notifyAll, wait, wait, wait Constructor Detail YFrogUpload public\u00a0YFrogUpload(Configuration\u00a0conf, OAuthAuthorization\u00a0oauth) Method Detail postUpload protected\u00a0java.lang.String\u00a0postUpload() throws TwitterException Specified by: postUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException preUpload protected\u00a0void\u00a0preUpload() throws TwitterException Specified by: preUpload\u00a0in class\u00a0AbstractImageUploadImpl Throws: TwitterException Skip navigation links Overview Package Class Tree Deprecated Index Help Prev\u00a0Class Next\u00a0Class Frames No\u00a0Frames All\u00a0Classes &lt;!-- allClassesLink = document.getElementById(&quot;allclasses_navbar_bottom&quot;); if(window==top) { allClassesLink.style.display = &quot;block&quot;; } else { allClassesLink.style.display = &quot;none&quot;; } //--&gt; Summary:\u00a0 Nested\u00a0\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method Detail:\u00a0 Field\u00a0\u00a0 Constr\u00a0\u00a0 Method 
